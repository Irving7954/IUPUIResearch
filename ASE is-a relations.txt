is-a relation from bigrams: [['relevant source code', 'source code'], ['program source code', 'source code'], ['traditional software engineering', 'software engineering'], ['empirical software engineering', 'software engineering'], ['modern software development', 'software development'], ['rigorous software development', 'software development'], ['industrial case study', 'case study'], ['available case study', 'case study'], ['effective fault localization', 'fault localization'], ['software product line', 'product line'], ['symbolic model checker', 'model checker'], ['software model checker', 'model checker'], ['random test case', 'test case'], ['regression test suite', 'test suite'], ['graphical user interface', 'user interface'], ['program state space', 'state space'], ['unit test generation', 'test generation'], ['automatic test generation', 'test generation'], ['software test generation', 'test generation'], ['practical tool support', 'tool support'], ['functional programming language', 'programming language'], ['deductive program synthesis', 'program synthesis'], ['development life cycle', 'life cycle'], ['software life cycle', 'life cycle'], ['software development process', 'development process'], ['interactive theorem prover', 'theorem prover'], ['code clone detection', 'clone detection'], ['formal specification language', 'specification language'], ['bidirectional model transformation', 'model transformation'], ['software development environment', 'development environment'], ['change impact analysis', 'impact analysis'], ['perform impact analysis', 'impact analysis'], ['test case generation', 'case generation'], ['product line engineering', 'line engineering'], ['software configuration management', 'configuration management'], ['automatic code generation', 'code generation'], ['natural language processing', 'language processing'], ['static program analysis', 'program analysis'], ['state explosion problem', 'explosion problem'], ['space explosion problem', 'explosion problem'], ['tool demonstration video', 'demonstration video'], ['control flow graph', 'flow graph'], ['analysis class diagrams', 'class diagrams'], ['test input generation', 'input generation'], ['message sequence chart', 'sequence chart'], ['formal concept analysis', 'concept analysis'], ['state space explosion', 'space explosion'], ['program synthesis system', 'synthesis system'], ['guide future research', 'future research'], ['association rule mining', 'rule mining'], ['large software project', 'software project'], ['constraint logic programming', 'logic programming'], ['input event sequence', 'event sequence'], ['static analysis tool', 'analysis tool'], ['dynamic analysis tool', 'analysis tool'], ['monitor synthesis algorithm', 'synthesis algorithm'], ['partial order reduction', 'order reduction'], ['fault detection capability', 'detection capability'], ['static analysis framework', 'analysis framework'], ['software inspection process', 'inspection process'], ['test suite reduction', 'suite reduction'], ['static analysis technique', 'analysis technique'], ['program analysis technique', 'analysis technique'], ['test generation tool', 'generation tool'], ['software development life', 'development life']]

is-a relation from relational words: {'business process': ['software development'], 'test suite': ['statement coverage'], 'structural coverage': ['branch coverage'], 'visual notation': ['business process'], 'executable artifact': ['source code'], 'clone management': ['clone detection'], 'static analysis': ['symbolic execution'], 'analysis technique': ['symbolic execution'], 'static analysis technique': ['symbolic execution'], 'web service': ['web service', 'service discovery'], 'change request': ['source code', 'bug report'], 'software maintenance': ['program comprehension'], 'software project': ['source code', 'test case']}