4333
software engineering: {1988: 36, 1991: 45, 1994: 43, 1995: 32, 1998: 49, 2005: 150, 2013: 149, 2017: 28, 1989: 25, 1990: 32, 1992: 8, 1993: 19, 1996: 30, 1997: 39, 1999: 43, 2000: 89, 2001: 54, 2002: 61, 2003: 110, 2004: 95, 2007: 79, 2008: 76, 2009: 27, 2010: 115, 2011: 121, 2012: 116, 2015: 237, 2016: 51}
software systems: {1990: 17, 1998: 31, 2007: 23, 2009: 18, 2015: 35, 1988: 10, 1989: 14, 1991: 11, 1992: 9, 1993: 13, 1994: 14, 1995: 2, 1996: 16, 1997: 23, 1999: 31, 2000: 29, 2001: 39, 2002: 30, 2003: 27, 2004: 33, 2005: 19, 2008: 23, 2010: 14, 2011: 16, 2012: 26, 2013: 40, 2016: 7, 2017: 3}
computer science: {1996: 26, 1998: 12, 2001: 38, 1988: 12, 1989: 17, 1990: 7, 1991: 11, 1992: 7, 1993: 21, 1994: 15, 1997: 36, 1999: 36, 2000: 46, 2002: 27, 2003: 33, 2004: 30, 2005: 55, 2007: 26, 2008: 26, 2009: 21, 2010: 6, 2011: 6, 2013: 2, 2015: 14, 2016: 5, 2017: 3}
software quality: {1993: 15, 1994: 8, 1997: 19, 2010: 17, 2015: 25, 1988: 5, 1989: 4, 1990: 10, 1991: 6, 1992: 3, 1996: 18, 1998: 25, 1999: 26, 2000: 24, 2001: 17, 2002: 18, 2003: 19, 2004: 25, 2005: 23, 2007: 11, 2008: 24, 2009: 7, 2011: 33, 2012: 12, 2013: 43, 2016: 15, 2017: 3}
software tools: {1992: 7, 1993: 17, 1994: 10, 2001: 20, 2007: 22, 1988: 21, 1989: 7, 1990: 18, 1991: 8, 1996: 16, 1997: 15, 1998: 16, 1999: 23, 2000: 32, 2002: 25, 2003: 23, 2004: 18, 2005: 30, 2008: 26, 2009: 17, 2010: 20, 2011: 14, 2012: 8, 2013: 18, 2015: 17, 2017: 4}
software architecture: {2000: 29, 2008: 27, 2013: 30, 2015: 25, 1992: 1, 1994: 11, 1995: 3, 1996: 10, 1997: 13, 1998: 9, 1999: 34, 2001: 19, 2002: 31, 2003: 27, 2004: 39, 2005: 23, 2007: 14, 2009: 4, 2010: 39, 2011: 27, 2012: 18, 2016: 13, 2017: 3}
software maintenance: {1988: 4, 1989: 9, 1990: 5, 1991: 6, 1992: 1, 1993: 12, 1994: 7, 1995: 1, 1996: 10, 1997: 10, 1998: 16, 1999: 17, 2000: 12, 2001: 18, 2002: 17, 2003: 9, 2004: 25, 2005: 25, 2007: 13, 2008: 34, 2009: 24, 2010: 15, 2011: 38, 2012: 52, 2013: 34, 2015: 21, 2016: 7, 2017: 7}
application software: {1988: 10, 2001: 25, 2008: 22, 1989: 5, 1990: 10, 1991: 11, 1992: 3, 1993: 9, 1994: 8, 1995: 1, 1996: 12, 1997: 20, 1998: 17, 1999: 23, 2000: 45, 2002: 26, 2003: 21, 2004: 36, 2005: 35, 2007: 21, 2009: 10}
software testing: {1988: 3, 1989: 13, 1990: 4, 1991: 3, 1992: 4, 1993: 10, 1994: 7, 1996: 6, 1997: 16, 1998: 7, 1999: 9, 2000: 22, 2001: 14, 2002: 9, 2003: 18, 2004: 22, 2005: 36, 2007: 24, 2008: 21, 2009: 7, 2010: 9, 2011: 23, 2012: 19, 2013: 9, 2015: 18, 2016: 6, 2017: 5}
software development: {1988: 1, 1989: 2, 1990: 6, 1991: 12, 1992: 1, 1993: 7, 1994: 3, 1995: 2, 1996: 8, 1997: 1, 1998: 12, 1999: 11, 2000: 17, 2001: 5, 2002: 20, 2003: 16, 2004: 18, 2005: 14, 2007: 11, 2008: 10, 2009: 10, 2010: 23, 2011: 24, 2012: 41, 2013: 27, 2015: 24, 2016: 8, 2017: 10}
formal specification: {1998: 9, 2002: 16, 2003: 30, 1989: 2, 1990: 19, 1991: 4, 1992: 1, 1993: 12, 1994: 10, 1995: 1, 1996: 8, 1997: 6, 1999: 13, 2000: 24, 2001: 16, 2004: 21, 2005: 8, 2007: 9, 2008: 11, 2009: 8, 2010: 21, 2011: 22, 2012: 15, 2013: 17, 2015: 11, 2016: 9, 2017: 1}
program testing: {2003: 11, 1988: 4, 1990: 1, 1991: 1, 1993: 8, 1994: 6, 1996: 9, 1998: 5, 1999: 6, 2000: 15, 2001: 10, 2002: 7, 2004: 13, 2005: 15, 2007: 17, 2008: 13, 2009: 8, 2010: 15, 2011: 31, 2012: 30, 2013: 41, 2015: 26, 2016: 15, 2017: 17}
educational institutions: {1988: 3, 1989: 3, 1990: 3, 1991: 2, 1993: 7, 1994: 7, 1996: 1, 1997: 15, 1998: 5, 1999: 6, 2000: 18, 2001: 12, 2002: 8, 2003: 8, 2004: 10, 2005: 15, 2007: 9, 2008: 7, 2009: 4, 2010: 28, 2011: 35, 2012: 39, 2013: 57, 2015: 4}
computer architecture: {1989: 4, 2004: 19, 2013: 17, 2015: 19, 1988: 6, 1990: 4, 1991: 3, 1992: 1, 1993: 3, 1994: 6, 1996: 8, 1997: 17, 1998: 9, 1999: 17, 2000: 17, 2001: 15, 2002: 17, 2003: 18, 2005: 12, 2007: 4, 2008: 10, 2009: 4, 2010: 20, 2011: 14, 2012: 12, 2016: 3, 2017: 1}
unified modeling language: {2004: 16, 1997: 3, 1998: 3, 1999: 3, 2000: 18, 2001: 20, 2002: 12, 2003: 12, 2005: 18, 2007: 18, 2008: 15, 2009: 4, 2010: 24, 2011: 28, 2012: 19, 2013: 19, 2015: 12, 2016: 3, 2017: 2}
source code: {2017: 17, 1988: 1, 1990: 4, 1993: 3, 1994: 2, 1995: 3, 1996: 4, 1998: 4, 1999: 4, 2001: 2, 2002: 10, 2003: 6, 2004: 6, 2005: 3, 2007: 6, 2008: 11, 2009: 6, 2010: 14, 2011: 35, 2012: 31, 2013: 30, 2015: 30, 2016: 13}
project management: {1999: 16, 2009: 8, 1988: 7, 1989: 4, 1990: 6, 1991: 4, 1992: 1, 1993: 6, 1994: 6, 1996: 8, 1997: 6, 1998: 15, 2000: 20, 2001: 5, 2002: 7, 2003: 17, 2004: 6, 2005: 18, 2007: 3, 2008: 6, 2010: 11, 2011: 6, 2012: 13, 2013: 13, 2015: 14, 2016: 2, 2017: 2}
object-oriented programming: {2000: 24, 2003: 18, 2015: 8, 1988: 2, 1990: 3, 1991: 1, 1993: 4, 1994: 2, 1996: 5, 1998: 12, 1999: 12, 2001: 12, 2002: 23, 2004: 22, 2005: 19, 2007: 10, 2008: 9, 2009: 7, 2010: 6, 2011: 8, 2012: 7, 2013: 11, 2016: 4, 2017: 1}
software development management: {1999: 11, 1988: 1, 1989: 4, 1990: 4, 1991: 2, 1992: 3, 1993: 3, 1994: 3, 1996: 10, 1997: 2, 1998: 30, 2000: 18, 2001: 8, 2002: 12, 2003: 18, 2004: 8, 2005: 16, 2007: 6, 2008: 12, 2009: 4, 2010: 10, 2011: 5, 2012: 3, 2013: 15, 2015: 10, 2016: 5, 2017: 2}
data mining: {2001: 3, 1990: 1, 1992: 1, 1993: 3, 1996: 1, 1997: 2, 1998: 2, 1999: 3, 2000: 9, 2002: 4, 2003: 2, 2004: 9, 2005: 2, 2007: 3, 2008: 8, 2009: 6, 2010: 16, 2011: 28, 2012: 43, 2013: 25, 2015: 29, 2016: 10, 2017: 7}
software reusability: {1990: 6, 2000: 22, 2001: 11, 2017: 2, 1989: 3, 1991: 5, 1992: 3, 1993: 8, 1994: 12, 1996: 14, 1997: 3, 1998: 9, 1999: 15, 2002: 14, 2003: 10, 2004: 6, 2005: 14, 2007: 3, 2008: 9, 2009: 6, 2010: 1, 2011: 10, 2012: 8, 2013: 9, 2015: 1}
program diagnostics: {2009: 6, 2011: 24, 1993: 7, 1994: 4, 1996: 6, 1998: 2, 1999: 2, 2001: 4, 2002: 5, 2003: 2, 2004: 7, 2005: 8, 2007: 4, 2008: 10, 2010: 11, 2012: 15, 2013: 23, 2015: 19, 2016: 21, 2017: 13}
software design: {1989: 6, 1991: 5, 1988: 8, 1990: 6, 1992: 3, 1993: 7, 1994: 4, 1996: 6, 1997: 10, 1998: 1, 1999: 8, 2000: 15, 2001: 7, 2002: 12, 2003: 11, 2004: 11, 2005: 22, 2007: 6, 2008: 13, 2009: 2, 2010: 2, 2011: 6, 2012: 3, 2013: 9, 2015: 5, 2016: 2}
programming profession: {1988: 9, 1992: 3, 1989: 8, 1990: 2, 1991: 4, 1993: 4, 1994: 4, 1996: 4, 1997: 6, 1998: 5, 1999: 8, 2000: 9, 2001: 4, 2002: 9, 2003: 11, 2004: 11, 2005: 17, 2007: 18, 2008: 12, 2009: 11, 2010: 2, 2011: 1, 2012: 5, 2013: 4, 2015: 10, 2016: 1, 2017: 1}
program debugging: {2011: 20, 1988: 1, 1991: 1, 1993: 1, 1994: 2, 1996: 1, 1998: 2, 1999: 5, 2000: 1, 2001: 3, 2002: 3, 2003: 3, 2004: 6, 2005: 4, 2007: 3, 2008: 6, 2009: 12, 2010: 6, 2012: 36, 2013: 31, 2015: 6, 2016: 15, 2017: 7}
computer science education: {1991: 2, 1993: 2, 1994: 1, 1999: 1, 2000: 19, 2001: 9, 2002: 1, 2003: 15, 2005: 39, 2007: 15, 2008: 14, 2009: 2, 2010: 3, 2012: 12, 2013: 12, 2015: 27, 2017: 1}
computer bugs: {1988: 2, 1989: 3, 1991: 2, 1992: 1, 1993: 1, 1994: 1, 1996: 1, 1997: 2, 1999: 2, 2000: 1, 2002: 2, 2003: 1, 2005: 3, 2007: 4, 2008: 9, 2009: 9, 2010: 4, 2011: 16, 2012: 27, 2013: 26, 2015: 12, 2016: 23, 2017: 22}
object oriented modeling: {1988: 2, 1989: 2, 1990: 4, 1991: 1, 1992: 2, 1993: 2, 1994: 3, 1996: 8, 1997: 16, 1998: 11, 1999: 9, 2000: 11, 2001: 15, 2002: 9, 2003: 4, 2004: 6, 2005: 12, 2007: 3, 2008: 4, 2010: 10, 2011: 10, 2012: 8, 2013: 4, 2015: 3}
case study: {1999: 8, 2009: 6, 2010: 5, 1988: 1, 1990: 3, 1993: 3, 1994: 1, 1995: 1, 1996: 8, 1997: 1, 1998: 11, 2000: 13, 2001: 16, 2002: 6, 2003: 5, 2004: 1, 2005: 5, 2007: 4, 2008: 4, 2011: 12, 2012: 7, 2013: 14, 2015: 8, 2016: 5, 2017: 2}
program verification: {2005: 9, 2007: 8, 2009: 6, 2015: 7, 1988: 3, 1989: 1, 1990: 4, 1991: 3, 1993: 5, 1994: 1, 1996: 2, 1998: 4, 1999: 4, 2000: 7, 2001: 7, 2002: 5, 2003: 9, 2004: 10, 2008: 10, 2010: 9, 2011: 11, 2012: 6, 2013: 13, 2016: 4, 2017: 1}
software metrics: {2009: 1, 1988: 1, 1989: 2, 1991: 1, 1993: 5, 1996: 4, 1997: 3, 1998: 8, 1999: 3, 2000: 11, 2001: 7, 2002: 3, 2003: 4, 2004: 9, 2005: 8, 2007: 2, 2008: 10, 2010: 12, 2011: 17, 2012: 5, 2013: 21, 2015: 7, 2016: 4}
computer industry: {2004: 8, 1988: 1, 1989: 3, 1990: 3, 1991: 3, 1993: 5, 1994: 3, 1995: 1, 1996: 5, 1997: 10, 1998: 5, 1999: 11, 2000: 15, 2001: 11, 2002: 14, 2003: 10, 2005: 13, 2007: 9, 2008: 9, 2009: 2}
system testing: {2007: 11, 1988: 3, 1989: 8, 1990: 2, 1991: 2, 1992: 3, 1993: 6, 1994: 9, 1996: 3, 1997: 9, 1998: 5, 1999: 8, 2000: 14, 2001: 11, 2002: 4, 2003: 7, 2004: 8, 2005: 11, 2008: 8, 2009: 3, 2011: 1, 2012: 1, 2013: 3}
specification languages: {2004: 11, 1988: 15, 1989: 4, 1990: 5, 1991: 4, 1993: 6, 1994: 4, 1996: 6, 1997: 5, 1998: 1, 1999: 2, 2000: 13, 2001: 11, 2002: 13, 2003: 12, 2005: 4, 2007: 3, 2008: 3, 2010: 5, 2011: 2, 2012: 5, 2013: 2, 2015: 2, 2017: 1}
software reliability: {1993: 8, 2005: 10, 1988: 1, 1989: 3, 1990: 10, 1991: 7, 1994: 2, 1996: 3, 1997: 5, 1998: 1, 1999: 4, 2000: 6, 2001: 3, 2002: 3, 2003: 8, 2004: 6, 2008: 2, 2009: 5, 2010: 5, 2011: 14, 2012: 6, 2013: 7, 2015: 11, 2017: 5}
reverse engineering: {1990: 5, 1991: 1, 1993: 6, 1995: 6, 1996: 3, 1997: 12, 1998: 10, 1999: 12, 2000: 3, 2001: 7, 2002: 3, 2003: 5, 2004: 6, 2005: 15, 2007: 5, 2008: 2, 2009: 1, 2010: 6, 2011: 7, 2012: 5, 2013: 5, 2015: 2, 2017: 2}
computer languages: {1989: 4, 1988: 8, 1990: 4, 1991: 3, 1992: 5, 1993: 2, 1994: 5, 1996: 5, 1997: 10, 1998: 3, 1999: 7, 2000: 9, 2001: 7, 2002: 4, 2003: 3, 2004: 3, 2005: 13, 2007: 7, 2008: 5, 2009: 5, 2010: 2, 2011: 5, 2012: 1, 2013: 2, 2015: 5}
formal verification: {2002: 5, 1988: 3, 1989: 1, 1991: 2, 1992: 1, 1993: 2, 1994: 1, 1998: 5, 1999: 8, 2000: 4, 2001: 5, 2003: 9, 2004: 8, 2005: 3, 2007: 2, 2008: 14, 2009: 1, 2010: 6, 2011: 12, 2012: 10, 2013: 13, 2015: 3, 2016: 1, 2017: 3}
software measurement: {1993: 4, 2009: 2, 1988: 3, 1989: 6, 1990: 7, 1991: 7, 1992: 2, 1996: 4, 1997: 8, 1998: 8, 1999: 8, 2000: 9, 2001: 2, 2002: 3, 2003: 5, 2004: 6, 2005: 4, 2007: 3, 2008: 7, 2010: 2, 2011: 5, 2013: 6, 2015: 6, 2016: 1}
user interfaces: {1988: 5, 1989: 1, 1990: 3, 1991: 6, 1992: 1, 1993: 2, 1994: 6, 1996: 3, 1997: 5, 1998: 3, 1999: 3, 2000: 7, 2001: 4, 2002: 1, 2003: 4, 2004: 6, 2005: 3, 2007: 5, 2008: 3, 2009: 6, 2010: 9, 2011: 7, 2012: 4, 2013: 14, 2015: 4, 2017: 1}
software prototyping: {1988: 4, 1989: 7, 1990: 5, 1991: 3, 1992: 2, 1993: 6, 1996: 6, 1997: 2, 1998: 7, 1999: 3, 2000: 3, 2001: 3, 2002: 2, 2003: 11, 2004: 9, 2005: 4, 2007: 4, 2008: 2, 2009: 4, 2010: 4, 2011: 2, 2012: 6, 2013: 5, 2015: 7, 2016: 1, 2017: 1}
computational modeling: {1988: 2, 1989: 1, 1990: 1, 1993: 1, 1996: 1, 1997: 3, 1998: 3, 2000: 5, 2003: 2, 2004: 3, 2005: 2, 2008: 1, 2010: 13, 2011: 22, 2012: 18, 2013: 15, 2015: 12, 2016: 6, 2017: 2}
computer aided software engineering: {1992: 2, 1988: 3, 1989: 2, 1990: 2, 1991: 2, 1993: 4, 1994: 1, 1996: 5, 1997: 6, 1998: 12, 1999: 11, 2000: 10, 2001: 14, 2002: 7, 2003: 2, 2004: 5, 2005: 12, 2008: 2, 2010: 3, 2011: 4, 2017: 1}
software engineers: {1991: 2, 1992: 3, 1994: 2, 1995: 1, 1996: 2, 1998: 4, 1999: 7, 2002: 3, 2003: 3, 2004: 6, 2005: 5, 2007: 3, 2008: 1, 2009: 3, 2010: 9, 2011: 4, 2012: 13, 2013: 17, 2015: 13, 2016: 4, 2017: 2}
data structures: {1988: 5, 1990: 2, 1991: 1, 1992: 1, 1993: 3, 1996: 1, 1997: 3, 1999: 11, 2000: 4, 2001: 2, 2002: 6, 2003: 1, 2004: 7, 2005: 4, 2007: 4, 2008: 12, 2009: 3, 2010: 4, 2011: 13, 2012: 3, 2013: 12, 2016: 1, 2017: 2}
open source software: {2001: 2, 2011: 6, 2000: 2, 2002: 4, 2003: 7, 2004: 1, 2005: 10, 2007: 10, 2008: 9, 2009: 12, 2010: 1, 2012: 11, 2013: 8, 2015: 10, 2016: 6, 2017: 5}
software system: {2009: 2, 1988: 3, 1991: 1, 1992: 2, 1999: 3, 2000: 2, 2001: 7, 2002: 4, 2003: 8, 2004: 5, 2005: 3, 2007: 3, 2008: 7, 2010: 6, 2011: 12, 2012: 13, 2013: 17, 2016: 2, 2017: 3}
formal specifications: {1988: 5, 1989: 4, 1990: 8, 1991: 2, 1992: 5, 1993: 6, 1994: 5, 1996: 4, 1997: 7, 1998: 4, 1999: 6, 2000: 4, 2001: 11, 2002: 5, 2003: 3, 2004: 3, 2005: 2, 2007: 1, 2008: 3, 2009: 4, 2012: 4, 2013: 2, 2015: 2, 2016: 2}
large-scale systems: {1999: 10, 1988: 2, 1989: 3, 1990: 5, 1991: 3, 1992: 2, 1993: 6, 1994: 4, 1995: 1, 1996: 2, 1997: 4, 1998: 5, 2000: 3, 2001: 7, 2002: 6, 2003: 5, 2004: 7, 2005: 4, 2007: 4, 2008: 5, 2009: 4, 2010: 1, 2011: 3, 2012: 1, 2013: 2, 2015: 2}
graphical user interfaces: {1993: 1, 1995: 2, 1996: 3, 1997: 2, 1998: 1, 1999: 5, 2000: 6, 2001: 3, 2002: 6, 2003: 5, 2004: 1, 2005: 3, 2007: 5, 2008: 3, 2009: 6, 2010: 8, 2011: 4, 2012: 8, 2013: 13, 2015: 9, 2016: 5, 2017: 1}
public domain software: {2011: 8, 2017: 6, 1993: 1, 2002: 1, 2003: 2, 2004: 2, 2005: 6, 2007: 3, 2008: 5, 2009: 3, 2010: 3, 2012: 24, 2013: 18, 2015: 9, 2016: 8}
data analysis: {1993: 4, 1994: 4, 2010: 6, 1989: 4, 1991: 2, 1996: 7, 1997: 5, 1998: 8, 1999: 6, 2000: 3, 2001: 2, 2002: 2, 2003: 8, 2004: 8, 2008: 4, 2009: 4, 2011: 8, 2012: 2, 2013: 5, 2015: 6}
software evolution: {1997: 4, 1998: 1, 1999: 4, 2000: 8, 2001: 8, 2002: 2, 2003: 3, 2004: 5, 2005: 2, 2007: 2, 2008: 9, 2009: 2, 2010: 2, 2011: 12, 2012: 14, 2013: 11, 2015: 8, 2016: 1}
algorithm design and analysis: {1989: 2, 1988: 2, 1992: 1, 1993: 1, 1994: 1, 1996: 2, 1997: 1, 1998: 1, 1999: 5, 2000: 2, 2001: 5, 2002: 2, 2003: 5, 2004: 7, 2005: 8, 2007: 2, 2008: 6, 2009: 5, 2010: 2, 2011: 9, 2012: 5, 2013: 9, 2015: 4, 2016: 7, 2017: 2}
control systems: {1988: 6, 1989: 3, 1990: 3, 1991: 1, 1992: 2, 1993: 1, 1994: 4, 1996: 3, 1997: 6, 1998: 8, 1999: 9, 2000: 7, 2001: 1, 2002: 5, 2003: 5, 2004: 3, 2005: 8, 2007: 3, 2008: 2, 2009: 2, 2010: 4, 2011: 1, 2012: 3, 2013: 4}
programming environments: {2001: 2, 1988: 19, 1989: 2, 1990: 3, 1991: 5, 1992: 1, 1993: 5, 1994: 1, 1996: 8, 1997: 2, 1999: 6, 2000: 3, 2002: 1, 2003: 1, 2004: 1, 2005: 11, 2007: 2, 2008: 5, 2009: 2, 2010: 2, 2011: 2, 2012: 2, 2013: 2, 2015: 4, 2016: 1}
performance analysis: {2004: 7, 2007: 10, 1989: 3, 1991: 2, 1992: 3, 1993: 2, 1994: 1, 1996: 2, 1997: 1, 1998: 2, 1999: 11, 2000: 2, 2001: 6, 2002: 3, 2003: 5, 2005: 2, 2008: 4, 2009: 6, 2010: 2, 2012: 4, 2013: 3, 2015: 4, 2016: 7, 2017: 1}
static analysis: {2011: 17, 1996: 3, 1997: 1, 1999: 4, 2001: 2, 2002: 2, 2003: 1, 2004: 2, 2005: 4, 2007: 1, 2008: 6, 2009: 1, 2010: 6, 2012: 11, 2013: 11, 2015: 6, 2016: 6, 2017: 8}
software libraries: {1989: 4, 1990: 2, 1998: 5, 2001: 9, 2012: 4, 1988: 1, 1991: 1, 1992: 4, 1993: 2, 1994: 4, 1996: 3, 1997: 3, 1999: 5, 2000: 7, 2002: 5, 2003: 1, 2005: 5, 2007: 4, 2008: 6, 2009: 5, 2010: 2, 2011: 1, 2013: 3, 2015: 4, 2017: 1}
test cases: {1991: 3, 1994: 2, 1996: 4, 1999: 4, 2000: 3, 2001: 4, 2002: 3, 2003: 2, 2004: 5, 2005: 3, 2007: 4, 2008: 3, 2009: 1, 2010: 1, 2011: 6, 2012: 10, 2013: 16, 2015: 9, 2016: 5, 2017: 3}
analytical models: {1988: 1, 1989: 1, 1993: 1, 1997: 3, 1999: 1, 2000: 2, 2001: 3, 2004: 3, 2007: 1, 2008: 1, 2009: 1, 2010: 7, 2011: 14, 2012: 14, 2013: 14, 2015: 11, 2016: 8, 2017: 4}
maintenance engineering: {1988: 1, 1991: 1, 1993: 1, 1997: 2, 1998: 1, 1999: 4, 2000: 1, 2001: 4, 2002: 2, 2004: 1, 2005: 2, 2007: 1, 2008: 3, 2009: 2, 2010: 3, 2011: 15, 2012: 14, 2013: 12, 2015: 9, 2016: 5, 2017: 5}
information retrieval: {1990: 1, 1992: 1, 1993: 2, 1994: 1, 1996: 1, 1999: 3, 2000: 1, 2001: 4, 2002: 1, 2003: 4, 2004: 7, 2005: 1, 2008: 3, 2009: 1, 2010: 6, 2011: 13, 2012: 14, 2013: 10, 2015: 4, 2016: 3, 2017: 3}
systems analysis: {1994: 4, 1998: 5, 1991: 4, 1993: 4, 1996: 3, 1999: 2, 2000: 6, 2001: 6, 2002: 2, 2003: 3, 2004: 5, 2005: 16, 2007: 7, 2008: 4, 2009: 3, 2010: 5, 2011: 3, 2015: 1, 2017: 1}
design engineering: {1988: 2, 1989: 4, 1990: 3, 1991: 1, 1992: 1, 1993: 2, 1994: 3, 1996: 3, 1997: 7, 1998: 1, 1999: 5, 2000: 6, 2001: 5, 2002: 5, 2003: 8, 2004: 6, 2005: 9, 2007: 3, 2008: 5, 2009: 1, 2012: 2}
software reuse: {1990: 1, 2017: 1, 1988: 2, 1991: 7, 1992: 5, 1994: 10, 1996: 5, 1997: 3, 1998: 6, 1999: 2, 2000: 6, 2001: 5, 2002: 5, 2003: 2, 2004: 1, 2007: 3, 2008: 1, 2009: 1, 2011: 4, 2012: 6, 2013: 3, 2015: 2}
distributed computing: {1996: 3, 1988: 1, 1989: 29, 1990: 1, 1991: 2, 1992: 12, 1994: 4, 1997: 4, 1998: 2, 1999: 3, 2000: 3, 2001: 1, 2002: 7, 2004: 3, 2005: 3, 2007: 1, 2008: 1, 2012: 1}
information analysis: {1988: 2, 1989: 1, 1990: 2, 1991: 2, 1992: 1, 1993: 2, 1994: 2, 1997: 5, 1998: 4, 1999: 4, 2000: 6, 2001: 6, 2002: 2, 2003: 4, 2004: 9, 2005: 7, 2007: 7, 2008: 9, 2009: 5, 2017: 1}
model checking: {1997: 1, 1999: 1, 2000: 7, 2001: 17, 2002: 2, 2004: 5, 2005: 1, 2007: 2, 2008: 6, 2009: 4, 2010: 1, 2011: 4, 2012: 9, 2013: 12, 2015: 6, 2016: 1, 2017: 1}
automatic testing: {1988: 1, 1989: 1, 1992: 1, 1993: 2, 1994: 2, 1996: 2, 1997: 1, 1999: 4, 2000: 4, 2001: 7, 2002: 2, 2003: 7, 2004: 7, 2005: 8, 2007: 12, 2008: 7, 2009: 6, 2013: 2, 2016: 2}
software development process: {1993: 6, 1988: 5, 1989: 2, 1991: 4, 1992: 1, 1994: 3, 1996: 3, 1998: 6, 2000: 1, 2001: 3, 2002: 3, 2003: 9, 2004: 2, 2005: 1, 2008: 3, 2009: 1, 2010: 5, 2012: 10, 2013: 1, 2015: 6, 2016: 1}
software developers: {2001: 3, 1993: 1, 1995: 1, 1996: 2, 1997: 1, 1998: 1, 1999: 3, 2000: 1, 2002: 7, 2003: 2, 2004: 4, 2007: 1, 2008: 6, 2009: 1, 2010: 5, 2011: 5, 2012: 14, 2013: 7, 2015: 7, 2016: 2, 2017: 1}
mobile computing: {1996: 4, 2016: 8, 1998: 1, 1999: 10, 2000: 5, 2001: 3, 2002: 8, 2004: 2, 2005: 3, 2008: 2, 2010: 1, 2012: 2, 2013: 10, 2015: 11, 2017: 4}
predictive models: {2009: 2, 2010: 3, 1989: 1, 1993: 3, 1996: 4, 1997: 5, 1998: 2, 2000: 3, 2001: 1, 2002: 2, 2003: 1, 2004: 1, 2005: 2, 2007: 2, 2008: 6, 2011: 3, 2012: 7, 2013: 10, 2015: 8, 2016: 6, 2017: 2}
engineering management: {1988: 1, 1991: 6, 1994: 1, 1996: 1, 1997: 1, 1998: 7, 1999: 2, 2000: 5, 2001: 3, 2002: 4, 2003: 3, 2004: 4, 2005: 25, 2007: 3, 2008: 6}
quality assurance: {2010: 8, 1996: 2, 1997: 3, 1998: 5, 1999: 2, 2000: 3, 2001: 4, 2002: 3, 2003: 9, 2004: 5, 2005: 5, 2007: 3, 2008: 4, 2011: 3, 2012: 2, 2013: 6, 2015: 3, 2016: 1}
requirements engineering: {2002: 6, 1994: 2, 1995: 1, 1996: 2, 1997: 2, 1998: 1, 1999: 2, 2000: 4, 2001: 7, 2004: 3, 2005: 4, 2007: 2, 2008: 5, 2010: 3, 2011: 3, 2012: 5, 2013: 5, 2015: 8, 2016: 2, 2017: 3}
software performance: {1988: 3, 1989: 4, 1990: 1, 1991: 3, 1992: 2, 1993: 3, 1994: 2, 1997: 4, 1998: 5, 1999: 4, 2000: 3, 2001: 4, 2002: 4, 2003: 4, 2004: 4, 2005: 6, 2007: 5, 2008: 4, 2009: 1, 2011: 1, 2012: 1, 2013: 1}
software process improvement: {1994: 1, 1995: 1, 1996: 2, 1997: 2, 1998: 4, 1999: 1, 2000: 14, 2001: 4, 2002: 6, 2003: 7, 2004: 5, 2007: 1, 2008: 3, 2009: 1, 2010: 1, 2011: 7, 2012: 6, 2013: 2, 2015: 1}
real time systems: {1988: 4, 1989: 4, 1990: 3, 1991: 1, 1992: 5, 1994: 3, 1996: 1, 1997: 4, 1998: 1, 1999: 6, 2000: 4, 2001: 2, 2002: 5, 2003: 2, 2004: 3, 2005: 4, 2007: 1, 2008: 4, 2009: 2, 2010: 2, 2011: 1, 2012: 4}
statistical analysis: {2005: 2, 1989: 1, 1994: 2, 1996: 1, 1997: 5, 1998: 6, 1999: 3, 2000: 2, 2001: 4, 2003: 1, 2004: 2, 2008: 6, 2009: 4, 2010: 1, 2011: 8, 2012: 5, 2013: 8, 2015: 2, 2016: 2}
electronic mail: {1989: 1, 1992: 1, 1996: 2, 1997: 2, 1998: 4, 2000: 1, 2001: 1, 2002: 1, 2003: 1, 2004: 1, 2005: 2, 2008: 1, 2009: 1, 2010: 2, 2011: 8, 2012: 7, 2013: 9, 2015: 14, 2016: 2, 2017: 3}
configuration management: {2001: 3, 2011: 1, 1989: 1, 1990: 2, 1993: 1, 1994: 2, 1996: 5, 1998: 5, 1999: 4, 2000: 2, 2002: 3, 2003: 4, 2004: 6, 2005: 2, 2007: 2, 2008: 3, 2009: 1, 2010: 2, 2012: 6, 2013: 3, 2015: 3, 2016: 1, 2017: 1}
empirical study: {1993: 1, 1995: 1, 1996: 1, 1997: 1, 1998: 3, 2002: 4, 2003: 1, 2004: 2, 2005: 1, 2007: 3, 2008: 3, 2009: 1, 2010: 1, 2011: 7, 2012: 9, 2013: 6, 2015: 5, 2016: 9, 2017: 4}
security of data: {2005: 5, 1991: 1, 1998: 1, 2002: 2, 2003: 1, 2004: 2, 2007: 4, 2008: 4, 2009: 1, 2010: 2, 2011: 7, 2012: 6, 2013: 8, 2015: 10, 2016: 3, 2017: 5}
performance evaluation: {1988: 1, 1989: 1, 1990: 2, 1991: 3, 1993: 1, 1994: 3, 1996: 4, 1997: 1, 1998: 3, 1999: 3, 2000: 3, 2001: 1, 2002: 2, 2003: 1, 2004: 5, 2005: 5, 2007: 10, 2008: 4, 2009: 6, 2010: 1, 2012: 1}
embedded systems: {1989: 2, 1990: 2, 1997: 1, 1998: 1, 1999: 1, 2000: 2, 2001: 4, 2002: 2, 2003: 2, 2004: 2, 2005: 15, 2007: 1, 2008: 5, 2009: 1, 2010: 2, 2011: 3, 2012: 3, 2013: 5, 2015: 6, 2016: 1}
educational courses: {2000: 5, 2001: 5, 2002: 1, 2003: 8, 2005: 8, 2007: 5, 2008: 2, 2010: 1, 2011: 1, 2012: 7, 2013: 8, 2015: 10}
formal methods: {1988: 1, 1990: 5, 1991: 4, 1993: 5, 1994: 1, 1997: 5, 1998: 3, 1999: 2, 2001: 3, 2002: 2, 2003: 4, 2004: 3, 2005: 2, 2007: 1, 2008: 3, 2010: 3, 2011: 1, 2012: 3, 2013: 4, 2015: 5}
concurrent computing: {1988: 2, 1989: 5, 1990: 2, 1992: 2, 1994: 2, 1996: 3, 1997: 4, 1998: 2, 1999: 2, 2000: 1, 2001: 1, 2002: 3, 2003: 2, 2004: 3, 2005: 1, 2007: 2, 2008: 2, 2009: 3, 2010: 3, 2011: 3, 2012: 2, 2013: 2, 2015: 2, 2016: 4, 2017: 1}
program compilers: {1988: 2, 1993: 1, 1996: 1, 1998: 1, 2000: 5, 2001: 2, 2003: 2, 2005: 2, 2007: 2, 2008: 2, 2009: 3, 2010: 3, 2011: 5, 2012: 10, 2013: 6, 2015: 4, 2016: 5, 2017: 3}
software engineering education: {1991: 2, 1993: 2, 1994: 3, 2000: 4, 2001: 3, 2003: 2, 2005: 13, 2007: 1, 2008: 2, 2010: 1, 2012: 2, 2013: 8, 2015: 16}
web applications: {2001: 2, 2002: 5, 2003: 7, 2007: 2, 2008: 4, 2009: 2, 2010: 2, 2011: 4, 2012: 13, 2013: 3, 2015: 5, 2016: 2, 2017: 8}
natural languages: {1999: 1, 2016: 5, 1988: 2, 1989: 2, 1990: 1, 1993: 2, 1994: 1, 1996: 2, 1997: 1, 2000: 1, 2001: 2, 2002: 2, 2003: 1, 2005: 1, 2007: 3, 2008: 4, 2009: 1, 2010: 2, 2011: 2, 2012: 9, 2013: 8, 2015: 2, 2017: 3}
technology transfer: {1990: 18, 1993: 2, 1994: 4, 1997: 3, 1998: 2, 1999: 2, 2000: 14, 2004: 1, 2005: 3, 2010: 1, 2011: 4, 2012: 1, 2013: 2, 2015: 1}
software process: {1993: 5, 1988: 3, 1989: 1, 1991: 2, 1992: 2, 1994: 2, 1995: 2, 1996: 6, 1997: 5, 1998: 3, 2001: 2, 2002: 6, 2003: 3, 2004: 2, 2005: 1, 2007: 2, 2009: 1, 2011: 4, 2012: 5}
application program interfaces: {2012: 12, 2016: 7, 1996: 1, 2000: 1, 2002: 3, 2003: 3, 2004: 1, 2005: 2, 2007: 2, 2008: 2, 2009: 3, 2010: 3, 2011: 3, 2013: 4, 2015: 4, 2017: 6}
software algorithms: {1988: 1, 1989: 1, 1993: 1, 1996: 1, 1998: 3, 1999: 3, 2000: 2, 2001: 3, 2002: 3, 2003: 1, 2004: 2, 2005: 5, 2007: 4, 2008: 5, 2009: 2, 2010: 4, 2011: 6, 2012: 3, 2013: 2, 2016: 4, 2017: 1}
context modeling: {2004: 2, 2008: 5, 2010: 5, 1988: 1, 1989: 1, 1991: 1, 1992: 1, 1993: 1, 1994: 1, 1996: 1, 1997: 4, 1999: 2, 2000: 5, 2001: 2, 2002: 3, 2005: 1, 2007: 1, 2009: 1, 2011: 3, 2012: 5, 2013: 2, 2015: 6, 2016: 1, 2017: 1}
software fault tolerance: {2009: 5, 1999: 2, 2000: 1, 2003: 6, 2004: 4, 2005: 2, 2007: 4, 2008: 1, 2010: 7, 2011: 3, 2012: 6, 2013: 9, 2015: 4, 2016: 1, 2017: 1}
design patterns: {1996: 5, 1997: 1, 1998: 6, 1999: 5, 2000: 5, 2001: 3, 2002: 9, 2003: 2, 2004: 6, 2005: 1, 2007: 1, 2008: 3, 2011: 1, 2012: 3, 2013: 2, 2016: 2, 2017: 1}
programming languages: {1993: 3, 1994: 1, 1995: 1, 1999: 2, 2000: 3, 2001: 3, 2003: 1, 2004: 5, 2005: 3, 2007: 1, 2009: 2, 2010: 2, 2011: 7, 2012: 3, 2013: 3, 2015: 8, 2016: 3, 2017: 4}
software standards: {2004: 6, 1989: 1, 1991: 1, 1992: 2, 1993: 1, 1994: 2, 1996: 3, 1997: 6, 1998: 3, 1999: 1, 2000: 4, 2001: 6, 2002: 6, 2003: 4, 2005: 2, 2007: 4, 2008: 1, 2009: 1}
risk management: {1988: 1, 1990: 4, 1993: 2, 1996: 4, 1997: 2, 1998: 5, 1999: 4, 2000: 4, 2001: 2, 2002: 2, 2003: 4, 2004: 2, 2005: 3, 2008: 1, 2010: 3, 2011: 2, 2012: 2, 2013: 3, 2015: 3, 2016: 1}
information systems: {1992: 2, 1988: 2, 1989: 1, 1990: 1, 1991: 1, 1995: 1, 1996: 1, 1997: 4, 1998: 3, 1999: 4, 2000: 1, 2001: 1, 2002: 4, 2004: 4, 2005: 8, 2007: 3, 2008: 4, 2010: 5, 2012: 1, 2013: 1, 2015: 1}
software safety: {1993: 3, 2000: 7, 2002: 4, 2005: 6, 1988: 1, 1989: 2, 1990: 5, 1991: 2, 1992: 1, 1996: 2, 1997: 3, 1998: 1, 1999: 2, 2001: 2, 2003: 2, 2004: 4, 2007: 1, 2008: 2, 2011: 3}
operating systems: {1989: 1, 1990: 1, 1991: 1, 1992: 1, 1993: 3, 1994: 4, 1996: 2, 1997: 3, 1998: 1, 1999: 1, 2000: 5, 2001: 2, 2002: 4, 2003: 2, 2004: 3, 2005: 5, 2007: 1, 2008: 2, 2009: 1, 2011: 3, 2012: 1, 2013: 1, 2016: 3, 2017: 2}
software projects: {1998: 5, 1991: 1, 2000: 3, 2001: 2, 2002: 2, 2003: 1, 2004: 2, 2009: 1, 2010: 1, 2011: 2, 2012: 5, 2013: 12, 2015: 12, 2016: 3}
fault detection: {1989: 4, 1992: 1, 1993: 3, 1994: 2, 1995: 2, 1996: 4, 1997: 2, 1998: 2, 2001: 4, 2002: 1, 2003: 5, 2004: 3, 2005: 1, 2007: 2, 2008: 1, 2009: 3, 2012: 2, 2013: 3, 2015: 1, 2016: 6}
natural language processing: {1989: 2, 2007: 3, 2008: 1, 2009: 1, 2010: 3, 2011: 1, 2012: 14, 2013: 9, 2015: 7, 2016: 3, 2017: 8}
dynamic analysis: {1994: 1, 2001: 2, 2002: 2, 2003: 2, 2004: 3, 2005: 2, 2007: 2, 2008: 6, 2010: 2, 2011: 9, 2012: 8, 2013: 4, 2015: 2, 2016: 4, 2017: 3}
software project: {1996: 2, 1998: 5, 2000: 6, 2001: 2, 2002: 2, 2003: 4, 2004: 1, 2005: 1, 2009: 5, 2010: 1, 2011: 5, 2012: 5, 2013: 4, 2015: 2, 2016: 3, 2017: 4}
software components: {2002: 7, 2015: 2, 1992: 1, 1993: 2, 1994: 1, 1996: 1, 1997: 1, 2000: 2, 2001: 3, 2003: 8, 2004: 2, 2005: 3, 2008: 1, 2009: 1, 2010: 4, 2011: 3, 2013: 9}
empirical studies: {2017: 3, 1995: 1, 1997: 3, 1998: 2, 1999: 1, 2000: 1, 2002: 3, 2005: 3, 2007: 1, 2008: 4, 2009: 1, 2010: 2, 2011: 7, 2012: 5, 2013: 7, 2015: 6, 2016: 1}
object oriented programming: {1988: 2, 1990: 1, 1991: 1, 1994: 2, 1997: 1, 1998: 4, 1999: 3, 2000: 3, 2001: 6, 2002: 6, 2003: 4, 2004: 3, 2005: 8, 2008: 3, 2011: 1, 2012: 1, 2013: 1, 2015: 1}
usa councils: {1990: 2, 1994: 1, 1996: 1, 1998: 2, 2001: 3, 2002: 1, 2010: 16, 2011: 18, 2012: 7}
collaborative software: {1994: 1, 1997: 6, 1998: 5, 1999: 4, 1990: 1, 2000: 5, 2001: 4, 2002: 2, 2003: 3, 2005: 9, 2007: 3, 2008: 2, 2009: 3, 2010: 1, 2012: 1}
program analysis: {1995: 1, 1989: 1, 1996: 1, 1998: 1, 2000: 2, 2002: 3, 2003: 2, 2004: 7, 2005: 2, 2008: 1, 2009: 6, 2010: 3, 2011: 5, 2012: 1, 2013: 3, 2015: 3, 2016: 5, 2017: 3}
data models: {2010: 3, 1988: 1, 1989: 1, 1990: 2, 1992: 2, 1997: 1, 1999: 1, 2005: 1, 2011: 6, 2012: 10, 2013: 6, 2015: 8, 2016: 6, 2017: 2}
embedded software: {1988: 2, 1989: 1, 1992: 2, 1994: 3, 1996: 1, 1997: 3, 1998: 3, 1999: 1, 2000: 4, 2001: 3, 2002: 4, 2003: 6, 2004: 4, 2005: 5, 2008: 3, 2009: 1, 2010: 2, 2011: 1, 2012: 1}
development process: {1988: 5, 1989: 1, 1993: 1, 1994: 1, 1995: 1, 1998: 1, 2000: 5, 2001: 3, 2002: 2, 2004: 1, 2005: 3, 2008: 3, 2009: 1, 2010: 1, 2011: 5, 2012: 3, 2013: 6, 2015: 6, 2016: 1}
human factors: {1988: 1, 1991: 1, 1993: 1, 1994: 2, 1997: 1, 1998: 1, 2000: 2, 2001: 3, 2002: 1, 2003: 2, 2004: 1, 2005: 14, 2007: 1, 2008: 2, 2010: 4, 2011: 3, 2012: 4, 2013: 2, 2015: 3, 2016: 1}
java programs: {1999: 5, 2000: 5, 2001: 5, 2002: 3, 2003: 2, 2004: 4, 2005: 2, 2007: 3, 2008: 5, 2009: 2, 2011: 3, 2012: 1, 2013: 6, 2015: 1, 2016: 3}
process design: {1991: 4, 1997: 5, 1988: 1, 1989: 5, 1992: 5, 1993: 1, 1994: 3, 1996: 2, 1998: 4, 1999: 2, 2000: 3, 2001: 3, 2002: 3, 2004: 3, 2005: 3, 2007: 1}
real-time systems: {1988: 5, 1990: 3, 1992: 2, 1994: 3, 1995: 3, 1996: 1, 1998: 3, 1999: 4, 2000: 3, 2002: 3, 2004: 2, 2005: 3, 2008: 4, 2012: 3, 2013: 4, 2015: 2}
novel approach: {1990: 1, 1993: 2, 1996: 1, 2000: 2, 2001: 1, 2007: 1, 2008: 1, 2009: 3, 2010: 3, 2011: 8, 2012: 8, 2013: 7, 2015: 4, 2016: 2, 2017: 4}
program comprehension: {1999: 2, 2001: 1, 2005: 2, 2007: 1, 2008: 3, 2009: 2, 2010: 2, 2011: 12, 2012: 14, 2013: 5, 2015: 1, 2016: 1, 2017: 2}
symbolic execution: {1990: 2, 2008: 4, 2009: 2, 2010: 1, 2011: 8, 2012: 1, 2013: 16, 2015: 4, 2016: 6, 2017: 2}
test suite: {1992: 2, 1993: 2, 1994: 3, 2000: 2, 2002: 5, 2003: 2, 2004: 2, 2005: 3, 2007: 2, 2008: 5, 2009: 1, 2011: 1, 2012: 6, 2013: 1, 2015: 2, 2016: 5, 2017: 2}
cloud computing: {2010: 4, 2011: 5, 2012: 10, 2013: 11, 2015: 13, 2016: 3}
software product lines: {2001: 4, 2002: 2, 2004: 1, 2007: 1, 2008: 3, 2010: 1, 2011: 9, 2012: 2, 2013: 6, 2015: 9, 2016: 2, 2017: 5}
adaptation models: {2010: 4, 2011: 7, 2012: 10, 2013: 8, 2015: 12, 2016: 4}
web services: {2001: 2, 2002: 3, 2004: 11, 2005: 4, 2007: 1, 2008: 4, 2009: 6, 2010: 5, 2011: 1, 2012: 4, 2013: 2, 2016: 1}
complexity theory: {2010: 7, 2011: 7, 2012: 11, 2013: 8, 2015: 6, 2016: 4, 2017: 1}
artificial intelligence: {1988: 2, 1989: 2, 1990: 2, 1992: 1, 1993: 2, 1994: 4, 1996: 1, 1997: 1, 1998: 2, 1999: 2, 2000: 3, 2001: 1, 2002: 2, 2005: 11, 2008: 1, 2009: 2, 2013: 2, 2015: 2}
feature extraction: {1994: 1, 2001: 1, 2004: 1, 2008: 1, 2010: 3, 2011: 4, 2012: 11, 2013: 10, 2015: 4, 2016: 3, 2017: 4}
software cost estimation: {1993: 1, 1994: 1, 1996: 5, 1998: 6, 1999: 3, 2000: 5, 2001: 4, 2002: 2, 2003: 4, 2005: 1, 2010: 2, 2011: 4, 2012: 2, 2013: 1, 2015: 1}
experimental results: {1995: 1, 1992: 1, 1993: 2, 1994: 1, 1999: 2, 2000: 1, 2001: 1, 2003: 1, 2004: 1, 2005: 2, 2007: 4, 2008: 4, 2009: 1, 2011: 1, 2012: 6, 2013: 6, 2016: 2, 2017: 4}
previous work: {2010: 3, 1990: 1, 2000: 3, 2001: 2, 2002: 2, 2004: 1, 2007: 2, 2009: 3, 2011: 3, 2012: 4, 2013: 8, 2015: 2, 2016: 4, 2017: 3}
systems engineering and theory: {1992: 2, 1990: 5, 1991: 1, 1993: 1, 1994: 1, 1996: 1, 1997: 4, 1998: 2, 1999: 4, 2000: 1, 2001: 3, 2002: 6, 2003: 4, 2004: 3, 2005: 1, 2007: 1}
decision making: {2013: 6, 1996: 1, 1997: 2, 2000: 2, 2001: 1, 2002: 1, 2003: 3, 2004: 5, 2005: 3, 2007: 1, 2008: 2, 2010: 3, 2011: 1, 2012: 5, 2015: 4}
software debugging: {1989: 1, 1992: 1, 1993: 3, 1994: 1, 1997: 1, 1999: 2, 2000: 1, 2001: 2, 2002: 1, 2004: 2, 2005: 3, 2007: 2, 2008: 4, 2009: 9, 2011: 2, 2012: 2, 2013: 1, 2017: 2}
parallel programming: {1988: 6, 1990: 1, 1991: 2, 1993: 1, 1994: 2, 2000: 1, 2002: 1, 2003: 1, 2005: 1, 2007: 1, 2008: 1, 2010: 4, 2011: 6, 2012: 5, 2013: 5, 2015: 1}
summary form: {1990: 1, 1992: 1, 1999: 1, 2000: 1, 2002: 14, 2004: 1, 2005: 9, 2011: 1, 2012: 9, 2015: 1}
object-oriented methods: {1993: 2, 1994: 2, 1996: 3, 1998: 4, 1999: 5, 2000: 1, 2001: 4, 2002: 3, 2003: 3, 2004: 1, 2009: 1, 2011: 3, 2012: 4, 2013: 2, 2015: 1}
regression analysis: {1993: 1, 1997: 1, 1998: 2, 2000: 1, 2003: 1, 2005: 2, 2007: 2, 2008: 3, 2010: 1, 2011: 3, 2012: 4, 2013: 12, 2015: 3, 2016: 2, 2017: 1}
regression testing: {1993: 1, 1994: 1, 1997: 1, 1998: 2, 2000: 2, 2001: 2, 2002: 7, 2004: 1, 2007: 2, 2011: 5, 2012: 1, 2013: 7, 2015: 5, 2016: 2}
mathematical model: {1994: 1, 1997: 1, 1999: 1, 2000: 1, 2001: 1, 2007: 1, 2008: 5, 2009: 1, 2010: 6, 2011: 5, 2012: 4, 2013: 3, 2015: 2, 2016: 4, 2017: 3}
best practices: {1996: 1, 1997: 1, 2000: 3, 2001: 1, 2002: 6, 2003: 2, 2004: 5, 2005: 1, 2007: 4, 2008: 3, 2010: 2, 2011: 1, 2013: 4, 2015: 5}
software performance evaluation: {1996: 1, 1998: 4, 2000: 1, 2002: 2, 2003: 1, 2004: 4, 2005: 3, 2007: 1, 2008: 3, 2010: 3, 2012: 2, 2013: 7, 2015: 5, 2016: 1, 2017: 1}
capability maturity model: {1994: 4, 1993: 1, 1995: 1, 1996: 3, 1997: 6, 1998: 5, 1999: 3, 2000: 5, 2001: 1, 2002: 2, 2003: 1, 2007: 1, 2008: 2, 2011: 1, 2013: 1, 2015: 1}
collaborative work: {1998: 2, 1990: 1, 1991: 1, 1992: 1, 1994: 2, 1997: 6, 2000: 3, 2001: 4, 2002: 2, 2003: 1, 2004: 1, 2005: 4, 2007: 4, 2008: 2, 2009: 1, 2011: 1, 2013: 1, 2015: 1}
learning (artificial intelligence): {2017: 5, 1998: 1, 2002: 1, 2004: 1, 2005: 1, 2008: 1, 2010: 2, 2011: 3, 2012: 6, 2013: 8, 2015: 5, 2016: 4}
case studies: {1993: 3, 1994: 1, 1996: 2, 1997: 1, 1998: 2, 1999: 1, 2000: 4, 2002: 2, 2003: 1, 2004: 3, 2007: 2, 2010: 3, 2011: 3, 2012: 4, 2013: 3, 2015: 2, 2017: 1}
design methodology: {1991: 4, 1988: 1, 1989: 3, 1990: 1, 1992: 1, 1993: 2, 1994: 2, 1996: 1, 1997: 4, 1998: 2, 1999: 1, 2000: 4, 2001: 1, 2002: 1, 2003: 1, 2004: 2, 2005: 3, 2008: 2, 2013: 1}
distributed processing: {1996: 3, 1988: 5, 1991: 1, 1994: 3, 1998: 1, 1999: 1, 2000: 1, 2001: 1, 2003: 1, 2004: 2, 2005: 4, 2007: 1, 2008: 1, 2009: 1, 2010: 2, 2011: 3, 2012: 5, 2013: 1}
software artifacts: {2015: 7, 1999: 1, 2001: 2, 2002: 2, 2003: 3, 2004: 1, 2009: 5, 2011: 6, 2012: 2, 2013: 5, 2017: 3}
information science: {1988: 3, 1990: 2, 1996: 1, 1997: 2, 1998: 2, 1999: 1, 2000: 1, 2001: 3, 2003: 4, 2004: 3, 2005: 12, 2007: 1, 2008: 2}
knowledge management: {1988: 1, 1989: 1, 1990: 1, 1993: 3, 1999: 1, 2000: 2, 2001: 1, 2002: 2, 2003: 2, 2004: 2, 2005: 3, 2008: 2, 2009: 1, 2010: 2, 2011: 3, 2012: 5, 2013: 3, 2015: 1, 2016: 1}
benchmark testing: {1989: 1, 1998: 2, 2000: 1, 2001: 1, 2003: 1, 2007: 2, 2008: 2, 2009: 3, 2010: 1, 2011: 2, 2012: 4, 2013: 7, 2015: 4, 2016: 3, 2017: 3}
existing approaches: {1998: 2, 2000: 1, 2002: 4, 2005: 1, 2007: 4, 2008: 3, 2009: 2, 2010: 3, 2011: 1, 2012: 4, 2013: 3, 2015: 1, 2016: 4, 2017: 4}
search engines: {1999: 1, 2000: 2, 2007: 3, 2009: 2, 2010: 4, 2011: 13, 2012: 7, 2013: 1, 2015: 1, 2016: 3}
mobile communication: {1996: 1, 2016: 6, 2000: 3, 2001: 1, 2002: 2, 2003: 1, 2004: 1, 2007: 1, 2008: 2, 2010: 2, 2012: 2, 2013: 5, 2015: 5, 2017: 4}
tool support: {1988: 2, 1993: 1, 1996: 2, 1999: 2, 2000: 2, 2001: 2, 2002: 1, 2003: 2, 2004: 3, 2005: 1, 2008: 2, 2009: 1, 2011: 8, 2012: 3, 2013: 2, 2015: 2}
software packages: {1988: 2, 1997: 3, 1998: 1, 2000: 8, 2001: 1, 2002: 5, 2004: 1, 2005: 1, 2007: 4, 2009: 4, 2010: 1, 2012: 1, 2013: 2, 2015: 1, 2016: 1}
program slicing: {1992: 1, 1998: 2, 1999: 4, 2000: 1, 2002: 1, 2003: 4, 2004: 4, 2007: 2, 2008: 2, 2009: 1, 2010: 2, 2011: 1, 2012: 1, 2013: 4, 2016: 4, 2017: 2}
software management: {1996: 2, 1998: 1, 2000: 1, 2002: 1, 2003: 2, 2004: 3, 2010: 3, 2011: 5, 2012: 8, 2013: 7, 2015: 3}
standards development: {1990: 1, 2004: 2, 1992: 1, 1993: 1, 1994: 2, 1996: 1, 1997: 3, 1998: 2, 1999: 2, 2000: 3, 2001: 2, 2002: 5, 2003: 2, 2005: 3, 2007: 2, 2008: 1, 2009: 2}
embedded system: {2000: 4, 1988: 1, 1989: 1, 1990: 2, 1997: 2, 1998: 1, 1999: 2, 2001: 4, 2002: 2, 2003: 2, 2004: 2, 2005: 6, 2007: 1, 2008: 3, 2009: 1, 2010: 1}
environmental management: {2008: 3, 1988: 1, 1989: 3, 1990: 4, 1991: 4, 1992: 1, 1996: 5, 1997: 1, 1998: 1, 1999: 2, 2000: 1, 2001: 1, 2002: 1, 2004: 3, 2005: 3, 2009: 1}
system recovery: {1988: 1, 2000: 3, 2001: 1, 2002: 2, 2005: 1, 2007: 2, 2008: 1, 2009: 6, 2010: 1, 2012: 5, 2013: 7, 2015: 2, 2016: 3}
data visualization: {1989: 1, 1993: 1, 2000: 3, 2001: 2, 2003: 2, 2004: 2, 2005: 2, 2007: 4, 2008: 1, 2009: 2, 2010: 3, 2011: 3, 2012: 4, 2013: 3, 2015: 1, 2017: 1}
pair programming: {2001: 3, 2003: 3, 2005: 12, 2007: 2, 2008: 1, 2010: 1, 2012: 10, 2013: 1, 2015: 2}
automatic programming: {1988: 6, 1990: 2, 1993: 1, 1996: 3, 2000: 3, 2001: 1, 2002: 3, 2003: 1, 2004: 6, 2005: 2, 2007: 3, 2008: 1, 2013: 1, 2017: 1}
distributed systems: {1988: 3, 1991: 3, 1996: 1, 2000: 2, 2001: 2, 2002: 1, 2003: 3, 2004: 5, 2008: 1, 2011: 6, 2012: 5, 2013: 2}
resource management: {1988: 4, 1991: 1, 1996: 2, 1998: 1, 2000: 4, 2001: 2, 2002: 2, 2003: 3, 2004: 4, 2005: 2, 2007: 1, 2008: 2, 2011: 1, 2012: 3, 2016: 1, 2017: 1}
information technology: {1989: 1, 1990: 1, 1991: 1, 1996: 1, 1998: 3, 2000: 8, 2001: 1, 2002: 1, 2003: 3, 2005: 2, 2007: 3, 2008: 1, 2010: 1, 2011: 3, 2012: 1, 2013: 1, 2015: 2}
concurrency control: {1988: 4, 1989: 1, 1993: 1, 1995: 2, 1999: 1, 2000: 2, 2002: 3, 2003: 1, 2005: 1, 2007: 1, 2008: 3, 2009: 1, 2010: 1, 2011: 3, 2012: 2, 2013: 3, 2015: 1, 2016: 2}
quality management: {1988: 1, 1989: 1, 1991: 1, 1994: 1, 1996: 2, 1997: 2, 1999: 1, 2000: 1, 2002: 3, 2003: 2, 2004: 5, 2005: 2, 2007: 1, 2008: 4, 2009: 3, 2011: 1, 2012: 1, 2013: 1}
product development: {1991: 1, 1998: 2, 1999: 2, 2000: 3, 2001: 1, 2002: 2, 2003: 1, 2005: 2, 2007: 2, 2008: 1, 2009: 1, 2010: 2, 2011: 2, 2012: 4, 2013: 4, 2015: 2, 2017: 1}
large number: {1996: 2, 2000: 1, 2001: 2, 2004: 3, 2008: 2, 2010: 1, 2011: 3, 2012: 7, 2013: 2, 2015: 2, 2016: 5, 2017: 3}
system documentation: {2011: 2, 2012: 1, 1988: 2, 1990: 1, 1993: 1, 1996: 1, 1999: 2, 2000: 3, 2002: 1, 2003: 3, 2004: 1, 2009: 1, 2010: 3, 2013: 4, 2015: 4, 2016: 1, 2017: 1}
machine learning: {2017: 3, 1998: 1, 2002: 1, 2004: 1, 2005: 3, 2007: 1, 2008: 1, 2010: 1, 2011: 2, 2012: 4, 2013: 12, 2015: 2}
object-oriented languages: {1994: 1, 1995: 1, 1996: 2, 1998: 3, 1999: 1, 2000: 2, 2002: 5, 2003: 1, 2004: 3, 2005: 2, 2008: 1, 2009: 1, 2010: 2, 2011: 4, 2013: 2, 2017: 1}
data flow analysis: {1996: 4, 1998: 1, 1999: 3, 2001: 2, 2002: 1, 2003: 1, 2004: 3, 2005: 4, 2008: 2, 2009: 1, 2011: 4, 2012: 3, 2013: 1, 2015: 1, 2016: 1}
integrated development environment: {2005: 4, 2007: 2, 2008: 1, 2009: 6, 2010: 4, 2012: 5, 2013: 2, 2015: 7, 2016: 1}
automatic control: {1990: 1, 1988: 3, 1989: 1, 1991: 3, 1992: 1, 1993: 2, 1994: 2, 1997: 4, 2001: 1, 2002: 1, 2003: 2, 2004: 2, 2005: 3, 2007: 2, 2008: 2, 2009: 1}
source code (software): {2015: 20, 2017: 9, 2016: 2}
humanoid robots: {2016: 9, 2010: 1, 2012: 1, 2013: 2, 2015: 13, 2017: 5}
system monitoring: {1993: 2, 1996: 2, 1999: 2, 2000: 4, 2003: 1, 2004: 2, 2005: 1, 2007: 1, 2008: 2, 2010: 2, 2011: 1, 2012: 3, 2013: 4, 2015: 2, 2017: 2}
fault diagnosis: {1994: 2, 2000: 1, 2002: 1, 2003: 1, 2004: 3, 2005: 1, 2007: 3, 2008: 4, 2009: 4, 2010: 1, 2011: 2, 2012: 3, 2013: 2, 2015: 2, 2017: 1}
mining software repositories: {2008: 1, 2009: 1, 2010: 3, 2011: 7, 2012: 8, 2013: 4, 2015: 4, 2016: 1, 2017: 2}
software agents: {2002: 6, 1999: 2, 2000: 3, 2001: 4, 2003: 7, 2004: 3, 2005: 2, 2011: 1, 2015: 2}
software products: {1988: 1, 1993: 2, 1996: 2, 1998: 2, 2000: 2, 2001: 3, 2002: 2, 2003: 2, 2004: 2, 2010: 1, 2011: 1, 2012: 5, 2013: 4, 2015: 1}
empirical software engineering: {1997: 1, 1999: 2, 2004: 1, 2005: 3, 2010: 1, 2011: 5, 2012: 9, 2013: 1, 2015: 4, 2016: 3}
ubiquitous computing: {1999: 5, 2003: 3, 2004: 3, 2005: 4, 2008: 1, 2010: 4, 2011: 3, 2012: 2, 2013: 5}
energy consumption: {2002: 2, 2009: 1, 2011: 3, 2013: 10, 2015: 8, 2016: 6}
bug reports: {2008: 1, 2010: 4, 2011: 1, 2012: 10, 2013: 9, 2015: 2, 2016: 1, 2017: 2}
process control: {1993: 2, 1988: 1, 1989: 1, 1990: 1, 1991: 3, 1994: 1, 1996: 1, 1997: 2, 1998: 4, 1999: 1, 2000: 3, 2001: 1, 2003: 1, 2005: 2, 2009: 1, 2011: 1, 2012: 1, 2013: 1, 2015: 1}
temporal logic: {2002: 3, 1994: 1, 1997: 2, 1998: 3, 1999: 1, 2000: 1, 2001: 4, 2003: 4, 2004: 2, 2005: 1, 2010: 1, 2012: 1, 2015: 4, 2016: 1}
open systems: {1988: 4, 1993: 1, 1994: 2, 1996: 3, 1999: 2, 2001: 2, 2002: 2, 2003: 1, 2004: 4, 2009: 1, 2010: 4, 2012: 1, 2013: 1, 2016: 1}
wide range: {1988: 1, 1993: 1, 1995: 1, 2001: 1, 2002: 2, 2003: 2, 2004: 3, 2005: 1, 2007: 2, 2009: 1, 2010: 2, 2011: 3, 2012: 4, 2013: 3, 2015: 2}
software architectures: {1992: 1, 1994: 2, 1996: 2, 1997: 1, 1998: 2, 1999: 7, 2002: 2, 2005: 1, 2008: 1, 2010: 2, 2011: 2, 2012: 3, 2015: 3}
distributed programming: {1994: 2, 1999: 5, 2000: 5, 2001: 4, 2002: 1, 2004: 7, 2005: 2, 2011: 2, 2015: 1}
information resources: {1998: 1, 1999: 4, 2000: 9, 2001: 5, 2002: 4, 2003: 1, 2007: 1, 2008: 3, 2009: 1}
distributed object management: {1999: 2, 2000: 6, 2001: 4, 2002: 5, 2003: 9, 2004: 1, 2007: 1, 2010: 1}
nier track: {2011: 28, 2013: 1}
educational programs: {1992: 1, 1991: 3, 1993: 1, 2000: 3, 2003: 3, 2004: 1, 2005: 9, 2007: 3, 2008: 2, 2009: 2}
knowledge engineering: {1988: 1, 1989: 2, 1990: 1, 1992: 1, 1994: 2, 1998: 1, 2000: 1, 2003: 1, 2005: 2, 2007: 1, 2008: 3, 2010: 1, 2011: 4, 2012: 4, 2013: 1, 2015: 2}
graph theory: {1993: 1, 1996: 3, 2001: 1, 2002: 1, 2003: 3, 2007: 1, 2008: 4, 2009: 1, 2011: 3, 2012: 7, 2015: 1, 2017: 2}
medical services: {1996: 1, 1997: 1, 2000: 1, 2004: 2, 2008: 6, 2009: 1, 2010: 1, 2011: 2, 2012: 1, 2013: 3, 2015: 8, 2017: 1}
human computer interaction: {1998: 2, 2000: 3, 2001: 1, 2003: 2, 2004: 4, 2005: 1, 2007: 2, 2011: 1, 2012: 1, 2013: 6, 2015: 5}
technological innovation: {1990: 3, 1991: 2, 1992: 1, 1996: 1, 1999: 1, 2000: 5, 2002: 1, 2003: 2, 2004: 2, 2005: 1, 2008: 2, 2009: 1, 2010: 1, 2012: 1, 2013: 1, 2015: 1, 2016: 1}
interactive systems: {1996: 4, 1997: 1, 1998: 1, 2000: 8, 2001: 1, 2002: 1, 2003: 4, 2004: 1, 2009: 1, 2011: 1, 2012: 1, 2013: 2, 2016: 1}
world wide web: {1996: 3, 1997: 3, 1998: 2, 1999: 1, 2000: 4, 2001: 3, 2002: 2, 2004: 4, 2005: 3, 2010: 2}
quality of service: {1997: 2, 2001: 1, 2002: 2, 2003: 2, 2004: 4, 2005: 2, 2007: 1, 2008: 1, 2009: 3, 2010: 2, 2011: 2, 2012: 1, 2016: 4}
extreme programming: {2000: 3, 2001: 2, 2002: 4, 2003: 4, 2004: 4, 2005: 4, 2007: 2, 2008: 2, 2011: 1, 2017: 1}
adaptive systems: {2000: 1, 2002: 1, 2004: 1, 2005: 2, 2008: 1, 2009: 1, 2010: 1, 2012: 6, 2013: 8, 2015: 5}
agile methods: {2004: 8, 2005: 3, 2009: 3, 2010: 1, 2011: 1, 2012: 1, 2013: 9, 2015: 1}
service-oriented architecture: {2010: 6, 2011: 7, 2012: 5, 2013: 4, 2015: 5}
relational databases: {1990: 1, 1993: 1, 1996: 1, 1997: 2, 1998: 2, 1999: 1, 2001: 1, 2003: 3, 2004: 1, 2005: 7, 2008: 5, 2013: 1}
safety-critical software: {1992: 1, 2000: 3, 2002: 2, 2003: 1, 2004: 2, 2005: 3, 2007: 1, 2010: 4, 2011: 1, 2012: 1, 2013: 3, 2015: 3, 2017: 1}
business data processing: {1996: 1, 1999: 1, 2001: 1, 2002: 5, 2004: 1, 2005: 1, 2008: 1, 2010: 3, 2011: 3, 2012: 4, 2013: 3, 2015: 1, 2016: 1}
natural language: {2002: 1, 2009: 2, 2010: 3, 2011: 3, 2012: 6, 2013: 5, 2015: 2, 2016: 4}
communication system control: {1993: 2, 1988: 5, 1996: 2, 1997: 3, 1998: 2, 2000: 2, 2001: 1, 2002: 1, 2003: 2, 2004: 2, 2005: 2, 2009: 1}
mobile applications: {1996: 1, 2016: 7, 1999: 1, 2008: 1, 2012: 1, 2013: 3, 2015: 11}
time factors: {2013: 7, 1993: 1, 1996: 1, 1997: 2, 1999: 1, 2002: 2, 2005: 2, 2007: 1, 2009: 1, 2010: 1, 2011: 1, 2012: 1, 2015: 2, 2016: 2}
empirical evaluation: {2016: 2, 1996: 1, 1998: 1, 2000: 1, 2002: 1, 2005: 1, 2008: 2, 2009: 3, 2010: 1, 2011: 3, 2012: 3, 2013: 2, 2015: 1, 2017: 3}
object-oriented software: {1988: 1, 1996: 3, 1998: 1, 2000: 4, 2003: 2, 2004: 4, 2005: 1, 2007: 2, 2008: 3, 2011: 1, 2012: 2, 2013: 1}
research and development: {1988: 2, 1990: 1, 1993: 2, 1994: 1, 1998: 3, 1999: 2, 2000: 3, 2002: 1, 2003: 2, 2004: 1, 2005: 1, 2010: 1, 2011: 1, 2013: 1, 2015: 3}
proposed approach: {1990: 1, 1998: 1, 2000: 1, 2002: 2, 2003: 1, 2005: 1, 2008: 2, 2009: 1, 2011: 6, 2012: 6, 2013: 2, 2016: 1}
inference mechanisms: {1990: 1, 1991: 1, 1993: 1, 1994: 2, 1999: 1, 2001: 1, 2002: 1, 2007: 2, 2010: 1, 2011: 3, 2012: 3, 2013: 6, 2015: 1, 2017: 1}
software industry: {1992: 1, 1998: 4, 2000: 1, 2001: 2, 2003: 2, 2004: 1, 2005: 1, 2010: 2, 2011: 4, 2013: 2, 2015: 5}
coordinate measuring machines: {1994: 1, 1996: 1, 1997: 7, 1998: 3, 1999: 1, 2000: 4, 2001: 1, 2002: 1, 2003: 2, 2004: 1, 2005: 2, 2009: 1}
service oriented architecture: {2000: 1, 2001: 1, 2002: 1, 2004: 2, 2005: 1, 2008: 2, 2009: 1, 2010: 5, 2011: 8, 2012: 3}
software product line: {2000: 1, 2001: 1, 2004: 1, 2005: 2, 2007: 1, 2009: 2, 2010: 1, 2011: 5, 2012: 2, 2013: 5, 2015: 1, 2016: 1, 2017: 2}
access control: {2002: 1, 2003: 1, 2007: 5, 2008: 1, 2010: 2, 2013: 11, 2015: 1, 2016: 3}
impact analysis: {2003: 3, 2004: 3, 2005: 2, 2008: 1, 2010: 6, 2011: 5, 2012: 2, 2013: 2, 2017: 1}
# x201d: {2012: 12, 2013: 10, 2016: 3}
time measurement: {1988: 1, 1989: 2, 1990: 1, 1992: 1, 1993: 1, 1994: 1, 1996: 1, 1997: 3, 1998: 2, 1999: 3, 2004: 1, 2005: 2, 2008: 3, 2011: 1, 2012: 1}
existing tools: {1988: 1, 1993: 1, 1995: 2, 1999: 1, 2001: 1, 2007: 2, 2008: 2, 2009: 3, 2011: 1, 2012: 1, 2013: 4, 2015: 3, 2016: 1, 2017: 1}
joining processes: {1991: 2, 2012: 2, 1992: 1, 1999: 2, 2000: 2, 2001: 1, 2002: 1, 2003: 2, 2004: 1, 2007: 1, 2010: 1, 2011: 2, 2013: 2, 2015: 1, 2016: 2, 2017: 1}
programming language: {1988: 3, 2000: 2, 2005: 3, 2008: 1, 2009: 1, 2010: 1, 2011: 5, 2013: 3, 2015: 4, 2016: 1}
error correction: {1988: 2, 1989: 1, 1994: 1, 1996: 1, 1997: 2, 1998: 1, 2000: 2, 2004: 2, 2005: 3, 2007: 6, 2008: 2, 2011: 1}
data visualisation: {1993: 1, 1996: 1, 1998: 1, 2003: 1, 2004: 1, 2007: 1, 2009: 1, 2010: 3, 2011: 3, 2012: 6, 2013: 3, 2015: 2}
reactive power: {1993: 1, 1994: 1, 2007: 1, 2011: 5, 2012: 3, 2013: 4, 2015: 2, 2016: 3, 2017: 4}
automotive engineering: {1996: 1, 1997: 1, 2003: 5, 2005: 2, 2008: 12, 2010: 1, 2012: 1, 2016: 1}
search problems: {1996: 1, 2004: 2, 2007: 1, 2010: 2, 2011: 1, 2012: 5, 2013: 5, 2015: 1, 2016: 4, 2017: 2}
stack overflow: {2011: 3, 2013: 4, 2015: 10, 2016: 5, 2017: 2}
concurrent programs: {1995: 2, 1989: 2, 2002: 5, 2008: 1, 2009: 2, 2010: 5, 2011: 1, 2013: 2, 2016: 2, 2017: 1}
large software systems: {2015: 1, 1988: 1, 1990: 4, 1992: 1, 1993: 1, 1994: 1, 1995: 1, 1996: 2, 1998: 1, 1999: 2, 2003: 1, 2005: 1, 2011: 2, 2012: 1, 2013: 1, 2016: 2}
power system modeling: {1988: 1, 1989: 1, 1990: 1, 1996: 1, 1998: 3, 1999: 4, 2000: 5, 2001: 3, 2002: 1, 2004: 1, 2007: 1, 2008: 1}
wide variety: {1988: 1, 1996: 1, 1998: 1, 2000: 2, 2001: 1, 2002: 1, 2003: 2, 2004: 1, 2008: 2, 2010: 2, 2011: 1, 2012: 2, 2013: 3, 2015: 3}
testing process: {1992: 2, 1993: 1, 1999: 1, 2000: 4, 2001: 4, 2009: 1, 2010: 4, 2011: 3, 2012: 2, 2013: 1}
finite state machines: {1993: 1, 1996: 1, 1999: 1, 2000: 3, 2001: 3, 2002: 1, 2004: 3, 2008: 3, 2010: 2, 2011: 2, 2013: 2, 2015: 1}
web sites: {1997: 4, 1998: 1, 2000: 2, 2001: 2, 2002: 1, 2003: 1, 2004: 1, 2005: 1, 2007: 1, 2010: 2, 2011: 2, 2012: 2, 2013: 2, 2017: 1}
software development projects: {1998: 1, 1999: 2, 2002: 1, 2003: 2, 2005: 1, 2008: 2, 2010: 4, 2012: 2, 2013: 5, 2015: 2, 2017: 1}
linux kernel: {1999: 2, 2003: 2, 2005: 2, 2008: 2, 2011: 5, 2012: 7, 2013: 1, 2016: 2}
program execution: {1988: 2, 1993: 1, 1994: 1, 2000: 2, 2004: 6, 2008: 1, 2011: 2, 2012: 2, 2013: 2, 2015: 2, 2016: 1}
technology management: {1990: 1, 1991: 2, 1997: 3, 1998: 1, 2000: 3, 2001: 1, 2002: 3, 2004: 2, 2005: 3, 2007: 1, 2008: 2}
new approach: {1990: 1, 1992: 1, 1996: 1, 1998: 1, 1999: 2, 2000: 1, 2001: 1, 2008: 1, 2009: 1, 2010: 2, 2011: 2, 2012: 2, 2013: 3, 2015: 3}
reliability engineering: {1990: 1, 1997: 1, 1999: 2, 2000: 5, 2001: 1, 2003: 4, 2004: 2, 2005: 2, 2008: 2, 2009: 1, 2017: 1}
risk analysis: {1996: 1, 1999: 3, 2000: 2, 2001: 1, 2002: 2, 2003: 1, 2005: 2, 2008: 1, 2011: 4, 2012: 2, 2013: 1, 2016: 2}
program visualisation: {1999: 1, 2002: 1, 2003: 6, 2004: 5, 2005: 3, 2008: 1, 2009: 1, 2010: 1, 2011: 1, 2012: 1, 2015: 1}
software lifecycle: {1999: 2, 2001: 2, 2002: 3, 2004: 3, 2005: 3, 2010: 4, 2011: 1, 2012: 4}
software engineering research: {2000: 1, 2003: 2, 2005: 4, 2009: 1, 2010: 4, 2011: 3, 2012: 2, 2013: 1, 2015: 3, 2016: 1}
biological system modeling: {2000: 1, 2001: 1, 2008: 1, 2010: 6, 2011: 5, 2012: 4, 2013: 1, 2015: 1, 2016: 2}
service-oriented systems: {2010: 6, 2011: 5, 2013: 8, 2015: 3}
smart phones: {2012: 4, 2013: 6, 2015: 3, 2016: 6, 2017: 3}
petri nets: {1995: 1, 1990: 2, 1993: 4, 1994: 1, 1996: 2, 1998: 3, 2002: 3, 2003: 1, 2011: 1, 2012: 2, 2015: 1}
cities and towns: {1988: 2, 1989: 1, 1990: 2, 1991: 1, 1998: 3, 1999: 3, 2000: 1, 2002: 4, 2009: 1, 2010: 2, 2011: 1}
cultural differences: {1988: 1, 1989: 1, 1991: 1, 1996: 1, 1997: 1, 2000: 5, 2002: 1, 2003: 3, 2004: 1, 2005: 1, 2007: 1, 2009: 1, 2012: 2, 2017: 1}
computer errors: {1989: 4, 1991: 1, 1992: 1, 1993: 1, 1994: 1, 1996: 1, 1997: 1, 1999: 2, 2000: 1, 2002: 1, 2004: 1, 2005: 4, 2007: 1, 2009: 1}
pattern analysis: {1989: 1, 1990: 1, 1997: 2, 1999: 4, 2000: 2, 2001: 2, 2003: 2, 2004: 2, 2005: 2, 2007: 3}
software processes: {1990: 2, 1991: 1, 1994: 2, 1995: 4, 1996: 3, 1998: 1, 2004: 3, 2007: 2, 2013: 3}
user interface: {1994: 1, 1996: 2, 2000: 1, 2004: 2, 2009: 1, 2010: 2, 2011: 1, 2012: 4, 2013: 5, 2015: 2}
operating systems (computers): {1996: 2, 2000: 1, 2002: 3, 2003: 2, 2004: 1, 2007: 1, 2009: 2, 2011: 1, 2012: 4, 2013: 3, 2015: 1}
instruction sets: {1998: 1, 2010: 2, 2011: 5, 2012: 4, 2013: 4, 2015: 1, 2016: 3, 2017: 1}
clone detection: {2001: 1, 2007: 1, 2008: 2, 2009: 7, 2010: 3, 2011: 3, 2012: 2, 2013: 1, 2016: 1}
computer crashes: {2001: 1, 2002: 2, 2003: 1, 2005: 1, 2007: 1, 2009: 1, 2010: 1, 2011: 2, 2012: 1, 2013: 5, 2015: 2, 2016: 2, 2017: 1}
test suites: {2001: 2, 2002: 1, 2003: 1, 2004: 3, 2008: 2, 2011: 1, 2012: 4, 2013: 5, 2015: 2}
web pages: {2001: 3, 2002: 2, 2003: 2, 2004: 1, 2005: 1, 2007: 1, 2011: 4, 2012: 2, 2013: 3, 2016: 1, 2017: 1}
important role: {2003: 3, 2004: 3, 2005: 1, 2008: 1, 2009: 2, 2010: 3, 2012: 3, 2013: 2, 2015: 1, 2016: 1, 2017: 1}
current committee members: {2004: 3, 2005: 1, 2007: 2, 2009: 1, 2012: 1, 2013: 1, 2015: 2, 2016: 7, 2017: 3}
recommender systems: {2009: 1, 2010: 2, 2011: 2, 2012: 6, 2013: 3, 2015: 1, 2017: 6}
code smells: {2010: 2, 2011: 2, 2012: 5, 2013: 9, 2015: 1, 2016: 2}
software product: {1993: 1, 1991: 1, 1998: 4, 1999: 2, 2000: 2, 2003: 1, 2004: 3, 2007: 1, 2008: 1, 2012: 1, 2013: 3}
time to market: {1997: 3, 2000: 2, 1991: 1, 1994: 1, 1999: 1, 2001: 2, 2002: 1, 2004: 1, 2005: 1, 2007: 3, 2011: 1, 2012: 2, 2015: 1}
design implementation: {1988: 1, 1990: 1, 1994: 1, 1996: 1, 1998: 3, 2000: 1, 2001: 3, 2004: 1, 2005: 2, 2008: 2, 2010: 1, 2013: 1, 2015: 2}
design decisions: {1988: 1, 1989: 1, 1990: 1, 1993: 2, 1995: 1, 1999: 4, 2001: 2, 2004: 1, 2008: 2, 2010: 1, 2011: 1, 2013: 2, 2015: 1}
distributed applications: {1988: 5, 1997: 1, 1998: 1, 1999: 1, 2000: 3, 2001: 1, 2002: 2, 2003: 2, 2004: 1, 2011: 1, 2015: 2}
logic programming: {1988: 1, 1991: 1, 1999: 2, 2000: 3, 2001: 1, 2003: 1, 2004: 1, 2005: 2, 2007: 1, 2008: 4, 2010: 1, 2011: 1, 2015: 1}
software requirements: {1989: 2, 1990: 1, 1992: 1, 1993: 1, 1994: 2, 1999: 1, 2000: 1, 2001: 1, 2003: 2, 2009: 1, 2010: 2, 2013: 1, 2015: 2, 2016: 1, 2017: 1}
production systems: {1989: 2, 1990: 2, 1993: 1, 1997: 1, 2000: 2, 2002: 2, 2003: 4, 2004: 1, 2007: 1, 2008: 1, 2010: 1, 2011: 1, 2017: 1}
domain knowledge: {1993: 3, 1995: 1, 1998: 2, 2002: 5, 2005: 1, 2013: 4, 2015: 2, 2017: 2}
c language: {1993: 1, 1994: 2, 1996: 1, 1998: 1, 1999: 1, 2003: 1, 2004: 2, 2005: 1, 2009: 1, 2011: 1, 2012: 2, 2013: 3, 2015: 1, 2016: 2}
client-server systems: {1996: 2, 1998: 1, 1999: 2, 2000: 2, 2001: 2, 2002: 6, 2004: 1, 2008: 1, 2009: 1, 2011: 1, 2012: 1}
code generation: {1998: 1, 2000: 3, 2003: 2, 2005: 1, 2007: 2, 2008: 1, 2010: 2, 2011: 1, 2012: 3, 2013: 1, 2015: 1, 2016: 2}
development environment: {1999: 2, 2000: 2, 2002: 1, 2004: 1, 2005: 2, 2009: 1, 2010: 6, 2011: 1, 2013: 3, 2015: 1}
open source projects: {2005: 1, 2007: 1, 2008: 2, 2011: 4, 2012: 5, 2013: 1, 2015: 3, 2016: 2, 2017: 1}
code clones: {2007: 2, 2008: 3, 2011: 2, 2012: 4, 2013: 5, 2016: 1, 2017: 3}
integrated development environments: {2008: 1, 2010: 2, 2012: 7, 2013: 3, 2015: 5, 2017: 2}
social network services: {2009: 3, 2010: 5, 2011: 2, 2012: 7, 2013: 3}
computer networks: {1996: 1, 1997: 3, 1998: 3, 1999: 2, 2000: 2, 2001: 2, 2002: 2, 2003: 2, 2008: 1, 2009: 1}
software-intensive systems: {2010: 6, 2003: 1, 2011: 1, 2013: 3, 2015: 8}
& # x201c: {2013: 8, 2012: 8, 2015: 1, 2016: 2}
production facilities: {2015: 1, 1990: 1, 1992: 1, 1994: 1, 1997: 2, 1998: 2, 2000: 2, 2001: 1, 2002: 1, 2003: 1, 2007: 1, 2008: 2, 2011: 1, 2012: 1, 2013: 1}
heuristic algorithms: {1988: 1, 2003: 1, 2004: 3, 2009: 1, 2010: 3, 2011: 3, 2013: 1, 2015: 2, 2016: 2, 2017: 2}
parallel processing: {1989: 1, 1992: 1, 1993: 2, 1994: 1, 2004: 3, 2007: 1, 2009: 1, 2010: 2, 2012: 1, 2013: 3, 2015: 2, 2017: 1}
control flow: {1989: 1, 1991: 2, 1992: 1, 1993: 4, 1996: 2, 1999: 3, 2001: 1, 2004: 1, 2009: 2, 2011: 1, 2016: 1}
knowledge based systems: {1990: 3, 1993: 3, 1994: 1, 1996: 1, 1998: 1, 2001: 1, 2002: 1, 2005: 3, 2010: 1, 2012: 3, 2013: 1}
functional programming: {1990: 1, 1993: 1, 1994: 1, 1997: 1, 1999: 2, 2001: 1, 2003: 2, 2004: 1, 2007: 1, 2011: 1, 2012: 1, 2013: 2, 2015: 2, 2017: 2}
software tool: {1990: 1, 1991: 2, 1999: 3, 2000: 1, 2001: 1, 2002: 2, 2003: 1, 2004: 1, 2007: 2, 2009: 1, 2010: 2, 2011: 1, 2013: 1}
software engineering community: {1991: 1, 2003: 2, 2004: 1, 2010: 2, 2011: 2, 2012: 2, 2013: 4, 2015: 4, 2016: 1}
prototype tool: {1993: 1, 1999: 1, 2001: 3, 2002: 1, 2003: 4, 2004: 1, 2007: 2, 2011: 4, 2013: 1, 2016: 1}
test inputs: {1993: 2, 2000: 1, 2002: 1, 2008: 2, 2010: 1, 2011: 5, 2012: 1, 2013: 2, 2016: 4}
recent years: {1994: 1, 1996: 2, 2000: 1, 2003: 3, 2004: 2, 2005: 1, 2009: 1, 2011: 2, 2012: 1, 2013: 2, 2015: 1, 2016: 2}
process improvement: {1994: 1, 1996: 1, 1997: 5, 1998: 2, 1999: 2, 2002: 1, 2003: 2, 2005: 1, 2011: 3, 2015: 1}
c++ language: {1996: 1, 1999: 3, 2004: 1, 2009: 2, 2011: 3, 2012: 2, 2013: 4, 2015: 1, 2016: 2}
execution traces: {1999: 5, 2005: 2, 2010: 2, 2011: 2, 2012: 5, 2013: 3}
aspect-oriented programming: {2002: 2, 2005: 4, 2007: 4, 2008: 3, 2011: 2, 2012: 4}
feature location: {2004: 2, 2010: 1, 2011: 3, 2012: 3, 2013: 10}
social networking (online): {2009: 1, 2010: 1, 2011: 2, 2012: 7, 2013: 5, 2015: 3}
data engineering: {1988: 1, 1990: 1, 1991: 1, 1992: 1, 1994: 1, 1996: 1, 1998: 1, 1999: 2, 2000: 2, 2001: 2, 2003: 3, 2005: 1, 2007: 1}
dp management: {1988: 4, 1990: 1, 1991: 5, 1993: 2, 1994: 3, 2000: 1, 2011: 1, 2012: 1}
specification language: {1988: 2, 1989: 1, 1990: 1, 1993: 4, 1998: 1, 2000: 2, 2003: 1, 2004: 2, 2007: 2, 2008: 1, 2011: 1}
space technology: {1988: 1, 1991: 3, 1993: 1, 1994: 2, 1997: 2, 2000: 3, 2001: 1, 2003: 1, 2004: 2, 2005: 1, 2007: 1}
software project management: {1988: 3, 1996: 2, 1998: 1, 2000: 1, 2003: 4, 2010: 1, 2011: 2, 2013: 1, 2015: 3}
cost function: {1988: 1, 1992: 1, 1993: 1, 1996: 3, 1999: 1, 2000: 5, 2003: 3, 2008: 1, 2009: 1, 2013: 1}
flow graphs: {1989: 2, 1990: 1, 1993: 3, 1996: 2, 1997: 2, 1999: 1, 2001: 1, 2003: 2, 2004: 1, 2009: 3}
current state: {1989: 1, 1994: 1, 1995: 1, 1999: 1, 2003: 2, 2004: 3, 2010: 1, 2011: 4, 2012: 1, 2013: 1, 2015: 2}
computer aided instruction: {1989: 1, 1991: 1, 1999: 2, 2000: 1, 2003: 1, 2007: 4, 2008: 1, 2010: 1, 2013: 1, 2015: 4, 2017: 1}
preliminary results: {1990: 1, 2007: 2, 2008: 1, 2011: 5, 2012: 2, 2013: 4, 2015: 3}
software applications: {1991: 2, 1999: 2, 2001: 1, 2002: 3, 2009: 2, 2012: 2, 2013: 4, 2015: 2}
dp industry: {1991: 1, 1994: 1, 1999: 1, 2000: 3, 2001: 1, 2003: 2, 2005: 1, 2007: 1, 2010: 1, 2011: 1, 2012: 2, 2013: 3}
program understanding: {1993: 2, 1995: 1, 1996: 4, 1997: 2, 1998: 2, 2002: 3, 2005: 1, 2011: 1, 2016: 2}
iso standards: {1996: 2, 1998: 1, 2000: 2, 2002: 1, 2003: 3, 2004: 2, 2007: 1, 2008: 1, 2010: 1, 2011: 1, 2013: 1, 2016: 2}
object-oriented systems: {1996: 2, 2000: 2, 2001: 4, 2004: 2, 2007: 2, 2011: 2, 2012: 2, 2013: 1, 2015: 1}
software engineering tasks: {1996: 1, 2004: 1, 2009: 2, 2010: 1, 2011: 4, 2012: 3, 2013: 2, 2017: 4}
software visualization: {1997: 2, 2003: 2, 2004: 1, 2005: 1, 2009: 1, 2010: 4, 2011: 4, 2012: 3}
aerospace electronics: {2000: 1, 2001: 1, 2003: 2, 2004: 1, 2008: 2, 2009: 1, 2011: 2, 2012: 3, 2013: 2, 2015: 1, 2016: 2}
false positives: {2004: 1, 2008: 1, 2009: 1, 2010: 1, 2011: 2, 2012: 7, 2013: 3, 2016: 1, 2017: 1}
society officers: {2004: 1, 2005: 1, 2007: 2, 2009: 1, 2013: 1, 2015: 2, 2016: 7, 2017: 3}
model-driven development: {2005: 2, 2008: 2, 2009: 2, 2010: 2, 2011: 1, 2012: 7, 2013: 2}
energy efficiency: {2013: 10, 2015: 6, 2016: 2}
text analysis: {1990: 1, 1993: 1, 2011: 1, 2012: 6, 2013: 2, 2015: 1, 2016: 1, 2017: 4}
defect prediction: {2010: 1, 2003: 1, 2008: 3, 2011: 2, 2012: 3, 2013: 2, 2015: 1, 2016: 4}
code elements: {2012: 5, 2007: 1, 2011: 1, 2013: 4, 2015: 6}
pattern classification: {2017: 3, 2003: 1, 2008: 1, 2012: 5, 2013: 2, 2015: 2, 2016: 3}
information security: {1988: 1, 1991: 1, 1997: 1, 1999: 1, 2002: 2, 2004: 1, 2005: 5, 2007: 2, 2008: 1, 2010: 1, 2011: 1}
software organizations: {1989: 1, 1990: 1, 1991: 3, 1998: 2, 1999: 2, 2000: 1, 2002: 2, 2011: 2, 2012: 1, 2017: 2}
end users: {1993: 5, 2001: 2, 2003: 2, 2005: 3, 2007: 1, 2009: 1, 2011: 2, 2012: 1}
program processors: {1993: 1, 1996: 1, 1997: 1, 1999: 2, 2007: 1, 2011: 3, 2012: 2, 2013: 1, 2015: 1, 2016: 2, 2017: 2}
domain-specific language: {1993: 2, 2007: 2, 2008: 2, 2010: 3, 2011: 1, 2012: 4, 2013: 1, 2016: 1, 2017: 1}
domain specific languages: {1997: 1, 1999: 1, 2001: 1, 2004: 1, 2007: 3, 2008: 2, 2010: 4, 2011: 2, 2013: 1, 2016: 1}
industrial case study: {1999: 2, 2000: 2, 2001: 2, 2002: 1, 2004: 1, 2005: 1, 2008: 3, 2010: 1, 2011: 1, 2015: 2, 2016: 1}
query processing: {1999: 1, 2004: 3, 2005: 2, 2008: 1, 2010: 1, 2011: 2, 2012: 2, 2013: 1, 2015: 2, 2016: 2}
document handling: {2000: 2, 2001: 3, 2002: 1, 2003: 1, 2007: 1, 2010: 1, 2011: 2, 2012: 3, 2015: 1, 2016: 1, 2017: 1}
mobile devices: {2001: 2, 2002: 1, 2004: 2, 2012: 1, 2013: 1, 2015: 8, 2016: 2}
fault localization: {2002: 1, 2004: 1, 2008: 2, 2009: 3, 2011: 1, 2012: 6, 2013: 2, 2017: 1}
team working: {2005: 2, 2010: 3, 2012: 3, 2013: 5, 2015: 2, 2016: 1, 2017: 1}
specification mining: {2008: 2, 2010: 2, 2011: 6, 2012: 5, 2016: 2}
code completion: {2012: 8, 2013: 2, 2015: 5, 2016: 2}
marine vehicles: {1989: 2, 1991: 2, 1993: 3, 1997: 1, 1999: 1, 2001: 1, 2002: 3, 2005: 1, 2013: 1, 2015: 1}
android applications: {2016: 5, 2015: 8, 2017: 3}
android (operating system): {2016: 4, 2015: 7, 2017: 5}
conceptual model: {1988: 4, 1993: 2, 1996: 4, 1998: 2, 2001: 2, 2015: 1, 2016: 1}
knowledge representation: {1988: 2, 1989: 1, 1990: 2, 1991: 2, 1993: 1, 2002: 1, 2004: 3, 2010: 3, 2017: 1}
formal languages: {1988: 1, 1989: 1, 1993: 1, 1994: 2, 1995: 1, 1997: 2, 1998: 1, 1999: 1, 2001: 2, 2004: 1, 2010: 1, 2012: 1, 2013: 1}
data flow: {1989: 1, 1991: 1, 1992: 1, 1993: 4, 1996: 1, 1999: 1, 2001: 2, 2004: 1, 2008: 2, 2012: 1, 2016: 1}
failure analysis: {1990: 1, 1993: 1, 1996: 1, 1997: 3, 2000: 1, 2001: 1, 2004: 1, 2005: 2, 2007: 2, 2008: 1, 2009: 2}
reusable components: {1990: 2, 1992: 1, 1993: 3, 1999: 2, 2000: 2, 2003: 2, 2005: 1, 2008: 1, 2013: 2}
data structure: {1990: 3, 1993: 2, 2001: 1, 2002: 3, 2007: 1, 2008: 2, 2011: 2, 2016: 1, 2017: 1}
high level: {1991: 1, 1993: 1, 1995: 1, 1998: 1, 1999: 1, 2000: 1, 2001: 1, 2008: 1, 2011: 1, 2012: 1, 2013: 2, 2015: 3, 2016: 1}
complex systems: {1992: 1, 1994: 2, 1998: 1, 2000: 2, 2002: 1, 2003: 1, 2004: 2, 2010: 1, 2012: 1, 2013: 2, 2015: 2}
empirical evidence: {1992: 1, 2000: 1, 2003: 3, 2008: 2, 2010: 4, 2011: 1, 2012: 1, 2015: 2, 2016: 1}
future research: {1992: 1, 1998: 1, 2002: 1, 2004: 1, 2005: 1, 2008: 1, 2011: 2, 2012: 4, 2013: 1, 2015: 2, 2016: 1}
computational complexity: {1996: 1, 2003: 2, 2004: 1, 2009: 2, 2010: 2, 2011: 2, 2012: 1, 2013: 3, 2015: 1, 2016: 1}
space exploration: {1997: 1, 1998: 1, 2001: 3, 2003: 2, 2011: 1, 2012: 2, 2013: 1, 2015: 2, 2016: 2, 2017: 1}
functional requirements: {1998: 3, 2002: 3, 2003: 1, 2004: 1, 2011: 1, 2013: 3, 2016: 4}
systems re-engineering: {1998: 2, 1999: 1, 2000: 2, 2001: 3, 2003: 1, 2004: 2, 2005: 1, 2010: 1, 2011: 2, 2012: 1}
software development project: {1998: 2, 1999: 1, 2003: 2, 2005: 2, 2010: 2, 2012: 1, 2013: 6}
static analysis tools: {1998: 1, 2005: 3, 2008: 1, 2012: 3, 2013: 7, 2015: 1}
collaborative software development: {1998: 2, 2002: 2, 2008: 1, 2009: 1, 2010: 5, 2011: 2, 2012: 1, 2015: 2}
product line: {1999: 3, 2000: 1, 2004: 1, 2007: 2, 2008: 1, 2011: 1, 2012: 2, 2013: 1, 2015: 3, 2017: 1}
programming language semantics: {1999: 1, 2000: 1, 2003: 3, 2004: 2, 2008: 1, 2009: 2, 2010: 1, 2011: 2, 2016: 2, 2017: 1}
model-based testing: {1999: 3, 2005: 6, 2008: 2, 2015: 5}
hypermedia markup languages: {1999: 1, 2000: 3, 2001: 4, 2002: 3, 2011: 1, 2012: 4}
spreadsheet programs: {2000: 1, 2002: 1, 2003: 1, 2004: 2, 2005: 1, 2008: 2, 2011: 1, 2012: 4, 2013: 1, 2015: 1, 2016: 1}
reasoning about programs: {2000: 1, 2003: 1, 2005: 5, 2007: 1, 2008: 3, 2009: 1, 2010: 1, 2011: 1, 2013: 1, 2017: 1}
genetic algorithms: {2001: 1, 2004: 1, 2009: 1, 2011: 1, 2012: 2, 2013: 7, 2017: 3}
open source: {2002: 1, 2005: 1, 2008: 2, 2009: 2, 2011: 1, 2012: 3, 2013: 3, 2015: 1, 2016: 1, 2017: 1}
agile development: {2004: 5, 2005: 5, 2008: 1, 2010: 1, 2013: 1, 2015: 1, 2016: 2}
search-based software engineering: {2004: 2, 2012: 3, 2013: 5, 2015: 2, 2016: 2, 2017: 2}
eclipse plug-in: {2007: 2, 2008: 1, 2009: 1, 2011: 2, 2012: 6, 2013: 1, 2015: 1, 2017: 2}
model-driven engineering: {2008: 2, 2009: 2, 2010: 5, 2011: 1, 2012: 3, 2013: 3}
eclipse plugin: {2010: 4, 2012: 4, 2013: 5, 2015: 3}
big data: {2013: 5, 2015: 10, 2016: 1}
data collection: {1993: 2, 1998: 1, 2003: 1, 2010: 1, 2011: 2, 2012: 1, 2013: 2, 2015: 1, 2016: 3, 2017: 1}
pattern recognition: {1999: 4, 1990: 1, 1993: 1, 1996: 1, 1997: 1, 2002: 2, 2003: 2, 2012: 1, 2013: 1, 2015: 1}
expert systems: {2010: 1, 1988: 4, 1990: 3, 1993: 3, 2001: 1, 2008: 2, 2013: 1}
data privacy: {2016: 1, 2010: 1, 2011: 1, 2012: 4, 2013: 3, 2015: 5}
quality assessment: {1988: 1, 2002: 1, 2004: 2, 2010: 2, 2011: 3, 2012: 2, 2013: 3, 2015: 1}
requirements specification: {1988: 2, 1993: 3, 1994: 1, 2001: 2, 2002: 2, 2003: 1, 2008: 1, 2010: 1, 2011: 2}
requirements analysis: {1988: 1, 1996: 2, 1997: 1, 1999: 2, 2001: 3, 2007: 3, 2008: 1, 2011: 2}
high level languages: {1988: 1, 1989: 2, 1991: 1, 1993: 1, 1996: 1, 1999: 2, 2000: 2, 2001: 1, 2004: 1, 2010: 1, 2015: 1, 2017: 1}
management information systems: {1988: 1, 1991: 1, 1994: 2, 1998: 1, 2002: 2, 2004: 3, 2005: 3, 2008: 2}
state-space methods: {1989: 1, 1990: 1, 1998: 1, 2001: 2, 2002: 1, 2003: 1, 2004: 1, 2005: 2, 2007: 2, 2008: 2, 2009: 1}
software engineering practice: {1989: 1, 1990: 1, 1991: 2, 2003: 1, 2005: 1, 2010: 2, 2011: 3, 2013: 2, 2015: 2}
systems engineering: {1990: 1, 1993: 1, 1994: 1, 1999: 3, 2002: 3, 2003: 2, 2011: 1, 2015: 3}
system analysis and design: {1990: 1, 1993: 1, 1994: 1, 1997: 1, 2000: 1, 2003: 2, 2007: 4, 2008: 1, 2009: 1, 2010: 1, 2013: 1}
domain analysis: {1992: 1, 1993: 1, 1995: 1, 1996: 1, 1997: 2, 1998: 2, 1999: 1, 2000: 2, 2001: 1, 2011: 2, 2012: 1}
automated testing: {1994: 1, 1999: 1, 2001: 2, 2005: 2, 2007: 1, 2008: 1, 2010: 1, 2011: 2, 2013: 1, 2015: 3}
distributed development: {1994: 1, 2004: 3, 2008: 1, 2009: 1, 2012: 3, 2013: 6}
formal semantics: {1994: 4, 2001: 4, 2008: 1, 2012: 2, 2016: 3, 2017: 1}
test generation: {1996: 1, 2003: 2, 2004: 1, 2008: 1, 2010: 2, 2012: 2, 2016: 4, 2017: 2}
telecommunication computing: {1996: 1, 1998: 3, 1999: 2, 2000: 2, 2001: 2, 2003: 2, 2004: 1, 2005: 1, 2008: 1}
knowledge transfer: {1997: 1, 2005: 3, 2008: 3, 2010: 2, 2013: 3, 2015: 3}
genetic programming: {1997: 1, 1999: 2, 2001: 1, 2007: 1, 2009: 4, 2012: 3, 2013: 3}
web server: {1997: 1, 1999: 1, 2000: 1, 2001: 3, 2002: 3, 2004: 1, 2007: 1, 2009: 2, 2013: 1, 2017: 1}
mobile handsets: {1998: 1, 2000: 1, 2001: 1, 2002: 2, 2008: 1, 2010: 2, 2012: 1, 2013: 4, 2015: 2}
mobile agents: {1998: 1, 1999: 7, 2000: 4, 2001: 3}
human-computer interaction: {2001: 2, 2002: 2, 2003: 3, 2004: 1, 2005: 2, 2013: 2, 2015: 3}
principal component analysis: {2002: 2, 2005: 1, 2010: 2, 2012: 2, 2013: 4, 2015: 4}
unit tests: {2007: 2, 2011: 3, 2012: 4, 2013: 4, 2015: 2}
clustering algorithms: {2007: 1, 2008: 1, 2011: 5, 2012: 3, 2013: 2, 2015: 1, 2016: 2}
source coding: {2007: 3, 2008: 1, 2010: 2, 2011: 4, 2012: 2, 2013: 3}
existing techniques: {2007: 1, 2011: 1, 2012: 6, 2013: 2, 2017: 5}
stochastic processes: {2005: 2, 1997: 2, 2002: 1, 2004: 3, 2008: 1, 2009: 2, 2010: 1, 2011: 1, 2012: 1}
mobile apps: {2016: 7, 2013: 4, 2015: 1, 2017: 2}
application domain: {1988: 2, 1990: 2, 1991: 2, 1998: 2, 2000: 3, 2004: 1, 2011: 1, 2013: 1}
genetic mutations: {1988: 1, 1989: 2, 1991: 1, 1993: 4, 1996: 2, 2005: 1, 2008: 1, 2009: 2}
theorem proving: {1988: 1, 1990: 1, 1996: 1, 2000: 1, 2003: 2, 2004: 1, 2005: 2, 2007: 1, 2008: 1, 2012: 1, 2013: 1, 2015: 1}
size measurement: {1989: 1, 1990: 1, 1993: 1, 1996: 1, 1998: 2, 1999: 1, 2000: 1, 2002: 1, 2008: 2, 2013: 2, 2015: 1}
conference proceedings: {1989: 1, 1997: 2, 2000: 1, 2005: 3, 2007: 2, 2009: 1, 2012: 1, 2015: 1, 2016: 1, 2017: 1}
system development: {1989: 1, 2000: 1, 2002: 1, 2004: 3, 2005: 2, 2008: 1, 2010: 1, 2013: 2, 2015: 2}
incremental development: {1990: 2, 1998: 1, 1999: 1, 2000: 4, 2001: 1, 2005: 2, 2011: 3}
fault tolerance: {1990: 1, 1999: 1, 2000: 2, 2001: 2, 2003: 4, 2010: 1, 2012: 1, 2015: 2}
software analysis: {1991: 1, 1993: 2, 2000: 1, 2002: 2, 2005: 2, 2008: 1, 2010: 3, 2011: 1, 2013: 1}
root cause: {1992: 1, 2004: 1, 2007: 2, 2010: 1, 2013: 7, 2015: 2}
particle measurements: {1992: 1, 1997: 1, 1998: 1, 2003: 1, 2005: 2, 2008: 2, 2009: 1, 2011: 1, 2012: 2, 2013: 1, 2015: 1}
industrial practice: {1993: 1, 2000: 4, 2002: 3, 2003: 1, 2004: 1, 2010: 1, 2012: 1, 2013: 1, 2015: 1}
new version: {1994: 2, 1998: 1, 1999: 1, 2008: 4, 2013: 2, 2016: 4}
experience report: {1994: 1, 1998: 1, 1999: 1, 2007: 1, 2008: 2, 2010: 3, 2012: 4, 2013: 1}
last years: {1994: 1, 2002: 2, 2003: 1, 2004: 1, 2005: 2, 2010: 2, 2011: 1, 2012: 1, 2015: 2, 2017: 1}
non-functional requirements: {1995: 1, 2002: 2, 2003: 1, 2004: 2, 2005: 2, 2013: 1, 2015: 3, 2016: 2}
unit testing: {1996: 2, 1998: 1, 2005: 1, 2010: 2, 2011: 2, 2012: 3, 2013: 2, 2015: 1}
software engineering tools: {1996: 2, 1998: 1, 2003: 1, 2004: 3, 2007: 4, 2008: 1, 2011: 1, 2013: 1}
concurrent engineering: {1996: 3, 1997: 1, 1999: 1, 2005: 2, 2010: 6, 2011: 1}
architecture description languages: {1997: 1, 1998: 2, 1999: 3, 2002: 3, 2003: 1, 2004: 1, 2005: 1, 2007: 2}
model checker: {1999: 2, 2001: 2, 2002: 2, 2003: 2, 2008: 1, 2013: 5}
preliminary evaluation: {1999: 1, 2005: 1, 2009: 1, 2010: 1, 2011: 1, 2012: 3, 2013: 3, 2015: 3}
operating system kernels: {1999: 1, 2000: 1, 2005: 1, 2008: 1, 2011: 4, 2012: 3, 2013: 2, 2016: 1}
better understanding: {2000: 1, 2001: 1, 2002: 2, 2003: 2, 2004: 2, 2012: 2, 2013: 2, 2015: 2}
global software development: {2001: 4, 2003: 2, 2004: 1, 2005: 1, 2010: 5, 2011: 1}
software verification: {2001: 1, 2002: 3, 2003: 1, 2005: 2, 2008: 1, 2013: 3, 2016: 3}
program behavior: {2002: 1, 2004: 2, 2007: 1, 2008: 4, 2010: 2, 2012: 1, 2015: 2, 2017: 1}
organisational aspects: {2003: 2, 2008: 1, 2010: 2, 2011: 4, 2013: 2, 2015: 1, 2016: 1, 2017: 1}
web application: {2008: 1, 2010: 3, 2011: 1, 2012: 3, 2013: 4, 2017: 2}
probabilistic logic: {2008: 2, 2009: 1, 2010: 2, 2011: 1, 2012: 2, 2013: 2, 2016: 4}
military computing: {1996: 2, 1988: 1, 1989: 1, 1991: 2, 1993: 2, 1994: 1, 1999: 2, 2001: 1, 2003: 1}
association rules: {2001: 1, 2000: 2, 2004: 1, 2009: 1, 2010: 2, 2011: 2, 2012: 2, 2015: 2}
software security: {2005: 4, 2004: 1, 2007: 1, 2013: 4, 2015: 1, 2017: 2}
distributed databases: {1988: 2, 1996: 2, 2001: 2, 2002: 3, 2003: 1, 2005: 1, 2013: 1, 2016: 1}
mutation analysis: {1988: 1, 1996: 2, 2008: 1, 2009: 2, 2012: 2, 2013: 1, 2016: 3, 2017: 1}
software development environments: {1988: 3, 1989: 1, 1991: 2, 1993: 2, 1994: 2, 1995: 1, 2002: 1, 2007: 1}
aerospace computing: {1988: 1, 1999: 3, 2000: 1, 2002: 1, 2004: 1, 2007: 2, 2010: 1, 2011: 1, 2013: 1, 2015: 1}
product design: {1989: 1, 1990: 1, 1993: 1, 1994: 1, 1997: 1, 1998: 1, 1999: 1, 2000: 2, 2004: 1, 2007: 1, 2008: 1, 2011: 1}
intelligent networks: {1989: 1, 1996: 3, 1998: 2, 1999: 3, 2000: 1, 2001: 1, 2003: 2}
phase detection: {1990: 1, 1996: 3, 1997: 2, 2001: 1, 2002: 1, 2009: 3, 2011: 2}
change management: {1990: 1, 2000: 3, 2004: 1, 2005: 2, 2008: 1, 2010: 1, 2011: 1, 2012: 2, 2015: 1}
legal factors: {1991: 1, 1992: 1, 1994: 1, 1996: 2, 2000: 1, 2004: 1, 2007: 1, 2008: 1, 2009: 4}
process model: {1991: 2, 1993: 6, 1994: 3, 2011: 2}
different kinds: {1994: 1, 2000: 2, 2001: 1, 2002: 1, 2003: 1, 2005: 3, 2009: 1, 2010: 1, 2012: 1, 2016: 1}
version control: {1996: 1, 1998: 2, 1999: 1, 2005: 1, 2010: 2, 2011: 1, 2012: 3, 2015: 2}
object-oriented programs: {1996: 1, 2000: 2, 2001: 1, 2002: 3, 2007: 1, 2011: 3, 2012: 1, 2013: 1}
formal analysis: {1997: 1, 2004: 4, 2005: 2, 2008: 1, 2012: 1, 2013: 2, 2015: 2}
software engineering process: {1998: 1, 2000: 2, 2003: 2, 2007: 2, 2008: 1, 2011: 2, 2012: 3}
software houses: {1998: 1, 2000: 6, 2001: 1, 2005: 1, 2007: 1, 2011: 1, 2012: 1, 2013: 1}
empirical results: {1998: 1, 1999: 1, 2004: 1, 2005: 2, 2007: 1, 2009: 2, 2011: 1, 2012: 1, 2015: 3}
pervasive computing: {1999: 2, 2001: 1, 2005: 3, 2007: 1, 2008: 2, 2009: 2, 2013: 2}
java program: {1999: 2, 2002: 1, 2004: 1, 2005: 3, 2007: 2, 2008: 2, 2012: 1, 2015: 1}
execution trace: {1999: 2, 2004: 4, 2008: 1, 2012: 3, 2013: 1, 2017: 2}
static checking: {1999: 1, 2001: 2, 2004: 4, 2005: 4, 2008: 2}
quality attributes: {2000: 1, 2001: 3, 2003: 1, 2004: 2, 2010: 3, 2011: 1, 2013: 2}
software engineering course: {2000: 3, 2001: 2, 2003: 3, 2007: 1, 2012: 2, 2015: 2}
semantic web: {2004: 12, 2010: 1}
software repositories: {2004: 1, 2009: 1, 2011: 3, 2012: 1, 2013: 3, 2015: 3, 2016: 1}
model-based development: {2005: 2, 2008: 6, 2011: 2, 2015: 2, 2016: 1}
social networks: {2009: 1, 2010: 3, 2011: 2, 2012: 4, 2013: 3}
software clones: {2010: 2, 2011: 2, 2012: 4, 2013: 3, 2017: 2}
grounded theory: {2011: 1, 2012: 2, 2013: 1, 2016: 6, 2017: 3}
android apps: {2013: 1, 2015: 5, 2016: 4, 2017: 3}
integral part: {2000: 1, 2007: 1, 2008: 2, 2010: 2, 2012: 3, 2013: 1, 2015: 1, 2016: 1}
component-based development: {2003: 3, 1997: 1, 1999: 1, 2002: 5, 2005: 1, 2009: 1}
challenging task: {2010: 1, 1998: 1, 2008: 3, 2009: 1, 2012: 5, 2017: 1}
small number: {2011: 1, 1998: 1, 1999: 1, 2001: 1, 2003: 2, 2005: 1, 2008: 1, 2012: 1, 2015: 3}
data security: {1988: 1, 2002: 1, 2003: 3, 2005: 3, 2007: 1, 2008: 2, 2009: 1}
message passing: {1988: 1, 1996: 2, 1999: 1, 2000: 1, 2001: 2, 2003: 1, 2004: 1, 2013: 1, 2015: 2}
team members: {1988: 1, 2003: 1, 2007: 1, 2010: 3, 2011: 1, 2012: 1, 2013: 2, 2017: 2}
distributed environment: {1988: 2, 1992: 1, 1994: 2, 2004: 2, 2012: 5}
network servers: {1988: 1, 1996: 1, 1997: 1, 1999: 4, 2000: 1, 2002: 3, 2008: 1}
computer applications: {1988: 1, 1991: 1, 1992: 1, 1995: 1, 1996: 3, 2000: 3, 2004: 1, 2005: 1}
recent work: {1989: 1, 1993: 1, 2008: 1, 2011: 2, 2012: 1, 2013: 3, 2015: 1, 2016: 1, 2017: 1}
life testing: {1989: 2, 1990: 1, 1994: 3, 1999: 1, 2001: 1, 2002: 1, 2003: 3}
tree graphs: {1989: 1, 1991: 1, 1994: 1, 1997: 1, 1998: 1, 2000: 1, 2002: 1, 2007: 2, 2008: 1, 2009: 2}
design process: {1989: 1, 1991: 1, 1994: 3, 1996: 2, 1998: 1, 1999: 1, 2002: 2, 2011: 1}
runtime environment: {1989: 1, 2004: 2, 2005: 1, 2008: 2, 2009: 1, 2010: 1, 2011: 1, 2012: 3}
domain model: {1990: 2, 1993: 2, 1999: 3, 2001: 4, 2012: 1}
computerized monitoring: {1990: 1, 1992: 1, 1994: 2, 1996: 2, 1997: 1, 1999: 2, 2001: 1, 2004: 1, 2005: 1}
pattern matching: {1990: 1, 2001: 1, 2008: 1, 2010: 1, 2011: 2, 2012: 2, 2013: 1, 2016: 2, 2017: 1}
educational technology: {1990: 1, 2000: 5, 2005: 2, 2008: 1, 2009: 3}
reactive systems: {1990: 1, 1992: 3, 1995: 1, 1997: 1, 1999: 2, 2005: 1, 2013: 1, 2015: 2}
experimental evaluation: {1990: 2, 1991: 2, 1993: 1, 2002: 1, 2004: 1, 2007: 1, 2012: 2, 2013: 1, 2015: 1}
50 %: {1991: 1, 1994: 1, 2003: 1, 2004: 1, 2009: 1, 2015: 3, 2016: 2, 2017: 2}
prototype system: {1991: 1, 1993: 2, 1998: 3, 2001: 1, 2009: 1, 2012: 3, 2013: 1}
software engineering institute: {1991: 2, 1993: 2, 1994: 2, 2000: 5, 2003: 1}
software specification: {1991: 1, 1994: 1, 1999: 1, 2002: 4, 2003: 2, 2004: 1, 2005: 1, 2008: 1}
customer satisfaction: {1993: 1, 2000: 2, 2004: 1, 2007: 6, 2008: 1, 2012: 1}
design space: {1994: 2, 1996: 1, 2001: 3, 2011: 1, 2013: 1, 2017: 4}
controlled experiment: {1994: 1, 2003: 1, 2005: 1, 2011: 1, 2012: 3, 2013: 1, 2016: 3, 2017: 1}
software system development: {1996: 1, 1999: 2, 2004: 1, 2008: 1, 2011: 2, 2012: 3, 2013: 1, 2015: 1}
software engineer: {1998: 1, 2003: 1, 2004: 2, 2005: 2, 2008: 2, 2010: 2, 2012: 2}
cost-benefit analysis: {1999: 1, 2001: 2, 2002: 3, 2003: 2, 2010: 2, 2012: 2}
software component: {1999: 1, 2003: 2, 2005: 1, 2008: 1, 2009: 2, 2010: 1, 2011: 2, 2012: 2}
model checkers: {1999: 2, 2001: 2, 2002: 2, 2003: 1, 2007: 2, 2010: 1, 2012: 1, 2013: 1}
architectural design: {1999: 1, 2002: 1, 2004: 5, 2008: 2, 2013: 3}
software architects: {1999: 1, 2004: 2, 2005: 1, 2010: 1, 2011: 1, 2012: 3, 2013: 2, 2017: 1}
operating system: {1999: 1, 2000: 2, 2002: 1, 2005: 1, 2011: 2, 2012: 1, 2013: 3, 2017: 1}
product line engineering: {1999: 1, 2002: 2, 2003: 1, 2005: 4, 2010: 1, 2011: 2, 2012: 1}
software engineering courses: {2000: 2, 2003: 1, 2005: 1, 2007: 1, 2013: 5, 2015: 1, 2017: 1}
program source code: {2000: 2, 2003: 2, 2009: 1, 2011: 3, 2012: 3, 2016: 1}
multiagent systems: {2000: 1, 2002: 1, 2003: 3, 2004: 3, 2005: 2, 2008: 1, 2012: 1}
uml models: {2000: 1, 2002: 3, 2003: 1, 2007: 1, 2008: 3, 2012: 1, 2015: 1, 2017: 1}
previous research: {2002: 1, 2005: 1, 2007: 2, 2009: 1, 2011: 1, 2013: 2, 2016: 1, 2017: 3}
research agenda: {2002: 2, 2010: 2, 2011: 2, 2012: 1, 2013: 1, 2015: 4}
power consumption: {2002: 4, 2011: 2, 2012: 5, 2013: 1}
complex software systems: {2003: 2, 2004: 1, 2005: 1, 2007: 2, 2008: 1, 2010: 1, 2015: 4}
test-driven development: {2003: 2, 2004: 2, 2007: 1, 2010: 4, 2015: 3}
security requirements: {2004: 1, 2005: 1, 2008: 3, 2011: 1, 2015: 3, 2016: 3}
existing work: {2005: 1, 2008: 1, 2012: 1, 2013: 3, 2015: 1, 2016: 4, 2017: 1}
user study: {2007: 1, 2008: 1, 2012: 3, 2013: 2, 2015: 1, 2016: 1, 2017: 3}
model driven engineering: {2007: 1, 2008: 2, 2009: 2, 2011: 4, 2012: 2, 2015: 1}
dynamic symbolic execution: {2008: 1, 2010: 2, 2011: 5, 2015: 2, 2016: 2}
prior work: {2008: 1, 2009: 1, 2011: 4, 2012: 1, 2013: 2, 2015: 1, 2016: 2}
code changes: {2009: 1, 2010: 1, 2011: 2, 2013: 2, 2015: 2, 2016: 4}
web 2.0: {2010: 8, 2011: 4}
bug detection: {2011: 3, 2012: 2, 2013: 2, 2015: 1, 2016: 3, 2017: 1}
software analytics: {2012: 5, 2013: 6, 2016: 1}
development projects: {1999: 1, 1993: 1, 1995: 1, 1998: 1, 2000: 2, 2003: 2, 2007: 1, 2010: 1, 2015: 1}
application code: {2001: 1, 1990: 3, 1999: 1, 2002: 3, 2008: 1, 2009: 1, 2012: 1}
bayesian methods: {2005: 1, 2004: 1, 2009: 1, 2010: 6, 2011: 1, 2012: 1}
boolean functions: {2007: 1, 1993: 1, 1999: 1, 2000: 1, 2001: 2, 2002: 1, 2004: 1, 2008: 2, 2011: 1}
mechanical factors: {2008: 1, 1988: 1, 1990: 1, 1991: 1, 1992: 1, 1998: 1, 2002: 2, 2003: 1, 2005: 1, 2007: 1}
dynamic programming: {1988: 1, 1993: 1, 1997: 1, 1999: 2, 2000: 1, 2003: 2, 2007: 1, 2008: 1, 2009: 1}
test data: {1988: 2, 1992: 3, 1993: 3, 1999: 1, 2003: 1, 2015: 1}
techniques tools: {1988: 1, 1990: 1, 1992: 1, 2002: 1, 2003: 1, 2004: 1, 2010: 1, 2011: 1, 2013: 2, 2015: 1}
decision trees: {1989: 1, 2002: 1, 2004: 2, 2008: 1, 2009: 1, 2011: 2, 2012: 1, 2013: 1, 2016: 1}
large-scale software systems: {1989: 1, 1998: 1, 1999: 1, 2012: 4, 2015: 4}
knowledge acquisition: {1989: 1, 1993: 1, 1994: 2, 2002: 1, 2004: 2, 2007: 2, 2010: 1, 2012: 1}
safety-critical systems: {1990: 1, 2000: 3, 2002: 3, 2010: 1, 2012: 1, 2013: 1, 2015: 1}
project support environments: {1990: 2, 1993: 1, 1994: 2, 1996: 1, 1999: 1, 2000: 1, 2002: 1, 2003: 2}
operational profile: {1990: 3, 1997: 1, 2005: 1, 2008: 3, 2017: 3}
research and development management: {1990: 1, 1994: 1, 1998: 1, 1999: 1, 2000: 2, 2002: 2, 2004: 1, 2005: 2}
industrial control: {1990: 1, 1998: 3, 1999: 1, 2000: 2, 2002: 2, 2004: 1, 2008: 1}
code standards: {1990: 2, 1994: 1, 1997: 1, 1999: 2, 2000: 1, 2001: 1, 2002: 1, 2003: 1, 2007: 1}
electrical equipment industry: {1990: 1, 1997: 1, 1998: 3, 1999: 2, 2000: 2, 2002: 1, 2004: 1}
industrial setting: {1991: 1, 2010: 2, 2011: 5, 2012: 2, 2013: 1}
cost estimation: {1991: 1, 1996: 3, 1998: 4, 2000: 1, 2004: 1, 2012: 1}
cognitive science: {1991: 1, 1994: 1, 1996: 1, 1998: 2, 2003: 1, 2008: 1, 2010: 2, 2011: 2}
large scale integration: {1991: 1, 1996: 1, 1998: 1, 1999: 1, 2002: 2, 2004: 1, 2005: 1, 2010: 1, 2011: 1, 2012: 1}
process planning: {1992: 1, 1997: 1, 1998: 1, 1999: 2, 2000: 2, 2002: 3, 2004: 1}
automatic generation: {1993: 1, 2001: 1, 2005: 1, 2008: 1, 2010: 5, 2011: 1, 2013: 1}
mutation testing: {1993: 4, 2015: 4, 2017: 3}
research community: {1994: 2, 2008: 1, 2010: 1, 2011: 1, 2012: 1, 2013: 3, 2015: 2}
software maintainability: {1994: 1, 2001: 1, 2003: 1, 2009: 1, 2010: 1, 2011: 1, 2012: 2, 2013: 3}
data processing: {1994: 2, 1999: 1, 2007: 1, 2011: 2, 2013: 3, 2015: 2}
maintenance tasks: {1994: 1, 2002: 1, 2004: 1, 2005: 3, 2011: 1, 2012: 2, 2013: 2}
legacy systems: {1995: 1, 1997: 1, 1998: 1, 2000: 1, 2001: 2, 2003: 1, 2004: 3, 2010: 1}
employee welfare: {1997: 2, 2000: 1, 2003: 3, 2005: 1, 2008: 1, 2009: 1, 2013: 2}
management of change: {1998: 2, 2002: 1, 2004: 1, 2007: 1, 2008: 1, 2010: 2, 2011: 1, 2012: 2}
user feedback: {1998: 1, 2012: 2, 2013: 7, 2017: 1}
source code analysis: {1998: 1, 2008: 1, 2010: 1, 2011: 3, 2013: 1, 2015: 3, 2017: 1}
design problems: {1999: 2, 2002: 1, 2010: 1, 2011: 2, 2013: 2, 2016: 3}
cots products: {1999: 2, 2002: 2, 2005: 1, 2009: 6}
program statements: {1999: 3, 2003: 1, 2004: 4, 2009: 1, 2013: 2}
online front-ends: {1999: 1, 2001: 1, 2005: 1, 2010: 1, 2011: 2, 2013: 3, 2017: 2}
semantic information: {1999: 2, 2001: 2, 2008: 2, 2012: 3, 2016: 2}
visual languages: {2000: 3, 2002: 1, 2004: 1, 2007: 2, 2008: 2, 2010: 1, 2011: 1}
software documentation: {2000: 1, 2012: 1, 2013: 2, 2015: 7}
operational semantics: {2000: 2, 2001: 2, 2003: 2, 2011: 4, 2013: 1}
test automation: {2000: 1, 2009: 1, 2011: 1, 2012: 3, 2013: 4, 2016: 1}
pattern clustering: {2001: 1, 2007: 1, 2011: 2, 2012: 3, 2013: 3, 2016: 1}
distributed software development: {2001: 2, 2005: 1, 2009: 2, 2011: 4, 2012: 1, 2013: 1}
current tools: {2001: 1, 2005: 1, 2007: 1, 2008: 1, 2011: 1, 2012: 2, 2013: 3, 2015: 1}
java code: {2002: 1, 2009: 3, 2012: 2, 2013: 2, 2015: 3}
modern software systems: {2002: 1, 2009: 2, 2012: 1, 2013: 4, 2015: 2, 2016: 1}
open source project: {2002: 2, 2005: 2, 2008: 1, 2011: 2, 2013: 2, 2016: 2}
state machines: {2002: 3, 2003: 3, 2004: 2, 2010: 3}
multi-agent systems: {2003: 3, 2004: 1, 2005: 1, 2009: 1, 2012: 4, 2015: 1}
software engineering researchers: {2003: 1, 2010: 4, 2011: 1, 2013: 3, 2015: 2}
information needs: {2003: 1, 2007: 1, 2010: 2, 2011: 3, 2013: 3, 2015: 1}
agile software development: {2004: 1, 2005: 2, 2010: 2, 2012: 2, 2013: 1, 2015: 2, 2017: 1}
previous studies: {2004: 1, 2005: 1, 2008: 1, 2013: 1, 2015: 4, 2016: 2, 2017: 1}
software refactoring: {2004: 1, 2007: 2, 2008: 1, 2009: 2, 2012: 3, 2013: 1, 2015: 1}
run time: {2004: 4, 2009: 2, 2011: 3, 2012: 1, 2013: 1}
self-adaptive systems: {2005: 1, 2010: 2, 2012: 1, 2015: 7}
contextual information: {2007: 2, 2011: 1, 2012: 3, 2013: 2, 2015: 3}
novel technique: {2008: 1, 2009: 1, 2012: 3, 2015: 1, 2016: 5}
build system: {2011: 4, 2013: 4, 2015: 1, 2017: 2}
technical debt: {2011: 2, 2012: 3, 2013: 4, 2015: 2}
api elements: {2012: 3, 2017: 8}
lambda expressions: {2013: 3, 2016: 1, 2017: 7}
system performance: {1988: 2, 1992: 1, 2002: 1, 2007: 2, 2011: 1, 2015: 3}
multimedia computing: {1998: 1, 1996: 1, 1999: 1, 2000: 3, 2001: 1, 2004: 1, 2008: 1, 2013: 1}
two case studies: {2002: 1, 1999: 1, 2004: 1, 2008: 3, 2009: 1, 2011: 2, 2013: 1}
meta data: {2008: 1, 2000: 1, 2003: 3, 2010: 2, 2012: 2, 2016: 1}
quality control: {2010: 1, 1988: 1, 1990: 5, 1993: 1, 1996: 1, 2011: 1}
90 %: {2011: 1, 1992: 1, 1994: 2, 1998: 1, 2004: 1, 2009: 1, 2012: 1, 2013: 1, 2016: 1}
traceability links: {2012: 3, 2000: 1, 2003: 1, 2008: 1, 2011: 4}
# x201c: {2013: 3, 2012: 7}
database systems: {1988: 1, 1989: 1, 1993: 1, 1998: 2, 1999: 1, 2003: 1, 2004: 2, 2007: 1}
rapid prototyping: {1988: 1, 1989: 1, 1996: 2, 1999: 2, 2008: 1, 2010: 1, 2012: 1, 2015: 1}
prototype implementation: {1988: 2, 1990: 1, 1999: 1, 2000: 2, 2005: 1, 2012: 2, 2015: 1}
inference algorithms: {1988: 1, 1994: 1, 1997: 1, 2001: 2, 2008: 1, 2012: 1, 2013: 2, 2017: 1}
system design: {1988: 2, 1998: 1, 2001: 2, 2002: 1, 2004: 1, 2008: 2, 2012: 1}
program interpreters: {1988: 2, 1996: 1, 2000: 3, 2004: 1, 2008: 1, 2013: 1, 2015: 1}
computer vision: {1988: 1, 1999: 1, 2002: 1, 2005: 1, 2011: 3, 2013: 2, 2015: 1}
sampling methods: {1989: 1, 1992: 1, 1993: 2, 1997: 1, 2001: 1, 2007: 1, 2009: 3}
software modules: {1989: 1, 1993: 1, 1996: 2, 2011: 1, 2012: 4, 2013: 1}
management training: {1989: 1, 1990: 2, 1993: 1, 1998: 1, 1999: 1, 2000: 2, 2005: 1, 2007: 1}
job shop scheduling: {1990: 1, 1996: 1, 1997: 1, 2000: 2, 2001: 2, 2002: 1, 2005: 1, 2008: 1}
object-oriented development: {1990: 1, 1991: 2, 1998: 2, 1999: 1, 2004: 2, 2005: 1, 2013: 1}
two ways: {1990: 2, 1998: 1, 2001: 1, 2005: 1, 2007: 3, 2012: 1, 2015: 1}
human resource management: {1990: 2, 1996: 3, 1998: 1, 2001: 1, 2002: 2, 2010: 1}
product quality: {1990: 1, 1995: 1, 2000: 2, 2004: 1, 2008: 1, 2010: 1, 2012: 2, 2013: 1}
embedded computing: {1992: 2, 1998: 1, 2002: 1, 2003: 1, 2005: 4, 2008: 1}
key idea: {1992: 1, 1994: 1, 2010: 1, 2012: 2, 2013: 2, 2015: 1, 2017: 2}
input variables: {1992: 2, 1996: 1, 2002: 2, 2010: 1, 2011: 1, 2013: 2, 2017: 1}
c programs: {1992: 1, 1999: 1, 2003: 2, 2004: 2, 2005: 1, 2009: 1, 2016: 2}
main contribution: {1992: 1, 2002: 1, 2003: 1, 2004: 1, 2007: 1, 2011: 1, 2012: 3, 2017: 1}
cost benefit analysis: {1992: 1, 1996: 1, 2000: 1, 2001: 2, 2002: 2, 2003: 2, 2005: 1}
static program analysis: {1993: 2, 2007: 1, 2010: 2, 2011: 1, 2012: 1, 2015: 2, 2016: 1}
program variables: {1993: 2, 2004: 1, 2008: 2, 2012: 2, 2013: 3}
error detection: {1993: 1, 1994: 1, 2004: 1, 2005: 2, 2007: 3, 2016: 1, 2017: 1}
approximation methods: {1993: 1, 2010: 1, 2011: 4, 2012: 1, 2013: 1, 2015: 2}
design recovery: {1993: 1, 1994: 2, 1998: 1, 2002: 3, 2003: 2, 2004: 1}
marketing and sales: {1993: 1, 1996: 1, 1998: 1, 2001: 1, 2002: 1, 2003: 3, 2007: 1, 2010: 1}
program correctness: {1993: 2, 1995: 1, 2000: 2, 2009: 3, 2010: 1, 2015: 1}
business processes: {1993: 1, 1998: 1, 2008: 3, 2011: 2, 2013: 2, 2015: 1}
high accuracy: {1994: 1, 2008: 2, 2012: 1, 2013: 1, 2015: 1, 2016: 1, 2017: 3}
future work: {1994: 1, 2000: 2, 2004: 1, 2010: 1, 2011: 1, 2013: 3, 2015: 1}
logic testing: {1994: 1, 1996: 1, 1997: 1, 2001: 1, 2003: 1, 2005: 1, 2007: 1, 2008: 2, 2009: 1}
quality improvement: {1994: 1, 1996: 2, 2000: 1, 2007: 2, 2011: 2, 2013: 2}
reachability analysis: {1994: 3, 1996: 2, 1997: 1, 2002: 1, 2008: 1, 2010: 1, 2011: 1}
simulation languages: {1996: 1, 2008: 1, 2010: 1, 2011: 2, 2012: 3, 2013: 2}
test case: {1996: 1, 1999: 1, 2001: 1, 2002: 1, 2010: 1, 2012: 2, 2013: 1, 2015: 1, 2016: 1}
80 %: {1996: 1, 2004: 1, 2008: 1, 2011: 2, 2013: 1, 2016: 2, 2017: 2}
risk assessment: {1996: 2, 1998: 1, 2003: 2, 2010: 3, 2013: 2}
streaming media: {1997: 2, 2000: 1, 2004: 1, 2005: 2, 2007: 2, 2013: 1, 2016: 1}
iterative methods: {1997: 1, 2000: 1, 2001: 1, 2005: 1, 2007: 1, 2011: 2, 2013: 2, 2016: 1}
graphical user interface: {1998: 1, 2002: 1, 2008: 1, 2009: 2, 2010: 2, 2011: 1, 2016: 2}
two years: {1998: 2, 2002: 1, 2003: 1, 2005: 1, 2007: 1, 2011: 1, 2012: 1, 2013: 1, 2015: 1}
use cases: {1998: 1, 2002: 2, 2003: 1, 2005: 4, 2008: 1, 2009: 1}
software development team: {1998: 3, 2002: 1, 2012: 4, 2015: 2}
electronic commerce: {1998: 1, 2000: 1, 2002: 1, 2008: 2, 2010: 3, 2011: 1, 2013: 1}
application development: {1998: 2, 1999: 1, 2002: 4, 2003: 2, 2008: 1}
processor scheduling: {1998: 1, 1999: 4, 2000: 2, 2001: 2, 2002: 1}
verification techniques: {1999: 1, 2001: 2, 2004: 3, 2005: 1, 2008: 1, 2009: 1, 2010: 1}
different levels: {2000: 1, 2001: 1, 2004: 1, 2005: 1, 2010: 1, 2011: 2, 2016: 1, 2017: 2}
regression test selection: {2000: 1, 2002: 1, 2007: 2, 2015: 4, 2017: 2}
sequence diagrams: {2000: 3, 2001: 7}
project managers: {2000: 1, 2002: 1, 2003: 1, 2009: 1, 2010: 1, 2011: 1, 2012: 3, 2015: 1}
design models: {2000: 1, 2004: 2, 2007: 3, 2010: 1, 2013: 2, 2015: 1}
task analysis: {2000: 3, 2001: 1, 2008: 1, 2009: 2, 2012: 2, 2013: 1}
distributed components: {2000: 2, 2002: 2, 2003: 2, 2004: 4}
program control structures: {2000: 1, 2001: 1, 2002: 1, 2008: 1, 2010: 2, 2011: 1, 2012: 2, 2013: 1}
component-based systems: {2000: 2, 2003: 1, 2004: 5, 2007: 1, 2008: 1}
decision support systems: {2000: 1, 2001: 1, 2004: 1, 2005: 1, 2008: 3, 2011: 2, 2013: 1}
software defects: {2001: 1, 2005: 1, 2008: 1, 2010: 3, 2011: 1, 2012: 2, 2013: 1}
early results: {2001: 1, 2002: 1, 2004: 1, 2007: 1, 2011: 3, 2012: 2, 2015: 1}
automated debugging: {2001: 2, 2005: 1, 2008: 1, 2012: 2, 2013: 2, 2016: 2}
open-source projects: {2002: 2, 2011: 1, 2012: 1, 2013: 1, 2015: 3, 2016: 1, 2017: 1}
race conditions: {2002: 5, 2015: 4, 2017: 1}
software product line engineering: {2002: 2, 2010: 1, 2011: 2, 2012: 2, 2013: 1, 2015: 2}
training data: {2002: 1, 2013: 5, 2015: 1, 2016: 3}
computer games: {2003: 2, 2010: 2, 2011: 2, 2015: 2, 2016: 1, 2017: 1}
different types: {2003: 1, 2005: 1, 2007: 2, 2008: 1, 2012: 2, 2013: 2, 2017: 1}
dynamic slicing: {2003: 1, 2004: 5, 2005: 1, 2012: 1, 2016: 2}
academia industry: {2005: 3, 2010: 2, 2011: 3, 2013: 2}
agile practices: {2005: 2, 2008: 2, 2012: 4, 2013: 2}
domain specific language: {2007: 2, 2010: 2, 2013: 1, 2015: 2, 2017: 3}
program elements: {2008: 2, 2012: 4, 2013: 4}
bug report: {2008: 1, 2010: 2, 2011: 1, 2012: 4, 2013: 2}
bug finding: {2009: 1, 2011: 1, 2012: 3, 2015: 1, 2016: 4}
concurrency bugs: {2011: 4, 2012: 3, 2013: 1, 2017: 2}
text mining: {2011: 3, 2012: 7}
q & amp: {2011: 3, 2013: 5, 2015: 2}
dynamic test generation: {2011: 8, 2013: 2}
natural language text: {2012: 6, 2013: 3, 2017: 1}
api documentation: {2012: 1, 2013: 3, 2016: 5, 2017: 1}
further education: {2012: 2, 2013: 3, 2015: 5}
global software engineering: {2012: 6, 2013: 1, 2015: 3}
personal digital assistants: {1996: 1, 2000: 1, 2001: 1, 2002: 3, 2004: 3}
real world: {1988: 1, 2000: 1, 2002: 1, 2007: 1, 2011: 1, 2013: 2, 2015: 2}
program visualization: {1988: 1, 1989: 1, 1992: 3, 2000: 4}
milling machines: {1989: 2, 1990: 1, 1992: 2, 1994: 1, 1998: 1, 1999: 1, 2002: 1}
existing systems: {1989: 1, 1998: 2, 2003: 1, 2007: 1, 2013: 2, 2016: 2}
first step: {1989: 1, 2000: 1, 2008: 2, 2012: 1, 2013: 1, 2016: 1, 2017: 2}
manual effort: {1989: 1, 2007: 1, 2010: 1, 2011: 1, 2012: 2, 2013: 3}
assembly systems: {1990: 1, 2000: 1, 2001: 3, 2002: 1, 2003: 1, 2007: 1, 2009: 1}
multiple views: {1990: 2, 1991: 2, 1993: 1, 2011: 1, 2012: 3}
previous approaches: {1990: 1, 1992: 2, 2003: 1, 2008: 2, 2009: 1, 2016: 1, 2017: 1}
jacobian matrices: {1991: 1, 1997: 1, 1999: 1, 2002: 1, 2003: 1, 2009: 1, 2012: 1, 2013: 1, 2015: 1}
environmental economics: {1991: 1, 1999: 2, 2000: 1, 2003: 1, 2004: 1, 2005: 1, 2007: 1, 2015: 1}
innovation management: {1991: 1, 2004: 1, 2008: 6, 2012: 1}
social aspects of automation: {1991: 2, 2007: 1, 2010: 2, 2011: 1, 2012: 1, 2015: 2}
test case generation: {1991: 1, 2001: 1, 2005: 1, 2012: 2, 2013: 1, 2015: 3}
10 %: {1992: 1, 2007: 1, 2011: 1, 2012: 1, 2013: 3, 2015: 2}
quality software: {1993: 1, 1998: 1, 1999: 1, 2002: 4, 2005: 1, 2011: 1}
virtual machines: {1993: 2, 2008: 1, 2011: 1, 2013: 1, 2015: 3, 2016: 1}
project teams: {1993: 1, 2000: 1, 2009: 3, 2011: 1, 2012: 1, 2013: 2}
current practice: {1993: 2, 1998: 2, 2003: 1, 2011: 2, 2013: 1, 2015: 1}
data-flow testing: {1993: 5, 1996: 4}
industrial training: {1993: 1, 1994: 1, 2000: 1, 2001: 2, 2005: 3, 2007: 1}
structured programming: {1993: 1, 1994: 1, 1996: 2, 2000: 1, 2002: 1, 2010: 1, 2015: 2}
professional aspects: {1994: 2, 2000: 2, 2003: 1, 2010: 2, 2015: 2}
abstract syntax trees: {1994: 2, 2013: 2, 2016: 3, 2017: 2}
large systems: {1995: 3, 1998: 1, 2001: 2, 2011: 1, 2013: 1, 2015: 1}
maintenance process: {1995: 1, 1996: 2, 1998: 1, 2000: 1, 2002: 1, 2008: 1, 2011: 1, 2015: 1}
client program: {1996: 1, 2008: 1, 2009: 2, 2012: 5}
qualitative analysis: {1996: 2, 1998: 1, 2009: 1, 2011: 1, 2013: 1, 2015: 1, 2017: 2}
architectural style: {1996: 2, 1999: 3, 2000: 1, 2004: 2, 2010: 1}
industrial projects: {1996: 3, 2004: 1, 2005: 1, 2010: 2, 2015: 2}
constraint handling: {1996: 1, 2000: 2, 2004: 2, 2011: 1, 2012: 3}
case tools: {1997: 2, 2000: 3, 2004: 1, 2005: 2, 2011: 1}
domain-specific languages: {1997: 1, 2008: 2, 2011: 2, 2012: 2, 2016: 2}
program transformation: {1997: 1, 2008: 1, 2009: 1, 2011: 1, 2013: 2, 2015: 1, 2017: 2}
code reviews: {1997: 1, 2013: 1, 2015: 4, 2016: 3}
architectural styles: {1997: 1, 1998: 1, 1999: 2, 2000: 1, 2001: 1, 2003: 1, 2004: 1, 2011: 1}
empirical data: {1998: 2, 2000: 2, 2001: 1, 2002: 1, 2004: 2, 2015: 1}
mission critical systems: {1998: 2, 1999: 1, 2003: 1, 2004: 3, 2008: 1, 2017: 1}
information management: {1998: 1, 2000: 2, 2001: 1, 2002: 1, 2004: 2, 2010: 1, 2013: 1}
generated code: {1998: 1, 2000: 2, 2002: 1, 2003: 1, 2011: 2, 2012: 1, 2013: 1}
personal software process: {1998: 2, 1999: 1, 2000: 2, 2003: 2, 2012: 2}
early stages: {1999: 1, 2004: 1, 2005: 1, 2009: 1, 2010: 1, 2011: 1, 2013: 2, 2015: 1}
distance learning: {1999: 2, 2000: 5, 2015: 2}
binary decision diagrams: {1999: 1, 2001: 3, 2002: 1, 2004: 1, 2008: 1, 2013: 1, 2017: 1}
type theory: {1999: 1, 2000: 3, 2005: 3, 2007: 1, 2016: 1}
authoring languages: {1999: 1, 2012: 1, 2013: 2, 2015: 4, 2017: 1}
programming model: {1999: 2, 2002: 2, 2005: 1, 2015: 4}
new technique: {1999: 1, 2002: 2, 2003: 1, 2005: 2, 2008: 1, 2012: 1, 2013: 1}
context-aware services: {1999: 1, 2002: 2, 2003: 2, 2005: 1, 2007: 1, 2008: 1, 2009: 1}
property specifications: {1999: 4, 2002: 2, 2005: 1, 2008: 2}
medical computing: {1999: 1, 2000: 1, 2004: 1, 2008: 4, 2009: 1, 2015: 1}
application programming: {1999: 1, 2005: 1, 2008: 1, 2009: 1, 2011: 1, 2012: 3, 2017: 1}
software development practice: {2000: 2, 2005: 1, 2010: 3, 2011: 1, 2012: 2}
open source software development: {2000: 1, 2003: 1, 2005: 3, 2007: 2, 2012: 1, 2015: 1}
message sequence charts: {2000: 2, 2001: 2, 2005: 1, 2011: 2, 2012: 2}
exception handling: {2000: 2, 2004: 2, 2008: 1, 2009: 1, 2012: 2, 2013: 1}
new features: {2000: 1, 2005: 1, 2007: 1, 2011: 1, 2012: 2, 2013: 3}
abstract interpretation: {2000: 1, 2004: 3, 2011: 2, 2015: 2, 2016: 1}
software engineering methods: {2000: 2, 2008: 2, 2012: 4, 2015: 1}
software modeling: {2000: 1, 2001: 1, 2003: 1, 2004: 3, 2005: 1, 2013: 2}
latent semantic indexing: {2001: 2, 2003: 2, 2008: 1, 2012: 2, 2017: 2}
requirements elicitation: {2001: 2, 2005: 2, 2010: 2, 2011: 2, 2015: 1}
architectural decisions: {2001: 1, 2010: 2, 2011: 3, 2012: 1, 2015: 2}
state space: {2001: 1, 2002: 1, 2010: 1, 2011: 4, 2012: 1, 2013: 1}
behaviour models: {2001: 2, 2005: 1, 2007: 1, 2008: 2, 2009: 1, 2010: 2}
software engineering students: {2001: 1, 2003: 2, 2005: 3, 2013: 1, 2015: 2}
product lines: {2002: 2, 2005: 1, 2008: 1, 2010: 2, 2013: 1, 2015: 2}
's behavior: {2002: 1, 2003: 1, 2007: 1, 2008: 1, 2012: 1, 2013: 1, 2016: 1, 2017: 2}
software dependability: {2002: 2, 2003: 2, 2004: 2, 2005: 2, 2012: 1}
new challenges: {2002: 1, 2003: 1, 2012: 1, 2015: 5, 2017: 1}
security policies: {2003: 1, 2008: 5, 2015: 1, 2017: 2}
dynamic slices: {2003: 1, 2004: 8}
automotive industry: {2003: 3, 2008: 4, 2010: 2}
software failure: {2003: 1, 2005: 2, 2010: 1, 2012: 2, 2013: 3}
current research: {2003: 2, 2004: 1, 2008: 1, 2010: 2, 2011: 1, 2012: 1, 2015: 1}
initial results: {2003: 1, 2010: 1, 2011: 2, 2012: 1, 2013: 2, 2015: 2}
main goal: {2004: 1, 2011: 1, 2012: 1, 2013: 4, 2015: 2}
support vector machines: {2004: 2, 2011: 1, 2012: 2, 2013: 3, 2017: 1}
health care: {2004: 1, 2008: 5, 2012: 1, 2013: 2}
service composition: {2004: 1, 2011: 4, 2013: 2, 2016: 2}
code coverage: {2007: 1, 2011: 3, 2012: 4, 2017: 1}
error messages: {2009: 2, 2013: 1, 2016: 1, 2017: 5}
feature model: {2009: 3, 2011: 2, 2013: 1, 2015: 1, 2016: 2}
feature models: {2009: 1, 2011: 2, 2012: 2, 2013: 2, 2016: 2}
multicore processing: {2009: 1, 2010: 3, 2011: 1, 2012: 4}
static verification: {2010: 2, 2011: 7}
featured transition systems: {2011: 1, 2012: 2, 2015: 3, 2016: 3}
defect prediction models: {2011: 2, 2015: 2, 2016: 5}
high structural coverage: {2011: 9}
text retrieval: {2012: 1, 2013: 6, 2015: 2}
data science: {2013: 6, 2016: 2, 2017: 1}
data scientists: {2013: 4, 2016: 5}
significant impact: {1998: 1, 1993: 1, 2004: 1, 2008: 1, 2011: 2, 2016: 1, 2017: 1}
key issues: {1998: 1, 1993: 1, 2002: 1, 2003: 1, 2004: 1, 2005: 1, 2013: 1, 2015: 1}
bayes methods: {2005: 1, 2004: 1, 2008: 1, 2009: 1, 2010: 1, 2012: 1, 2013: 1, 2016: 1}
component model: {2008: 1, 2001: 1, 2002: 1, 2003: 2, 2004: 1, 2010: 2}
change history: {2009: 1, 2017: 1, 2011: 1, 2012: 2, 2013: 2, 2015: 1}
mailing lists: {2012: 4, 2000: 1, 2011: 1, 2015: 2}
development teams: {2015: 2, 1990: 2, 2009: 3, 2012: 1}
api methods: {2016: 1, 2009: 6, 2013: 1}
life cycle: {1988: 2, 1990: 1, 2002: 1, 2007: 1, 2008: 1, 2012: 1, 2015: 1}
programming environment: {1988: 3, 1993: 1, 1999: 2, 2005: 2}
object model: {1988: 2, 1999: 3, 2003: 1, 2011: 2}
's architecture: {1988: 1, 1996: 2, 1999: 1, 2005: 1, 2011: 1, 2013: 1, 2015: 1}
abstract data types: {1988: 2, 1990: 1, 1992: 1, 1996: 1, 2000: 1, 2002: 1, 2008: 1}
aerospace industry: {1989: 1, 1994: 1, 2000: 1, 2002: 1, 2004: 1, 2005: 1, 2008: 1, 2011: 1}
design automation: {1989: 1, 1993: 1, 2000: 1, 2003: 1, 2004: 2, 2007: 2}
programmable control: {1990: 1, 1991: 1, 1997: 2, 1999: 1, 2000: 2, 2008: 1}
intellectual property: {1990: 1, 1997: 2, 1998: 1, 2000: 1, 2003: 1, 2005: 1, 2017: 1}
software reengineering: {1990: 2, 1997: 1, 1998: 1, 2004: 1, 2011: 1, 2012: 2}
jet propulsion laboratory: {1990: 2, 1991: 1, 2007: 2, 2010: 2, 2011: 1}
process models: {1990: 1, 1993: 1, 1995: 2, 2001: 1, 2009: 2, 2012: 1}
problem domain: {1990: 2, 1993: 1, 2000: 2, 2001: 1, 2013: 2}
power engineering and energy: {1990: 1, 1997: 1, 1999: 1, 2000: 1, 2002: 1, 2003: 1, 2004: 1, 2007: 1}
computer displays: {1991: 1, 1994: 1, 1997: 2, 1998: 1, 2001: 1, 2007: 1, 2009: 1}
development environments: {1991: 2, 2002: 1, 2010: 1, 2012: 1, 2013: 2, 2015: 1}
high degree: {1991: 1, 1996: 1, 2002: 1, 2004: 1, 2005: 1, 2007: 1, 2009: 1, 2013: 1}
software engineering techniques: {1992: 1, 2001: 1, 2003: 2, 2011: 2, 2013: 1, 2015: 1}
paper technology: {1992: 1, 1993: 1, 1994: 1, 1996: 1, 2000: 1, 2001: 1, 2004: 2}
test execution: {1992: 1, 1996: 1, 2011: 2, 2012: 1, 2013: 1, 2015: 2}
temporal properties: {1992: 1, 2008: 2, 2011: 2, 2013: 1, 2015: 1, 2016: 1}
great deal: {1992: 1, 1994: 1, 1998: 2, 2008: 1, 2013: 1, 2015: 2}
two approaches: {1993: 1, 2001: 1, 2004: 1, 2011: 2, 2015: 2, 2017: 1}
logistic regression: {1993: 1, 2002: 1, 2008: 2, 2010: 2, 2012: 2}
new model: {1993: 1, 1996: 1, 2004: 1, 2010: 3, 2012: 1, 2013: 1}
bug fixes: {1994: 1, 2011: 4, 2012: 2, 2017: 1}
engineering profession: {1994: 2, 2003: 1, 2007: 3, 2011: 1, 2016: 1}
analysis tools: {1994: 3, 1999: 1, 2000: 2, 2007: 1, 2017: 1}
different languages: {1994: 1, 2003: 1, 2004: 1, 2007: 1, 2009: 1, 2010: 1, 2011: 2}
design problem: {1994: 1, 2002: 2, 2011: 1, 2016: 4}
concept analysis: {1994: 1, 1997: 1, 1999: 1, 2004: 3, 2007: 2}
initial evaluation: {1995: 1, 1998: 1, 2001: 1, 2011: 3, 2012: 1, 2015: 1}
development effort: {1995: 1, 2000: 2, 2005: 1, 2010: 3, 2012: 1}
legacy code: {1995: 2, 1999: 2, 2001: 1, 2007: 1, 2011: 1, 2012: 1}
incremental approach: {1996: 1, 2000: 4, 2004: 1, 2011: 2}
evaluation results: {1996: 2, 2002: 2, 2012: 1, 2015: 2, 2016: 1}
software development organizations: {1996: 1, 2001: 1, 2003: 1, 2010: 1, 2012: 4}
proposed model: {1996: 1, 1998: 3, 2000: 2, 2011: 1, 2013: 1}
conceptual models: {1996: 2, 2001: 2, 2002: 4}
web and internet services: {1997: 2, 1999: 1, 2002: 1, 2003: 1, 2004: 2, 2008: 1}
software inspection: {1997: 2, 1999: 1, 2000: 2, 2001: 1, 2004: 2}
memory management: {1997: 1, 2000: 1, 2004: 3, 2010: 2, 2011: 1}
random testing: {1997: 1, 2007: 1, 2008: 1, 2011: 2, 2015: 2, 2016: 1}
collaborative tools: {1997: 1, 2001: 1, 2004: 1, 2005: 1, 2007: 1, 2008: 2, 2012: 1}
empirical research: {1997: 1, 2004: 2, 2009: 1, 2011: 2, 2016: 2}
product families: {1997: 1, 1998: 2, 2000: 3, 2002: 2}
development team: {1998: 1, 2005: 1, 2011: 1, 2012: 2, 2013: 1, 2015: 2}
system architecture: {1998: 2, 2012: 4, 2013: 2}
business process: {1998: 2, 2008: 3, 2012: 1, 2013: 1, 2015: 1}
workflow management software: {1998: 2, 2002: 4, 2008: 1, 2012: 1}
software inspections: {1998: 3, 2002: 3, 2008: 2}
speech recognition: {1998: 3, 2005: 1, 2012: 2, 2013: 1, 2015: 1}
digital simulation: {1998: 1, 2000: 2, 2004: 1, 2010: 1, 2012: 2, 2015: 1}
software life cycle: {1998: 1, 1999: 2, 2002: 1, 2004: 1, 2008: 2, 2012: 1}
modeling tools: {1999: 1, 2010: 2, 2011: 5}
new versions: {1999: 1, 2009: 2, 2010: 1, 2011: 1, 2012: 1, 2013: 1, 2015: 1}
finite-state verification: {1999: 2, 2001: 3, 2004: 1, 2008: 2}
concept location: {1999: 1, 2010: 1, 2012: 4, 2013: 2}
change impact analysis: {1999: 1, 2008: 2, 2010: 3, 2011: 2}
automata theory: {1999: 1, 2000: 1, 2002: 1, 2004: 3, 2011: 1, 2013: 1}
complex interactions: {2000: 3, 2004: 3, 2010: 1, 2012: 1}
collaboration diagrams: {2000: 4, 2002: 4}
many cases: {2000: 1, 2007: 1, 2008: 2, 2009: 1, 2011: 1, 2012: 1, 2016: 1}
user centred design: {2000: 1, 2003: 2, 2007: 1, 2009: 1, 2011: 2, 2013: 1}
uml diagrams: {2000: 1, 2001: 4, 2004: 1, 2012: 1, 2017: 1}
significant portion: {2000: 1, 2007: 1, 2011: 1, 2013: 1, 2015: 1, 2016: 2, 2017: 1}
past decade: {2000: 1, 2001: 1, 2002: 2, 2011: 1, 2012: 1, 2013: 1, 2015: 1}
software failures: {2001: 1, 2003: 1, 2010: 2, 2013: 4}
past years: {2001: 1, 2004: 1, 2005: 2, 2013: 2, 2015: 2}
different perspectives: {2001: 2, 2003: 2, 2008: 2, 2012: 2}
component-based software engineering: {2001: 1, 2002: 2, 2003: 1, 2004: 2, 2005: 2}
constraint solving: {2002: 2, 2012: 2, 2013: 2, 2015: 1, 2017: 1}
large programs: {2002: 2, 2007: 1, 2009: 2, 2012: 2, 2015: 1}
ongoing work: {2002: 2, 2011: 1, 2012: 2, 2015: 3}
major challenge: {2002: 1, 2004: 1, 2011: 2, 2012: 1, 2015: 1, 2016: 2}
nonfunctional requirements: {2002: 1, 2004: 2, 2005: 1, 2013: 1, 2015: 2, 2016: 1}
java applications: {2002: 2, 2008: 1, 2012: 4, 2013: 1}
program structure: {2002: 1, 2008: 3, 2012: 1, 2013: 3}
oss projects: {2003: 1, 2011: 3, 2015: 2, 2016: 2}
model-driven approach: {2003: 3, 2004: 1, 2011: 1, 2012: 1, 2015: 2}
software development lifecycle: {2003: 2, 2008: 1, 2011: 2, 2012: 1, 2013: 2}
field failures: {2003: 1, 2007: 2, 2011: 2, 2012: 1, 2013: 2}
automobile industry: {2003: 2, 2004: 1, 2008: 3, 2010: 1, 2012: 1}
new directions: {2003: 1, 2010: 1, 2011: 1, 2013: 3, 2015: 2}
program synthesis: {2003: 2, 2013: 1, 2015: 1, 2016: 3, 2017: 1}
storage management: {2004: 2, 2010: 3, 2011: 1, 2013: 1, 2015: 1}
mutation operators: {2005: 3, 2008: 2, 2013: 2, 2016: 1}
software behavior: {2005: 1, 2008: 1, 2011: 1, 2012: 3, 2016: 1, 2017: 1}
qualitative data: {2005: 1, 2007: 2, 2012: 3, 2016: 2}
human aspects: {2005: 1, 2010: 1, 2011: 2, 2012: 1, 2013: 1, 2015: 2}
java programming language: {2005: 2, 2007: 2, 2011: 2, 2013: 2}
modeling language: {2005: 1, 2008: 1, 2010: 3, 2011: 1, 2012: 2}
proposed technique: {2007: 1, 2010: 1, 2012: 1, 2013: 3, 2015: 1, 2017: 1}
application program interface: {2007: 1, 2008: 1, 2010: 1, 2015: 1, 2016: 4}
developer productivity: {2007: 1, 2009: 1, 2010: 2, 2011: 3, 2017: 1}
wireless sensor networks: {2007: 1, 2011: 1, 2012: 3, 2013: 3}
load testing: {2007: 1, 2010: 1, 2013: 2, 2015: 4}
performance debugging: {2008: 2, 2011: 1, 2012: 5}
client programs: {2008: 4, 2009: 1, 2012: 3}
java pathfinder: {2008: 6, 2013: 2}
organizational metrics: {2008: 3, 2015: 5}
performance testing: {2008: 1, 2011: 2, 2012: 3, 2015: 2}
business analysts: {2008: 1, 2011: 4, 2015: 1, 2016: 2}
markov processes: {2009: 2, 2010: 2, 2011: 1, 2013: 1, 2017: 2}
log files: {2009: 1, 2010: 3, 2013: 3, 2016: 1}
malicious code: {2009: 3, 2010: 3, 2012: 2}
performance bugs: {2009: 2, 2012: 1, 2013: 3, 2015: 1, 2017: 1}
eclipse ide: {2009: 2, 2012: 4, 2013: 2}
log analysis: {2010: 3, 2013: 2, 2015: 2, 2016: 1}
multiprocessing systems: {2010: 3, 2011: 2, 2012: 2, 2013: 1}
research challenges: {2010: 2, 2011: 2, 2012: 1, 2013: 2, 2015: 1}
recommender system: {2010: 1, 2011: 3, 2013: 1, 2017: 3}
load modeling: {2010: 1, 2012: 2, 2015: 3, 2016: 1, 2017: 1}
research practice: {2010: 2, 2011: 1, 2013: 4, 2015: 1}
combinatorial test design: {2010: 2, 2012: 2, 2013: 2, 2017: 2}
logging code: {2012: 1, 2017: 7}
interaction data: {2012: 2, 2015: 6}
security patterns: {2012: 4, 2013: 4}
api documents: {2012: 3, 2016: 3, 2017: 2}
coordination requirements: {2012: 8}
code review: {2013: 4, 2015: 1, 2016: 1, 2017: 2}
social sustainability: {2015: 8}
design information: {1989: 1, 1993: 5, 1995: 1}
educational products: {1992: 1, 2000: 1, 2001: 1, 2002: 1, 2005: 2, 2007: 1}
useful information: {1995: 1, 2002: 1, 2011: 1, 2013: 1, 2015: 2, 2016: 1}
network operating systems: {1996: 1, 1994: 1, 1999: 2, 2005: 2, 2007: 1}
experimental study: {1997: 1, 1994: 1, 2004: 2, 2011: 1, 2012: 1, 2013: 1}
component developer: {2003: 2, 1998: 1, 1999: 1, 2001: 3}
logic design: {2007: 1, 1991: 1, 2000: 2, 2001: 1, 2003: 1, 2005: 1}
novel algorithm: {2007: 2, 2000: 1, 2005: 1, 2009: 1, 2012: 1, 2013: 1}
sensitivity analysis: {2017: 2, 2004: 1, 2010: 2, 2013: 2}
binary code: {2017: 6, 2005: 1}
requirement engineering: {1988: 2, 1997: 2, 2012: 2, 2013: 1}
software environments: {1988: 3, 1991: 2, 1994: 2}
two techniques: {1988: 1, 2002: 1, 2003: 1, 2007: 1, 2011: 3}
program evolution: {1988: 1, 1999: 1, 2007: 1, 2008: 1, 2012: 3}
communication system software: {1988: 1, 1998: 1, 2001: 1, 2002: 1, 2003: 1, 2005: 1, 2007: 1}
graphical representation: {1988: 2, 2003: 2, 2011: 3}
software designers: {1988: 2, 2000: 1, 2005: 2, 2011: 2}
disaster management: {1988: 1, 1999: 1, 2000: 1, 2004: 1, 2007: 1, 2008: 1, 2015: 1}
data flow computing: {1988: 1, 1990: 1, 1991: 1, 1996: 2, 1998: 1, 1999: 1}
information processing: {1989: 1, 1994: 1, 1997: 1, 1998: 1, 2001: 1, 2003: 2}
information hiding: {1989: 1, 1993: 1, 2007: 2, 2011: 2, 2015: 1}
many ways: {1989: 1, 1995: 1, 2008: 1, 2011: 2, 2013: 1, 2015: 1}
process modeling: {1989: 1, 1993: 2, 1994: 1, 1999: 1, 2002: 2}
software specifications: {1989: 1, 1999: 2, 2000: 1, 2002: 1, 2003: 2}
empirical investigation: {1989: 1, 1991: 1, 1993: 1, 2000: 2, 2007: 1, 2016: 1}
design development: {1989: 1, 1994: 1, 1999: 1, 2011: 1, 2013: 3}
real time: {1990: 2, 1994: 2, 1997: 1, 2000: 1, 2016: 1}
rewriting systems: {1990: 1, 1993: 1, 1996: 1, 2001: 2, 2010: 1, 2011: 1}
content management: {1990: 1, 2001: 1, 2007: 1, 2008: 1, 2012: 1, 2013: 1, 2017: 1}
organizational aspects: {1990: 2, 2000: 1, 2003: 3, 2004: 1}
evolutionary development: {1990: 2, 2000: 1, 2015: 4}
manufacturing processes: {1990: 1, 1991: 2, 1997: 1, 2003: 1, 2005: 1, 2009: 1}
communication industry: {1990: 1, 1998: 1, 2000: 1, 2003: 1, 2008: 3}
research centers: {1990: 6, 2010: 1}
various types: {1991: 1, 1993: 1, 1998: 1, 1999: 1, 2008: 1, 2010: 1, 2015: 1}
domain models: {1991: 1, 1996: 2, 2002: 2, 2011: 1, 2012: 1}
's functionality: {1991: 1, 1996: 1, 1999: 1, 2001: 3, 2005: 1}
software construction: {1991: 1, 2001: 4, 2007: 2}
software validation: {1991: 1, 1993: 1, 2000: 1, 2002: 2, 2005: 1, 2011: 1}
software development maintenance: {1991: 2, 1999: 1, 2004: 1, 2012: 2, 2015: 1}
strengths weaknesses: {1991: 1, 1992: 1, 2000: 1, 2002: 1, 2007: 1, 2012: 1, 2013: 1}
20 %: {1992: 2, 2001: 1, 2008: 1, 2011: 2, 2016: 1}
test oracles: {1992: 2, 1993: 1, 2011: 1, 2012: 1, 2016: 2}
two versions: {1992: 1, 1999: 1, 2005: 1, 2007: 1, 2008: 2, 2016: 1}
design optimization: {1992: 1, 1996: 1, 1998: 1, 2000: 1, 2002: 1, 2004: 1, 2005: 1}
directed graphs: {1993: 1, 2001: 1, 2003: 2, 2008: 1, 2011: 2}
implicit invocation: {1993: 5, 2001: 2}
standards organizations: {1993: 1, 1996: 1, 1998: 1, 2000: 2, 2007: 1, 2008: 1}
existing methods: {1994: 1, 1996: 2, 2001: 1, 2012: 2, 2016: 1}
visual programming: {1994: 1, 1997: 1, 1998: 2, 2000: 1, 2007: 1, 2009: 1}
's perspective: {1994: 1, 1995: 2, 2005: 1, 2013: 3}
access protocols: {1994: 1, 2001: 1, 2002: 2, 2005: 1, 2007: 1, 2009: 1}
one hand: {1994: 1, 2001: 1, 2002: 1, 2009: 1, 2010: 1, 2011: 1, 2013: 1}
quality requirements: {1995: 1, 2002: 2, 2008: 4}
formal model: {1995: 4, 2007: 1, 2017: 2}
alternative approach: {1995: 1, 1996: 1, 2001: 2, 2012: 1, 2015: 2}
's ability: {1996: 1, 1999: 1, 2000: 1, 2010: 1, 2011: 1, 2013: 1, 2016: 1}
integration testing: {1996: 5, 2015: 1, 2017: 1}
safety properties: {1996: 3, 1998: 2, 2001: 1, 2004: 1}
architectural models: {1996: 2, 1998: 1, 1999: 2, 2002: 2}
effort estimation: {1996: 1, 1999: 1, 2000: 1, 2005: 3, 2013: 1}
mobile code: {1997: 1, 1998: 2, 1999: 2, 2000: 2}
iec standards: {1997: 1, 2000: 2, 2002: 1, 2003: 1, 2007: 1, 2008: 1}
system requirements: {1998: 2, 1999: 4, 2003: 1}
system implementation: {1998: 2, 1999: 1, 2000: 2, 2004: 1, 2007: 1}
running system: {1998: 1, 2004: 1, 2009: 2, 2012: 2, 2013: 1}
software connectors: {1998: 2, 1999: 3, 2000: 2}
legacy system: {1998: 1, 2001: 2, 2002: 2, 2004: 1, 2010: 1}
upper bound: {1999: 1, 2001: 1, 2007: 2, 2011: 1, 2012: 1, 2013: 1}
software change: {1999: 1, 2011: 2, 2012: 1, 2013: 3}
symbolic analysis: {1999: 2, 2013: 4, 2016: 1}
fault tolerant systems: {1999: 1, 2000: 1, 2003: 1, 2004: 1, 2010: 2, 2015: 1}
significant amount: {1999: 1, 2009: 1, 2011: 1, 2012: 2, 2013: 2}
software producers: {1999: 5, 2011: 2}
software deployment: {1999: 3, 2004: 2, 2013: 1, 2015: 1}
financial data processing: {1999: 2, 2000: 1, 2002: 1, 2005: 1, 2013: 1, 2015: 1}
multiple versions: {1999: 3, 2011: 1, 2012: 1, 2013: 1, 2015: 1}
widespread use: {1999: 2, 2001: 2, 2003: 1, 2012: 1, 2013: 1}
test coverage: {1999: 1, 2005: 1, 2007: 1, 2011: 1, 2012: 1, 2015: 2}
integrated software: {1999: 1, 2001: 2, 2003: 1, 2005: 1, 2010: 1, 2013: 1}
compile time: {1999: 1, 2011: 2, 2013: 2, 2015: 2}
general approach: {1999: 1, 2003: 2, 2004: 1, 2009: 1, 2010: 1, 2011: 1}
character generation: {1999: 1, 2003: 3, 2005: 1, 2008: 1, 2009: 1}
open university: {1999: 1, 2000: 2, 2015: 4}
programmable logic arrays: {1999: 1, 2000: 1, 2004: 1, 2007: 1, 2012: 1, 2015: 2}
traditional software development: {2000: 2, 2002: 1, 2003: 1, 2012: 1, 2013: 1, 2015: 1}
software application: {2000: 1, 2004: 2, 2005: 1, 2009: 3}
broad range: {2000: 2, 2004: 1, 2011: 1, 2012: 1, 2015: 1, 2016: 1}
costs benefits: {2000: 1, 2001: 2, 2002: 2, 2004: 1, 2010: 1}
component interactions: {2000: 4, 2002: 1, 2007: 2}
team projects: {2000: 2, 2007: 3, 2015: 2}
representational state transfer: {2000: 3, 2004: 2, 2010: 2}
computational linguistics: {2000: 1, 2011: 2, 2012: 1, 2013: 1, 2015: 1, 2017: 1}
organizational structures: {2000: 2, 2004: 1, 2012: 1, 2013: 3}
resource allocation: {2000: 1, 2002: 1, 2003: 1, 2004: 2, 2008: 1, 2010: 1}
team collaboration: {2000: 1, 2010: 5, 2011: 1}
uml model: {2001: 3, 2004: 2, 2011: 1, 2015: 1}
wireless networks: {2001: 3, 2002: 3, 2008: 1}
software practice: {2001: 2, 2003: 1, 2011: 2, 2016: 2}
file servers: {2001: 1, 2002: 1, 2003: 1, 2007: 3, 2011: 1}
detection algorithms: {2001: 1, 2008: 1, 2009: 4, 2013: 1}
component architectures: {2001: 1, 2003: 2, 2004: 1, 2009: 1, 2012: 1, 2013: 1}
large set: {2001: 1, 2004: 1, 2009: 1, 2011: 1, 2015: 1, 2016: 1, 2017: 1}
evolving software: {2001: 1, 2007: 1, 2008: 1, 2011: 4}
exploratory study: {2001: 2, 2011: 4, 2015: 1}
regression tests: {2002: 2, 2005: 1, 2007: 1, 2015: 2, 2017: 1}
software model: {2002: 1, 2004: 1, 2005: 1, 2011: 3, 2013: 1}
object-oriented program: {2002: 2, 2004: 1, 2005: 1, 2007: 1, 2009: 1, 2011: 1}
enterprise application integration: {2002: 1, 2004: 2, 2005: 2, 2010: 2}
business rules: {2002: 2, 2010: 3, 2013: 2}
aspect-oriented software development: {2002: 2, 2004: 2, 2005: 3}
context information: {2002: 1, 2010: 3, 2015: 3}
technical aspects: {2003: 1, 2007: 1, 2009: 1, 2012: 1, 2013: 1, 2015: 1, 2016: 1}
many factors: {2003: 1, 2004: 2, 2005: 1, 2012: 2, 2015: 1}
recent research: {2003: 1, 2007: 1, 2011: 2, 2013: 1, 2015: 1, 2016: 1}
comparative analysis: {2003: 2, 2004: 2, 2008: 2, 2016: 1}
information retrieval technique: {2003: 2, 2008: 2, 2011: 1, 2013: 1, 2017: 1}
phd research: {2004: 1, 2011: 1, 2012: 2, 2013: 1, 2015: 2}
java language: {2004: 3, 2007: 1, 2011: 2, 2013: 1}
c #: {2004: 1, 2005: 1, 2011: 1, 2013: 3, 2017: 1}
increasing complexity: {2004: 1, 2012: 1, 2013: 1, 2015: 3, 2016: 1}
evolutionary computation: {2004: 1, 2007: 1, 2010: 1, 2012: 1, 2013: 3}
maintenance costs: {2004: 1, 2009: 1, 2011: 1, 2013: 1, 2015: 2, 2016: 1}
historical data: {2004: 2, 2011: 1, 2013: 2, 2015: 2}
linear programming: {2004: 1, 2009: 1, 2012: 1, 2013: 3, 2015: 1}
program transformations: {2004: 2, 2009: 1, 2013: 2, 2017: 2}
greedy algorithms: {2005: 4, 2012: 1, 2017: 2}
sensitive data: {2005: 1, 2013: 1, 2015: 3, 2016: 2}
end-user programming: {2005: 1, 2008: 1, 2010: 1, 2011: 1, 2012: 1, 2016: 2}
fault localization techniques: {2005: 3, 2009: 2, 2017: 2}
system specification: {2005: 3, 2008: 2, 2010: 1, 2013: 1}
field study: {2005: 1, 2009: 1, 2012: 1, 2013: 1, 2015: 2, 2016: 1}
software services: {2005: 1, 2012: 3, 2013: 2, 2015: 1}
ontologies (artificial intelligence): {2005: 1, 2010: 1, 2012: 4, 2013: 1}
software-intensive system: {2005: 1, 2008: 2, 2010: 2, 2011: 2}
code duplication: {2007: 2, 2009: 1, 2010: 1, 2012: 2, 2017: 1}
faulty code: {2007: 1, 2010: 2, 2011: 2, 2013: 2}
branch coverage: {2007: 1, 2009: 2, 2013: 2, 2016: 1, 2017: 1}
version history: {2007: 1, 2008: 2, 2011: 1, 2012: 2, 2016: 1}
static analyses: {2008: 1, 2009: 3, 2011: 1, 2012: 1, 2015: 1}
code fragments: {2008: 1, 2011: 4, 2012: 1, 2013: 1}
user satisfaction: {2008: 3, 2012: 1, 2013: 2, 2016: 1}
social network analysis: {2009: 3, 2010: 2, 2011: 2}
bug fixing: {2009: 1, 2010: 1, 2012: 1, 2013: 3, 2017: 1}
need-to-translate constant strings: {2009: 7}
fault-detection capability: {2009: 2, 2012: 4, 2016: 1}
software engineering activities: {2009: 2, 2011: 5}
researchers practitioners: {2009: 1, 2010: 2, 2011: 2, 2015: 1, 2016: 1}
logic gates: {2010: 1, 2011: 1, 2012: 1, 2013: 1, 2015: 1, 2016: 2}
relevant information: {2010: 5, 2016: 2}
smt solvers: {2010: 2, 2011: 2, 2012: 1, 2017: 2}
combinatorial testing: {2010: 4, 2011: 1, 2016: 2}
load test: {2010: 3, 2013: 1, 2015: 3}
performance counters: {2010: 2, 2013: 5}
compilation errors: {2010: 2, 2012: 3, 2017: 2}
randomized algorithms: {2011: 7}
test oracle: {2011: 3, 2012: 2, 2015: 1, 2017: 1}
web servers: {2011: 3, 2012: 2, 2013: 1, 2017: 1}
numerical models: {2011: 3, 2013: 3, 2015: 1}
software repository mining: {2011: 4, 2012: 1, 2015: 2}
power aware computing: {2011: 1, 2012: 1, 2013: 2, 2015: 2, 2016: 1}
green products: {2011: 1, 2012: 2, 2013: 2, 2015: 1, 2016: 1}
bug prediction: {2011: 2, 2012: 2, 2013: 3}
special theme: {2011: 2, 2013: 4, 2015: 1}
api usage patterns: {2012: 5, 2016: 2}
stack traces: {2012: 2, 2015: 3, 2016: 2}
# x2014: {2012: 1, 2013: 6}
release engineering: {2012: 2, 2013: 2, 2015: 3}
test space: {2012: 4, 2013: 1, 2017: 2}
green computing: {2012: 3, 2013: 1, 2015: 2, 2016: 1}
behavioral differences: {2013: 3, 2017: 4}
green streams: {2013: 7}
industrial practitioners: {2013: 5, 2015: 2}
reactive programming: {2015: 4, 2016: 3}
http requests: {2016: 5, 2017: 2}
asset management: {1990: 1, 1994: 1, 2000: 1, 2002: 1, 2003: 1, 2005: 1}
internal structure: {1991: 2, 1996: 2, 2007: 1, 2012: 1}
computer aided manufacturing: {1992: 1, 1991: 2, 2000: 1, 2002: 1, 2005: 1}
centralized control: {1993: 2, 2000: 1, 2001: 1, 2005: 2}
software quality assurance: {1994: 1, 2010: 2, 2011: 1, 2015: 1, 2016: 1}
peer to peer computing: {1996: 2, 2004: 2, 2007: 1, 2011: 1}
multimedia systems: {1998: 1, 1996: 1, 1997: 2, 1999: 1, 2000: 1}
component frameworks: {2000: 4, 2003: 2}
component based development: {2000: 4, 2001: 1, 2002: 1}
large collection: {2001: 1, 1999: 1, 2012: 1, 2016: 3}
underlying principles: {2002: 2, 2003: 1, 2005: 1, 2015: 2}
software production: {2003: 2, 1993: 2, 1999: 2}
system software: {2011: 1, 1991: 1, 1994: 1, 2004: 2, 2008: 1}
configuration options: {2011: 3, 2012: 1, 2016: 1, 2017: 1}
high quality: {2015: 1, 2009: 1, 2011: 2, 2012: 2}
software licenses: {2017: 3, 2000: 2, 2015: 1}
spatial databases: {1988: 1, 1994: 1, 2000: 1, 2007: 1, 2008: 1, 2009: 1}
existing models: {1988: 1, 1989: 1, 2000: 2, 2004: 1, 2012: 1}
software process modeling: {1988: 1, 1993: 2, 1994: 1, 1998: 1, 2005: 1}
design documents: {1988: 2, 2012: 1, 2015: 3}
database management systems: {1988: 1, 1990: 1, 2004: 2, 2007: 1, 2012: 1}
transaction databases: {1988: 1, 1993: 1, 1998: 1, 2004: 1, 2005: 1, 2008: 1}
distributed control: {1988: 1, 1992: 1, 1994: 1, 1999: 2, 2004: 1}
power engineering computing: {1988: 1, 1992: 1, 1993: 1, 2002: 1, 2004: 1, 2015: 1}
fault trees: {1988: 1, 2000: 2, 2012: 1, 2016: 2}
real-time software: {1988: 3, 1990: 2, 2011: 1}
telecommunication systems: {1988: 2, 2003: 3, 2005: 1}
starting point: {1988: 1, 1999: 1, 2001: 1, 2002: 1, 2004: 1, 2017: 1}
computer graphics: {1988: 2, 1991: 1, 1994: 1, 2001: 1, 2005: 1}
static analysis tool: {1988: 3, 2004: 1, 2012: 1, 2017: 1}
power system reliability: {1988: 1, 1990: 1, 1997: 1, 2000: 1, 2004: 1, 2008: 1}
partitioning algorithms: {1988: 2, 1997: 1, 2012: 1, 2013: 1, 2015: 1}
brief overview: {1988: 1, 1989: 1, 1996: 1, 2000: 1, 2003: 1, 2004: 1}
formal language: {1988: 2, 1994: 2, 2001: 2}
semantic model: {1988: 2, 2000: 2, 2004: 2}
condition monitoring: {1988: 1, 1994: 1, 1996: 1, 2004: 1, 2005: 1, 2009: 1}
formal techniques: {1988: 1, 1998: 2, 2002: 1, 2013: 2}
materials testing: {1989: 1, 1992: 2, 1997: 2, 2000: 1}
appropriate technology: {1989: 1, 1997: 1, 1999: 1, 2000: 1, 2004: 1, 2005: 1}
software development environment: {1989: 1, 1994: 1, 1996: 2, 2003: 2}
software engineering principles: {1989: 1, 1994: 2, 2000: 1, 2005: 1, 2008: 1}
parallel development: {1989: 1, 1998: 4, 2000: 1}
lifting equipment: {1989: 1, 1990: 1, 1997: 2, 1999: 1, 2012: 1}
environmental factors: {1989: 1, 2011: 1, 2012: 3, 2013: 1}
rendering (computer graphics): {1989: 1, 1998: 1, 2001: 1, 2005: 1, 2007: 1, 2008: 1}
application generators: {1990: 2, 1994: 2, 2000: 1, 2001: 1}
algebraic specification: {1990: 2, 2004: 4}
basic idea: {1990: 1, 2003: 1, 2005: 1, 2008: 1, 2010: 1, 2012: 1}
forward engineering: {1990: 2, 1995: 1, 1997: 1, 2001: 2}
power generation: {1990: 1, 2000: 1, 2003: 2, 2004: 1, 2008: 1}
modular structure: {1990: 1, 2008: 1, 2011: 1, 2015: 3}
financial management: {1990: 1, 1997: 1, 2002: 1, 2005: 2, 2011: 1}
higher level: {1990: 1, 1995: 1, 1999: 1, 2003: 1, 2008: 1, 2013: 1}
software faults: {1990: 1, 1991: 2, 1992: 1, 2004: 1, 2015: 1}
feedback loop: {1990: 1, 1996: 1, 2005: 1, 2011: 2, 2016: 1}
formal description: {1990: 2, 2000: 2, 2004: 2}
current methods: {1990: 1, 2010: 1, 2011: 1, 2012: 2, 2015: 1}
software life-cycle: {1990: 1, 1999: 2, 2001: 2, 2004: 1}
quality metrics: {1990: 2, 1996: 4}
social sciences computing: {1991: 1, 2009: 1, 2011: 1, 2012: 1, 2015: 2}
monte carlo methods: {1991: 1, 2011: 1, 2013: 2, 2016: 1, 2017: 1}
total number: {1991: 1, 1992: 1, 2001: 1, 2007: 1, 2008: 1, 2013: 1}
formal specification language: {1991: 2, 1993: 2, 1994: 1, 2015: 1}
operational goals: {1991: 5, 1993: 1}
motion pictures: {1991: 1, 2001: 1, 2007: 3, 2015: 1}
comparative study: {1991: 1, 2001: 1, 2007: 2, 2016: 2}
significant differences: {1991: 1, 1995: 1, 2011: 1, 2013: 1, 2015: 2}
general framework: {1991: 1, 1998: 1, 2001: 1, 2009: 1, 2012: 1, 2016: 1}
software productivity: {1991: 1, 1995: 1, 2003: 1, 2010: 1, 2011: 2}
review process: {1992: 1, 2003: 3, 2011: 1, 2013: 1}
statistical techniques: {1992: 1, 2004: 1, 2005: 2, 2011: 2}
effective use: {1992: 1, 1998: 2, 1999: 1, 2011: 1, 2017: 1}
software engineering problems: {1992: 1, 1999: 1, 2004: 1, 2011: 2, 2015: 1}
intelligent systems: {1992: 1, 1993: 1, 2001: 1, 2005: 2, 2009: 1}
formal approach: {1992: 1, 1994: 1, 1999: 1, 2000: 1, 2004: 1, 2011: 1}
version control system: {1992: 1, 1999: 1, 2012: 2, 2015: 2}
functional testing: {1992: 1, 1996: 1, 1997: 1, 2010: 1, 2013: 2}
recent developments: {1992: 1, 1994: 1, 2010: 1, 2011: 1, 2013: 2}
recent advances: {1992: 1, 2010: 1, 2011: 1, 2012: 2, 2017: 1}
design for experiments: {1993: 1, 1997: 3, 1999: 1, 2005: 1}
communication standards: {1993: 1, 1994: 1, 2000: 1, 2001: 1, 2002: 2}
current measurement: {1993: 2, 1999: 1, 2008: 1, 2011: 1, 2012: 1}
inference engine: {1993: 2, 1999: 2, 2013: 2}
specification models: {1993: 2, 2013: 4}
domain experts: {1993: 1, 1995: 1, 2009: 1, 2010: 1, 2012: 2}
process evolution: {1993: 2, 1996: 2, 2012: 2}
interleaved codes: {1993: 1, 2000: 1, 2002: 2, 2007: 2}
state estimation: {1993: 1, 1999: 1, 2002: 1, 2005: 2, 2008: 1}
planning (artificial intelligence): {1993: 1, 1996: 1, 1999: 1, 2002: 1, 2011: 1, 2013: 1}
central role: {1993: 1, 1995: 1, 2003: 1, 2004: 1, 2013: 1, 2015: 1}
precise definition: {1993: 1, 1995: 1, 2002: 1, 2004: 1, 2011: 1, 2013: 1}
project planning: {1993: 1, 1996: 2, 1998: 2, 1999: 1}
maximum likelihood estimation: {1994: 3, 1998: 2, 2011: 1}
systems design: {1994: 1, 1996: 1, 1999: 2, 2001: 1, 2013: 1}
current techniques: {1994: 1, 1998: 1, 2010: 1, 2012: 1, 2016: 1, 2017: 1}
different methods: {1994: 1, 1998: 1, 2001: 1, 2009: 1, 2013: 2}
testing tools: {1994: 1, 1996: 1, 2000: 1, 2010: 2, 2011: 1}
process description: {1994: 3, 1995: 2, 2005: 1}
formal logic: {1994: 1, 2001: 1, 2008: 1, 2011: 2, 2017: 1}
architectural description: {1994: 2, 2001: 1, 2002: 1, 2010: 2}
one aspect: {1994: 1, 1998: 1, 2004: 1, 2005: 1, 2008: 1, 2011: 1}
software development processes: {1994: 1, 1999: 1, 2000: 1, 2005: 1, 2010: 1, 2015: 1}
code understanding: {1994: 1, 2000: 1, 2010: 2, 2015: 2}
execution environment: {1994: 2, 2001: 1, 2004: 1, 2013: 1, 2015: 1}
switching systems: {1994: 2, 1997: 3, 2003: 1}
certain aspects: {1995: 1, 2000: 2, 2002: 1, 2003: 1, 2010: 1}
traditional approaches: {1995: 1, 1996: 1, 2004: 1, 2008: 1, 2012: 1, 2015: 1}
computer systems: {1995: 1, 2003: 2, 2015: 2, 2016: 1}
research directions: {1995: 1, 2000: 1, 2005: 2, 2011: 1, 2015: 1}
new techniques: {1995: 1, 2009: 1, 2013: 1, 2015: 1, 2017: 2}
's design: {1996: 1, 2003: 1, 2011: 1, 2012: 3}
optimizing compilers: {1996: 4, 2005: 1, 2007: 1}
telecommunication services: {1996: 1, 1997: 1, 2005: 4}
programming tools: {1996: 2, 1999: 2, 2008: 1, 2010: 1}
reliability performance: {1996: 1, 2004: 1, 2009: 1, 2011: 1, 2012: 1, 2013: 1}
many approaches: {1996: 1, 1999: 1, 2011: 1, 2012: 1, 2013: 2}
software quality management: {1996: 2, 2003: 4}
design pattern: {1996: 1, 2000: 1, 2003: 2, 2007: 1, 2011: 1}
fuzzy logic: {1996: 3, 2002: 3}
large projects: {1996: 1, 2004: 1, 2005: 1, 2011: 2, 2016: 1}
basic concepts: {1996: 1, 2000: 1, 2002: 1, 2003: 2, 2008: 1}
new requirements: {1996: 1, 1999: 1, 2000: 1, 2001: 1, 2007: 1, 2009: 1}
uniform resource locators: {1997: 1, 2001: 1, 2016: 2, 2017: 2}
organizational structure: {1997: 1, 2008: 1, 2009: 1, 2010: 1, 2012: 1, 2017: 1}
object technology: {1997: 1, 1999: 4, 2001: 1}
iterative process: {1997: 1, 1999: 1, 2004: 1, 2009: 2, 2011: 1}
market research: {1997: 1, 2013: 2, 2015: 2, 2016: 1}
national security: {1997: 1, 2003: 2, 2005: 3}
mobile phone: {1998: 1, 2016: 5}
consistency management: {1998: 2, 2003: 1, 2011: 3}
cross-cutting concerns: {1998: 1, 2007: 1, 2008: 1, 2011: 3}
requirements specifications: {1998: 2, 2004: 1, 2010: 1, 2011: 1, 2012: 1}
machine learning algorithms: {1998: 2, 2005: 1, 2015: 1, 2016: 1, 2017: 1}
design components: {1998: 2, 1999: 2, 2000: 2}
research questions: {1998: 1, 2001: 1, 2011: 1, 2013: 2, 2017: 1}
system evolution: {1998: 1, 2001: 1, 2004: 2, 2011: 1, 2013: 1}
data integrity: {1998: 1, 2002: 1, 2003: 1, 2007: 1, 2017: 2}
tool suite: {1998: 1, 2007: 1, 2010: 2, 2013: 2}
file organisation: {1998: 1, 1999: 1, 2002: 1, 2008: 1, 2010: 2}
new opportunities: {1998: 1, 2000: 1, 2011: 2, 2015: 2}
organizational boundaries: {1998: 1, 2000: 2, 2010: 3}
distributed application development: {1999: 2, 2004: 1, 2005: 3}
significant improvement: {1999: 1, 2000: 1, 2007: 1, 2010: 1, 2012: 1, 2016: 1}
one approach: {1999: 4, 2011: 1, 2017: 1}
architectural description language: {1999: 1, 2002: 2, 2005: 1, 2011: 2}
critical infrastructures: {1999: 1, 2001: 2, 2010: 1, 2011: 1, 2015: 1}
c program: {1999: 2, 2004: 2, 2015: 2}
object-oriented frameworks: {1999: 2, 2001: 3, 2002: 1}
automatic test case generation: {1999: 1, 2010: 1, 2012: 2, 2016: 2}
promising approach: {1999: 1, 2008: 1, 2010: 1, 2011: 1, 2013: 1, 2017: 1}
formal framework: {1999: 1, 2000: 2, 2007: 2, 2016: 1}
modeling techniques: {1999: 1, 2012: 1, 2013: 2, 2015: 2}
better results: {1999: 1, 2000: 1, 2008: 1, 2009: 1, 2015: 1, 2016: 1}
ad hoc networks: {1999: 1, 2001: 2, 2002: 3}
rapid development: {1999: 2, 2000: 1, 2002: 1, 2004: 1, 2009: 1}
finite state automata: {1999: 1, 2001: 2, 2002: 1, 2008: 2}
new system: {1999: 1, 2000: 2, 2007: 1, 2016: 1, 2017: 1}
code reuse: {1999: 1, 2011: 2, 2012: 2, 2015: 1}
c++ code: {1999: 2, 2000: 2, 2011: 1, 2012: 1}
database languages: {1999: 1, 2005: 1, 2011: 1, 2013: 1, 2015: 1, 2016: 1}
stock markets: {1999: 1, 2000: 1, 2002: 1, 2004: 1, 2005: 2}
one way: {1999: 1, 2000: 1, 2002: 1, 2003: 1, 2004: 1, 2013: 1}
web browsers: {1999: 2, 2013: 4}
source code changes: {1999: 1, 2010: 1, 2011: 1, 2013: 2, 2015: 1}
many people: {1999: 2, 2000: 1, 2010: 1, 2015: 2}
less time: {1999: 2, 2010: 1, 2015: 1, 2017: 2}
new economy: {2000: 4, 2002: 2}
human resources: {2000: 2, 2007: 1, 2012: 1, 2013: 2}
testing techniques: {2000: 1, 2008: 1, 2010: 1, 2012: 2, 2016: 1}
many techniques: {2000: 1, 2008: 2, 2015: 2, 2017: 1}
class diagram: {2000: 2, 2001: 1, 2013: 2, 2017: 1}
transport protocols: {2000: 2, 2001: 1, 2003: 1, 2004: 1, 2008: 1}
abstract model: {2000: 2, 2001: 2, 2008: 1, 2013: 1}
root causes: {2000: 1, 2002: 2, 2010: 1, 2013: 1, 2016: 1}
program properties: {2000: 1, 2003: 1, 2004: 4}
formal method: {2000: 3, 2005: 1, 2007: 1, 2010: 1}
execution time: {2000: 1, 2011: 1, 2016: 2, 2017: 2}
web browser: {2000: 1, 2010: 2, 2017: 3}
software engineering practices: {2000: 1, 2002: 1, 2003: 1, 2004: 2, 2005: 1}
new test cases: {2000: 1, 2007: 2, 2011: 2, 2013: 1}
common practice: {2000: 1, 2004: 1, 2012: 1, 2013: 2, 2017: 1}
industrial software system: {2000: 1, 2008: 1, 2011: 2, 2012: 2}
enterprise resource planning: {2000: 1, 2002: 2, 2004: 3}
structural information: {2001: 3, 2012: 1, 2015: 2}
code analysis: {2001: 1, 2009: 2, 2011: 2, 2015: 1}
architectural design decisions: {2001: 2, 2011: 2, 2013: 2}
software models: {2001: 1, 2005: 1, 2011: 3, 2013: 1}
software development community: {2001: 2, 2002: 2, 2011: 2}
static checker: {2001: 1, 2005: 1, 2008: 1, 2011: 2, 2012: 1}
framework evolution: {2001: 2, 2008: 2, 2012: 2}
little research: {2002: 1, 2003: 1, 2005: 1, 2013: 1, 2015: 2}
object-oriented language: {2002: 2, 2003: 1, 2009: 3}
real-world applications: {2002: 1, 2009: 1, 2012: 2, 2016: 1, 2017: 1}
code base: {2002: 2, 2003: 1, 2012: 2, 2016: 1}
combinatorial mathematics: {2002: 1, 2010: 2, 2011: 1, 2012: 2}
social factors: {2002: 2, 2005: 1, 2011: 3}
many challenges: {2002: 1, 2003: 1, 2005: 1, 2010: 1, 2012: 1, 2015: 1}
corba component model: {2002: 4, 2003: 2}
integrated approach: {2002: 2, 2003: 1, 2010: 1, 2012: 2}
software configuration management: {2002: 2, 2004: 1, 2005: 1, 2007: 1, 2010: 1}
visual language: {2002: 1, 2004: 2, 2007: 1, 2010: 2}
empirical validation: {2002: 2, 2003: 1, 2010: 1, 2011: 1, 2012: 1}
main challenge: {2003: 1, 2005: 1, 2010: 2, 2013: 1, 2016: 1}
target application: {2003: 2, 2004: 2, 2016: 2}
virtual machining: {2003: 1, 2004: 1, 2008: 1, 2011: 1, 2012: 1, 2015: 1}
java software: {2003: 1, 2008: 1, 2012: 2, 2013: 2}
software engineering curriculum: {2003: 1, 2008: 3, 2010: 2}
information retrieval techniques: {2003: 1, 2013: 2, 2016: 1, 2017: 2}
important goal: {2003: 1, 2011: 3, 2013: 1, 2015: 1}
service-oriented architectures: {2004: 2, 2010: 2, 2015: 2}
next generation: {2004: 2, 2007: 1, 2010: 1, 2012: 1, 2016: 1}
much work: {2004: 1, 2010: 1, 2012: 1, 2013: 2, 2015: 1}
type system: {2004: 1, 2005: 2, 2011: 3}
methods tools: {2004: 1, 2010: 3, 2015: 2}
error-prone task: {2004: 1, 2007: 1, 2012: 1, 2013: 1, 2017: 2}
application programming interface: {2004: 1, 2005: 1, 2008: 1, 2009: 1, 2011: 1, 2017: 1}
dynamic reconfiguration: {2004: 2, 2011: 2, 2013: 1, 2015: 1}
software development practices: {2004: 1, 2010: 2, 2013: 1, 2017: 2}
welcome message: {2005: 2, 2007: 2, 2009: 1, 2012: 1}
user involvement: {2005: 1, 2011: 2, 2013: 3}
existing code: {2005: 1, 2009: 1, 2011: 2, 2013: 1, 2015: 1}
application programming interfaces: {2005: 1, 2012: 3, 2015: 1, 2017: 1}
real faults: {2005: 2, 2009: 1, 2017: 3}
test prioritization: {2005: 1, 2016: 5}
specification patterns: {2005: 1, 2008: 1, 2012: 4}
model driven development: {2005: 1, 2007: 1, 2008: 1, 2012: 2, 2015: 1}
modeling languages: {2005: 1, 2010: 1, 2011: 1, 2012: 2, 2013: 1}
trees (mathematics): {2007: 2, 2008: 1, 2012: 2, 2017: 1}
state space explosion problem: {2007: 1, 2011: 1, 2012: 2, 2013: 2}
5 %: {2007: 1, 2008: 1, 2009: 1, 2016: 3}
runtime overhead: {2007: 1, 2009: 1, 2012: 3, 2013: 1}
graphical user: {2007: 1, 2008: 1, 2009: 2, 2013: 2}
concolic testing: {2007: 2, 2012: 1, 2015: 2, 2016: 1}
systematic approach: {2007: 1, 2010: 1, 2011: 3, 2015: 1}
high performance computing: {2007: 1, 2015: 5}
security analysis: {2007: 2, 2008: 3, 2013: 1}
aspect-oriented modeling: {2008: 2, 2009: 2, 2011: 2}
code metrics: {2008: 1, 2010: 2, 2013: 3}
data races: {2008: 2, 2011: 3, 2016: 1}
programming tasks: {2008: 1, 2012: 1, 2015: 2, 2017: 2}
new algorithms: {2008: 1, 2013: 5}
development processes: {2008: 2, 2012: 3, 2017: 1}
execution information: {2008: 3, 2009: 1, 2010: 2}
60 %: {2008: 1, 2012: 2, 2013: 2, 2017: 1}
service-oriented computing: {2008: 1, 2010: 2, 2013: 2, 2015: 1}
software engineering teaching: {2008: 2, 2010: 1, 2012: 2, 2015: 1}
open source community: {2008: 3, 2009: 1, 2015: 2}
project team: {2008: 1, 2012: 1, 2013: 4}
invasive software: {2008: 1, 2010: 1, 2015: 2, 2017: 2}
developer communication: {2009: 2, 2013: 3, 2017: 1}
runtime system: {2009: 1, 2011: 2, 2012: 2, 2016: 1}
security vulnerabilities: {2009: 1, 2012: 2, 2013: 1, 2015: 1, 2017: 1}
automated test generation: {2009: 2, 2011: 1, 2012: 1, 2013: 1, 2016: 1}
software development teams: {2009: 1, 2011: 2, 2015: 2, 2016: 1}
feature-oriented software development: {2009: 3, 2011: 3}
' performance: {2010: 1, 2012: 1, 2015: 3, 2016: 1}
message systems: {2010: 1, 2011: 1, 2012: 1, 2015: 2, 2016: 1}
preliminary study: {2010: 1, 2011: 2, 2013: 1, 2015: 2}
participatory design: {2010: 4, 2015: 2}
generic repair: {2010: 6}
code change: {2010: 1, 2011: 1, 2013: 2, 2016: 1, 2017: 1}
java classes: {2010: 2, 2013: 2, 2016: 2}
automatic test software: {2010: 1, 2011: 2, 2013: 2, 2015: 1}
radiation detectors: {2010: 2, 2013: 2, 2015: 2}
variability modeling: {2010: 3, 2011: 1, 2012: 1, 2016: 1}
software teams: {2010: 1, 2012: 1, 2013: 2, 2016: 1, 2017: 1}
performance analysts: {2010: 3, 2012: 1, 2013: 2}
experiences tools: {2010: 1, 2011: 1, 2013: 2, 2015: 2}
existing metrics: {2010: 1, 2011: 1, 2013: 2, 2015: 2}
product architecture: {2010: 1, 2012: 5}
open-source systems: {2010: 1, 2012: 1, 2013: 3, 2015: 1}
immutable classes: {2011: 5, 2017: 1}
search space: {2011: 1, 2016: 5}
tool chain: {2011: 6}
atmospheric measurements: {2011: 1, 2012: 2, 2013: 1, 2015: 2}
recent studies: {2011: 2, 2015: 1, 2016: 1, 2017: 2}
data handling: {2011: 1, 2013: 2, 2015: 1, 2016: 1, 2017: 1}
various problems: {2011: 6}
scientific computing: {2011: 3, 2013: 1, 2015: 2}
social media: {2011: 2, 2012: 2, 2015: 2}
novel framework: {2011: 1, 2012: 1, 2015: 1, 2016: 2, 2017: 1}
virtual machine: {2011: 2, 2013: 2, 2016: 2}
software vendors: {2011: 2, 2012: 1, 2013: 2, 2015: 1}
social networking: {2011: 1, 2012: 3, 2015: 2}
impact project: {2011: 6}
refactoring tools: {2011: 1, 2012: 3, 2013: 1, 2016: 1}
performance problems: {2012: 3, 2013: 1, 2015: 2}
code evolution: {2012: 2, 2013: 2, 2015: 1, 2017: 1}
external resources: {2012: 5, 2015: 1}
euses corpus: {2012: 2, 2013: 2, 2016: 2}
software practitioners: {2012: 1, 2013: 4, 2015: 1}
hidden markov models: {2012: 4, 2015: 1, 2016: 1}
probabilistic model checking: {2012: 1, 2013: 3, 2016: 2}
runtime monitoring: {2012: 4, 2015: 1, 2017: 1}
software design studio: {2013: 1, 2015: 5}
assurance cases: {2013: 6}
demo video: {2013: 3, 2015: 3}
attack surface: {2015: 6}
program repair: {2015: 3, 2016: 2, 2017: 1}
technical briefing: {2015: 6}
executable code: {1989: 1, 1990: 1, 1993: 2, 2010: 1}
quantitative data: {1992: 1, 2007: 1, 2012: 3}
effective approach: {1992: 1, 2002: 2, 2016: 1, 2017: 1}
communication patterns: {1996: 1, 1988: 2, 2002: 2}
software reviews: {1997: 1, 1998: 1, 2002: 1, 2015: 2}
electric breakdown: {1999: 3, 1993: 1, 2004: 1}
communication channels: {1999: 2, 2012: 1, 2013: 1, 2016: 1}
large scale software development: {1999: 1, 1996: 2, 1998: 2}
coordination needs: {1999: 1, 2012: 4}
biomedical imaging: {2000: 1, 2003: 1, 2008: 2, 2017: 1}
requirements engineering process: {2002: 1, 1998: 1, 2004: 1, 2007: 2}
test specification: {2003: 1, 2016: 4}
uml 2.0: {2004: 3, 2003: 2}
practical experience: {2008: 1, 2000: 1, 2003: 1, 2012: 1, 2013: 1}
several ways: {2008: 1, 1992: 1, 1998: 1, 2004: 1, 2005: 1}
difficult problem: {2008: 1, 2007: 1, 2012: 1, 2016: 1, 2017: 1}
telecommunication domain: {2010: 2, 1999: 2, 2004: 1}
code quality: {2015: 3, 1990: 2}
small set: {2015: 1, 2007: 1, 2008: 2, 2012: 1}
requirement specification: {1988: 2, 1990: 1, 2000: 2}
generic model: {1988: 2, 1989: 2, 1996: 1}
object-oriented model: {1988: 3, 2003: 1, 2004: 1}
interacting processes: {1988: 1, 1996: 2, 2002: 2}
complex process: {1988: 1, 1989: 1, 2000: 1, 2011: 2}
new paradigm: {1988: 1, 1999: 1, 2005: 1, 2015: 1, 2016: 1}
computer interfaces: {1988: 1, 1997: 1, 1999: 1, 2000: 1, 2007: 1}
program documentation: {1988: 1, 1990: 3, 2004: 1}
automated support: {1988: 2, 2000: 1, 2003: 1, 2004: 1}
real-time embedded systems: {1988: 2, 2004: 3}
software environment: {1988: 2, 1991: 1, 1998: 1, 1999: 1}
abstract syntax: {1988: 2, 1991: 2, 1997: 1}
abstract specifications: {1988: 3, 2002: 2}
executable specifications: {1988: 1, 1990: 2, 1997: 1, 2011: 1}
partial order: {1989: 3, 2005: 1, 2008: 1}
software process model: {1989: 1, 1990: 2, 1998: 2}
stepwise refinement: {1989: 2, 1991: 2, 1997: 1}
control system synthesis: {1989: 1, 1992: 2, 2003: 1, 2008: 1}
communication structures: {1989: 1, 2009: 2, 2013: 2}
various kinds: {1989: 2, 1996: 1, 2009: 1, 2010: 1}
different views: {1989: 1, 2001: 1, 2012: 3}
various components: {1989: 1, 1990: 1, 2001: 1, 2002: 1, 2011: 1}
supporting environment: {1990: 2, 1991: 2, 1998: 1}
consistent view: {1990: 1, 2001: 4}
graph grammars: {1990: 2, 2002: 1, 2008: 1, 2009: 1}
construction industry: {1990: 1, 1998: 1, 2002: 1, 2007: 1, 2008: 1}
computer security: {1990: 1, 2000: 1, 2003: 1, 2005: 1, 2007: 1}
multiple levels: {1990: 1, 1996: 1, 1998: 1, 2005: 1, 2011: 1}
predictive power: {1990: 2, 2000: 2, 2008: 1}
many projects: {1990: 1, 1998: 1, 2012: 1, 2016: 2}
research results: {1990: 1, 1998: 1, 2002: 1, 2004: 1, 2013: 1}
concurrent systems: {1990: 2, 1992: 1, 1999: 2}
functional correctness: {1990: 2, 2008: 1, 2013: 2}
industrial software development: {1990: 2, 2013: 1, 2015: 1, 2016: 1}
last decade: {1991: 1, 1994: 1, 1999: 1, 2009: 1, 2010: 1}
productivity quality: {1991: 1, 1993: 1, 1998: 1, 2010: 1, 2011: 1}
potential impact: {1991: 1, 1994: 2, 2011: 1, 2013: 1}
software costs: {1991: 2, 1998: 1, 2000: 1, 2011: 1}
user centered design: {1991: 1, 2003: 1, 2009: 1, 2011: 2}
area measurement: {1991: 1, 1993: 1, 1997: 1, 1999: 2}
defect data: {1991: 1, 2001: 2, 2011: 2}
aerospace engineering: {1991: 1, 1999: 1, 2002: 1, 2003: 1, 2007: 1}
defense industry: {1991: 1, 1993: 1, 1994: 1, 1997: 1, 1999: 1}
computer support: {1991: 1, 2000: 1, 2005: 3}
software technology: {1992: 1, 2002: 2, 2015: 2}
distributed information systems: {1992: 1, 2007: 4}
time intervals: {1992: 1, 2001: 2, 2002: 1, 2016: 1}
efficient algorithm: {1992: 1, 2004: 1, 2007: 2, 2013: 1}
first time: {1992: 1, 2011: 2, 2016: 2}
key factors: {1992: 1, 2001: 1, 2011: 2, 2012: 1}
economic forecasting: {1992: 1, 1997: 1, 2000: 2, 2007: 1}
united states: {1992: 1, 1993: 1, 2000: 1, 2003: 1, 2011: 1}
large-scale reuse: {1992: 1, 1994: 1, 1996: 2, 2008: 1}
future directions: {1992: 1, 1994: 1, 2001: 1, 2010: 1, 2013: 1}
experimental design: {1993: 3, 2000: 1, 2016: 1}
evolution process: {1993: 1, 1996: 2, 2011: 1, 2017: 1}
analysis technique: {1993: 1, 2004: 1, 2008: 1, 2011: 1, 2012: 1}
business domain: {1993: 1, 2000: 2, 2011: 2}
computer simulation: {1993: 1, 1997: 1, 2000: 2, 2003: 1}
side effects: {1993: 2, 2011: 3}
query formulation: {1993: 2, 2009: 1, 2013: 2}
requirements documents: {1993: 2, 1998: 1, 1999: 2}
iterative algorithms: {1993: 2, 1999: 2, 2001: 1}
various aspects: {1993: 1, 1999: 1, 2000: 1, 2010: 2}
branch testing: {1993: 2, 2005: 2, 2011: 1}
petri net: {1993: 1, 1995: 1, 1996: 1, 2003: 1, 2015: 1}
technology books: {1993: 5}
modified program: {1993: 3, 1994: 2}
selective mutation: {1993: 3, 2015: 1, 2016: 1}
target system: {1993: 1, 2003: 2, 2010: 1, 2013: 1}
design quality: {1993: 2, 2012: 2, 2013: 1}
constituent elements: {1993: 5}
function test: {1993: 5}
developing software: {1993: 1, 2003: 1, 2004: 2, 2015: 1}
requirements management: {1993: 1, 1999: 3, 2005: 1}
conformance testing: {1994: 1, 1996: 1, 2000: 2, 2002: 1}
distributed software: {1994: 1, 2003: 1, 2011: 1, 2012: 1, 2013: 1}
100 %: {1994: 1, 2005: 1, 2010: 1, 2013: 2}
information services: {1994: 1, 2011: 1, 2013: 2, 2015: 1}
long time: {1994: 1, 2005: 1, 2010: 1, 2013: 1, 2015: 1}
industrial applications: {1994: 1, 1995: 1, 1997: 1, 2013: 2}
functional specification: {1994: 1, 2001: 2, 2002: 1, 2013: 1}
software requirements specifications: {1994: 1, 1999: 1, 2000: 1, 2010: 1, 2016: 1}
lan interconnection: {1994: 1, 1999: 1, 2000: 1, 2002: 1, 2008: 1}
testing activities: {1994: 2, 2002: 2, 2016: 1}
important step: {1994: 1, 1995: 1, 2003: 1, 2011: 1, 2013: 1}
data dependencies: {1994: 2, 2009: 2, 2015: 1}
multiprocessing programs: {1994: 1, 2002: 1, 2010: 1, 2011: 1, 2012: 1}
fault tolerant computing: {1994: 1, 2005: 1, 2009: 1, 2012: 1, 2015: 1}
earlier work: {1994: 1, 2001: 1, 2008: 1, 2011: 1, 2012: 1}
dataflow analysis: {1994: 1, 1997: 1, 1998: 1, 2008: 2}
application domains: {1995: 1, 1999: 2, 2002: 1, 2012: 1}
one model: {1995: 1, 2002: 1, 2010: 1, 2013: 1, 2015: 1}
particular application: {1995: 1, 2001: 2, 2004: 1, 2013: 1}
key elements: {1995: 1, 1999: 1, 2012: 1, 2015: 2}
visual syntax: {1996: 2, 2010: 3}
architectural level: {1996: 1, 1999: 1, 2000: 1, 2005: 1, 2007: 1}
sbatcg method: {1996: 5}
distributed program: {1996: 3, 2004: 2}
sub models: {1996: 5}
initial development: {1996: 1, 2001: 1, 2011: 2, 2015: 1}
diagrammatic languages: {1996: 2, 2000: 3}
automatic synthesis: {1996: 1, 2012: 1, 2013: 2, 2016: 1}
decision makers: {1996: 2, 2005: 3}
complex software system: {1996: 1, 2005: 1, 2008: 1, 2012: 1, 2013: 1}
object classes: {1996: 4, 2002: 1}
bank data processing: {1996: 1, 1998: 2, 2001: 1, 2004: 1}
test programs: {1996: 1, 2016: 1, 2017: 3}
false negatives: {1996: 1, 2008: 1, 2013: 2, 2016: 1}
quantitative analysis: {1996: 2, 1998: 1, 2011: 1, 2012: 1}
call graphs: {1996: 3, 2003: 2}
industrial relations: {1996: 1, 1999: 3, 2000: 1}
cost savings: {1996: 1, 2010: 1, 2015: 3}
user interface management systems: {1996: 1, 1998: 1, 2000: 1, 2001: 1, 2010: 1}
reference architecture: {1996: 2, 2002: 1, 2015: 2}
existing software: {1996: 1, 2002: 2, 2011: 1, 2017: 1}
class diagrams: {1996: 2, 2000: 2, 2001: 1}
package-oriented programming: {1997: 1, 2000: 2, 2003: 2}
architecture description language: {1997: 1, 1999: 2, 2003: 1, 2011: 1}
consistency checking: {1997: 1, 2004: 1, 2008: 2, 2010: 1}
object-oriented design: {1997: 1, 1998: 1, 2000: 1, 2004: 1, 2012: 1}
continuous improvement: {1998: 3, 2000: 1, 2012: 1}
system behaviour: {1998: 2, 2008: 1, 2010: 2}
4 %: {1998: 1, 2007: 1, 2012: 2, 2015: 1}
many tools: {1998: 1, 2008: 1, 2010: 1, 2011: 1, 2015: 1}
virtual reality: {1998: 2, 2010: 1, 2015: 2}
application specific processors: {1998: 1, 2000: 1, 2002: 1, 2004: 1, 2007: 1}
object-oriented paradigm: {1998: 2, 1999: 2, 2004: 1}
several projects: {1998: 1, 2003: 1, 2009: 1, 2010: 1, 2015: 1}
industrial context: {1998: 2, 2007: 1, 2008: 2}
relational database: {1998: 1, 2001: 1, 2005: 2, 2013: 1}
defect detection: {1998: 2, 2000: 2, 2011: 1}
usage data: {1998: 2, 2015: 1, 2016: 2}
middleware technologies: {1999: 1, 2001: 1, 2002: 1, 2003: 1, 2004: 1}
citation analysis: {1999: 3, 2000: 2}
vehicle dynamics: {1999: 1, 2004: 1, 2008: 1, 2011: 1, 2015: 1}
system components: {1999: 1, 2001: 1, 2004: 1, 2008: 1, 2010: 1}
configurable software systems: {1999: 1, 2013: 2, 2015: 2}
abstract representations: {1999: 2, 2001: 1, 2013: 2}
design rationale: {1999: 1, 2005: 1, 2010: 1, 2011: 2}
test data generation: {1999: 1, 2012: 2, 2015: 2}
system quality: {1999: 1, 2001: 1, 2005: 1, 2011: 1, 2015: 1}
whole system: {1999: 1, 2004: 1, 2007: 1, 2013: 2}
european space agency: {1999: 4, 2000: 1}
yield estimation: {1999: 1, 2001: 2, 2002: 1, 2005: 1}
tool evaluation: {1999: 2, 2012: 2, 2013: 1}
large organizations: {1999: 1, 2000: 1, 2013: 3}
mobile environment: {1999: 4, 2000: 1}
concurrent system: {1999: 1, 2000: 3, 2011: 1}
dynamic slice: {1999: 1, 2002: 1, 2004: 3}
distributed software projects: {1999: 2, 2010: 2, 2016: 1}
research project: {1999: 1, 2005: 1, 2010: 1, 2013: 2}
existing system: {1999: 1, 2000: 1, 2007: 1, 2011: 1, 2015: 1}
business units: {1999: 2, 2001: 2, 2003: 1}
background knowledge: {1999: 1, 2002: 2, 2004: 1, 2010: 1}
component reuse: {1999: 1, 2000: 2, 2004: 1, 2008: 1}
medical diagnostic imaging: {1999: 1, 2003: 1, 2008: 2, 2011: 1}
internet applications: {1999: 1, 2000: 1, 2001: 2, 2012: 1}
detailed analysis: {1999: 1, 2000: 1, 2008: 1, 2011: 1, 2015: 1}
portable computers: {1999: 1, 2001: 1, 2002: 1, 2005: 1, 2008: 1}
object-oriented software development: {1999: 2, 2002: 3}
software project planning: {1999: 1, 2000: 2, 2012: 1, 2015: 1}
timed automata: {1999: 1, 2000: 2, 2002: 2}
base stations: {1999: 1, 2000: 1, 2002: 3}
lower cost: {1999: 2, 2001: 1, 2010: 1, 2016: 1}
systems engineering education: {2000: 2, 2005: 3}
different strategies: {2000: 1, 2002: 1, 2011: 1, 2013: 2}
test adequacy: {2000: 1, 2008: 1, 2011: 2, 2017: 1}
testing effectiveness: {2000: 1, 2008: 1, 2011: 1, 2016: 2}
significant reduction: {2000: 1, 2007: 1, 2012: 1, 2013: 1, 2016: 1}
uml class diagrams: {2000: 3, 2010: 2}
code ownership: {2000: 2, 2011: 1, 2016: 2}
defect density: {2000: 1, 2005: 3, 2008: 1}
uml sequence diagrams: {2000: 2, 2005: 2, 2008: 1}
action language: {2000: 5}
program analyses: {2000: 3, 2001: 1, 2013: 1}
project manager: {2000: 1, 2004: 1, 2013: 2, 2015: 1}
program traces: {2000: 2, 2012: 1, 2015: 2}
analysis results: {2000: 2, 2004: 1, 2007: 1, 2015: 1}
behavior models: {2000: 1, 2005: 1, 2009: 1, 2012: 2}
communication technology: {2000: 2, 2011: 1, 2013: 1, 2015: 1}
technical skills: {2000: 2, 2005: 2, 2016: 1}
communication skills: {2000: 2, 2013: 2, 2015: 1}
software product development: {2000: 1, 2004: 1, 2013: 1, 2015: 1, 2017: 1}
dynamic composition: {2000: 3, 2004: 2}
21st century: {2000: 1, 2002: 4}
fluid dynamics: {2000: 1, 2004: 1, 2011: 1, 2013: 1, 2015: 1}
software test: {2000: 1, 2010: 1, 2011: 1, 2013: 1, 2015: 1}
constraint satisfaction: {2000: 1, 2001: 2, 2004: 2}
support tool: {2000: 1, 2005: 2, 2011: 2}
usage scenarios: {2000: 2, 2001: 1, 2015: 2}
third eye: {2000: 5}
's law: {2000: 4, 2012: 1}
automated tool: {2000: 1, 2010: 1, 2011: 1, 2015: 1, 2016: 1}
intelligent agent: {2000: 1, 2003: 1, 2004: 2, 2005: 1}
system modeling: {2000: 2, 2003: 1, 2004: 1, 2012: 1}
structural analysis: {2001: 2, 2012: 1, 2013: 2}
random sampling: {2001: 1, 2009: 1, 2012: 1, 2016: 2}
cost reduction: {2001: 1, 2010: 1, 2012: 1, 2015: 2}
different stakeholders: {2001: 1, 2002: 1, 2010: 1, 2011: 1, 2013: 1}
web-based systems: {2001: 1, 2002: 4}
automatic test pattern generation: {2001: 1, 2004: 1, 2010: 1, 2011: 1, 2013: 1}
software requirements and specifications: {2001: 1, 2003: 4}
different domains: {2001: 2, 2002: 1, 2004: 1, 2016: 1}
cost-benefit analyses: {2001: 3, 2002: 2}
state-space exploration: {2001: 1, 2004: 2, 2008: 2}
data flow diagrams: {2001: 1, 2011: 1, 2012: 3}
research area: {2001: 1, 2003: 1, 2004: 1, 2010: 1, 2013: 1}
corba components: {2001: 5}
legacy software: {2001: 2, 2002: 2, 2011: 1}
many organizations: {2001: 3, 2003: 1, 2011: 1}
system model: {2001: 2, 2005: 1, 2013: 2}
behavioral specification: {2001: 2, 2011: 2, 2015: 1}
software maintenance evolution: {2001: 1, 2004: 1, 2005: 1, 2011: 2}
two areas: {2001: 1, 2008: 1, 2011: 1, 2013: 1, 2015: 1}
software organization: {2001: 2, 2008: 2, 2011: 1}
empirical methods: {2002: 2, 2015: 3}
computer crime: {2002: 1, 2003: 1, 2004: 2, 2015: 1}
run-time behavior: {2002: 2, 2005: 1, 2009: 1, 2017: 1}
human intervention: {2002: 1, 2012: 3, 2015: 1}
different parts: {2002: 2, 2008: 2, 2010: 1}
enterprise javabeans: {2002: 2, 2003: 2, 2007: 1}
commercial off-the-shelf: {2002: 1, 2003: 1, 2004: 1, 2005: 2}
sourceforge platform: {2002: 5}
one-day workshop: {2002: 1, 2004: 1, 2010: 1, 2015: 2}
proceedings record: {2002: 1, 2005: 1, 2015: 1, 2016: 1, 2017: 1}
software architecture design: {2002: 2, 2005: 3}
software economics: {2002: 1, 2010: 1, 2011: 2, 2013: 1}
practitioners researchers: {2002: 1, 2003: 1, 2004: 1, 2013: 2}
mobile platforms: {2002: 2, 2013: 3}
application developers: {2002: 1, 2005: 1, 2009: 1, 2010: 2}
coordination contracts: {2002: 5}
capacity planning: {2002: 1, 2007: 3, 2008: 1}
user interaction: {2002: 2, 2003: 1, 2012: 1, 2015: 1}
software artifact: {2003: 1, 2004: 2, 2010: 2}
open-source project: {2003: 1, 2012: 2, 2013: 2}
qualitative study: {2003: 1, 2011: 1, 2016: 1, 2017: 2}
30 %: {2003: 1, 2005: 1, 2008: 1, 2013: 1, 2017: 1}
non-functional properties: {2003: 2, 2004: 1, 2009: 1, 2013: 1}
introductory programming course: {2003: 2, 2008: 2, 2013: 1}
first-class entities: {2003: 1, 2010: 2, 2011: 2}
empirical analysis: {2003: 1, 2007: 1, 2011: 2, 2013: 1}
critical systems: {2003: 2, 2005: 2, 2015: 1}
research prototype: {2003: 3, 2009: 1, 2011: 1}
acoustical engineering: {2003: 3, 2005: 1, 2007: 1}
third-party components: {2003: 1, 2011: 1, 2013: 1, 2015: 2}
software engineering challenges: {2003: 1, 2004: 1, 2012: 1, 2013: 1, 2015: 1}
increasing number: {2003: 1, 2004: 1, 2015: 3}
possible combinations: {2003: 1, 2008: 2, 2015: 1, 2016: 1}
software design quality: {2004: 1, 2013: 3, 2015: 1}
new ideas: {2004: 1, 2010: 1, 2011: 1, 2013: 1, 2015: 1}
program executions: {2004: 2, 2008: 1, 2011: 1, 2013: 1}
learning systems: {2004: 1, 2009: 1, 2012: 2, 2013: 1}
professional practice: {2004: 2, 2013: 1, 2015: 2}
type error: {2004: 3, 2011: 1, 2013: 1}
software development life cycle: {2004: 1, 2010: 2, 2011: 2}
automated technique: {2004: 1, 2011: 1, 2012: 2, 2015: 1}
autonomous agents: {2004: 2, 2012: 3}
reverse execution: {2004: 4, 2016: 1}
reused components: {2004: 5}
negative impact: {2004: 1, 2010: 2, 2015: 1, 2016: 1}
computing systems: {2004: 2, 2005: 1, 2010: 2}
grid computing: {2004: 2, 2008: 2, 2011: 1}
autonomic computing: {2005: 4, 2010: 1}
automatic technique: {2005: 1, 2009: 1, 2011: 2, 2012: 1}
model-based security engineering: {2005: 1, 2007: 2, 2008: 2}
buffer overflow: {2005: 1, 2011: 2, 2013: 1, 2016: 1}
end-user programmers: {2005: 1, 2008: 1, 2011: 1, 2013: 2}
function calls: {2005: 1, 2007: 1, 2009: 3}
software functions: {2005: 1, 2008: 2, 2013: 2}
two challenges: {2005: 1, 2008: 1, 2010: 2, 2012: 1}
test failures: {2005: 1, 2015: 2, 2017: 2}
requirements validation: {2005: 1, 2010: 1, 2013: 3}
hands-on experience: {2005: 1, 2010: 1, 2015: 3}
one version: {2007: 2, 2008: 2, 2013: 1}
program state: {2007: 1, 2013: 1, 2016: 1, 2017: 2}
software development tools: {2007: 1, 2010: 1, 2011: 1, 2012: 2}
merge conflicts: {2007: 1, 2009: 2, 2012: 2}
prediction algorithms: {2007: 1, 2011: 1, 2013: 2, 2015: 1}
code complexity: {2007: 2, 2011: 2, 2015: 1}
fault injection: {2007: 1, 2011: 1, 2017: 3}
collaborative environment: {2007: 3, 2013: 2}
student teams: {2007: 1, 2011: 3, 2013: 1}
future studies: {2007: 1, 2011: 1, 2013: 2, 2016: 1}
different aspects: {2007: 1, 2008: 2, 2012: 1, 2015: 1}
failing test: {2007: 1, 2011: 4}
web service: {2007: 1, 2009: 2, 2010: 2}
runtime behavior: {2008: 2, 2012: 1, 2017: 2}
learning automata: {2008: 1, 2010: 1, 2011: 3}
design rules: {2008: 3, 2011: 2}
security mechanisms: {2008: 3, 2013: 2}
one set: {2008: 3, 2012: 1, 2016: 1}
false alarms: {2008: 1, 2009: 1, 2015: 1, 2017: 2}
atomicity violations: {2008: 1, 2012: 1, 2013: 2, 2017: 1}
task management: {2008: 2, 2010: 1, 2012: 2}
professional software developers: {2008: 1, 2013: 2, 2015: 2}
modern ides: {2008: 1, 2012: 1, 2013: 1, 2015: 2}
conformance checking: {2008: 1, 2012: 2, 2015: 2}
new bug report: {2008: 4, 2011: 1}
error-prone process: {2008: 1, 2013: 1, 2015: 2, 2016: 1}
software mining: {2008: 1, 2012: 1, 2015: 2, 2017: 1}
model-based approach: {2008: 2, 2010: 2, 2015: 1}
inverted classroom: {2008: 5}
model transformation: {2008: 1, 2010: 1, 2011: 1, 2012: 2}
development tools: {2008: 1, 2011: 2, 2013: 2}
model evolution: {2008: 1, 2011: 2, 2012: 2}
social aspects: {2009: 3, 2012: 2}
search results: {2009: 2, 2010: 1, 2012: 1, 2015: 1}
professional software engineers: {2009: 1, 2012: 1, 2013: 1, 2015: 2}
open source applications: {2009: 1, 2012: 4}
test scripts: {2009: 4, 2013: 1}
p & lt: {2009: 1, 2013: 1, 2016: 1, 2017: 2}
inconsistent changes: {2009: 3, 2011: 1, 2012: 1}
context-aware web services: {2009: 5}
target platform: {2009: 1, 2013: 3, 2016: 1}
response time: {2010: 1, 2013: 3, 2015: 1}
true positives: {2010: 1, 2012: 4}
key insight: {2010: 1, 2011: 1, 2013: 1, 2016: 1, 2017: 1}
video games: {2010: 3, 2011: 2}
development tasks: {2010: 2, 2011: 1, 2015: 2}
abstraction level: {2010: 3, 2012: 1, 2013: 1}
software ecosystems: {2010: 2, 2011: 1, 2012: 1, 2016: 1}
bug repository: {2010: 2, 2012: 3}
privacy concerns: {2010: 1, 2012: 3, 2013: 1}
software intensive systems: {2010: 2, 2011: 2, 2012: 1}
stability analysis: {2010: 1, 2012: 1, 2013: 1, 2015: 1, 2017: 1}
icse 2010: {2010: 4, 2012: 1}
social software: {2010: 1, 2011: 1, 2012: 3}
coaching framework: {2010: 5}
real-world programs: {2010: 1, 2012: 1, 2013: 2, 2017: 1}
qualitative research: {2010: 1, 2011: 1, 2013: 1, 2015: 1, 2017: 1}
automated refactorings: {2010: 2, 2012: 3}
qualitative evaluation: {2010: 2, 2013: 2, 2017: 1}
systematic review: {2011: 2, 2012: 3}
practical guide: {2011: 1, 2016: 4}
dynamic specification mining: {2011: 5}
build maintenance: {2011: 5}
api-level refactorings: {2011: 5}
given domain: {2011: 1, 2012: 1, 2016: 3}
controller synthesis: {2011: 1, 2012: 1, 2013: 3}
developer networks: {2011: 3, 2013: 1, 2017: 1}
model projection: {2011: 5}
web developers: {2011: 1, 2012: 2, 2015: 2}
cooperative developer testing: {2011: 5}
higher structural coverage: {2011: 4, 2016: 1}
design thinking: {2011: 3, 2015: 2}
smart grid: {2011: 2, 2013: 3}
static program slicing: {2011: 5}
knowledge sharing: {2011: 1, 2012: 4}
bug triaging: {2011: 2, 2013: 3}
traceability link recovery: {2011: 2, 2013: 3}
topic modeling: {2011: 2, 2013: 3}
sustainable development: {2011: 1, 2012: 2, 2015: 2}
electronic publishing: {2011: 1, 2013: 2, 2015: 1, 2017: 1}
cascading style sheets: {2011: 1, 2012: 3, 2015: 1}
security experts: {2011: 3, 2013: 1, 2016: 1}
se community: {2011: 2, 2013: 1, 2015: 2}
software repository: {2012: 2, 2013: 1, 2015: 2}
developer prioritization: {2012: 5}
api usages: {2012: 1, 2016: 3, 2017: 1}
novel solution: {2012: 2, 2013: 3}
professional developers: {2012: 3, 2013: 1, 2015: 1}
unfamiliar apis: {2012: 4, 2017: 1}
open source systems: {2012: 3, 2015: 1, 2017: 1}
classification model: {2012: 2, 2013: 2, 2016: 1}
real bugs: {2012: 1, 2013: 2, 2016: 1, 2017: 1}
anomaly reports: {2012: 3, 2013: 2}
continuous integration: {2012: 3, 2013: 2}
software development analytics: {2012: 4, 2013: 1}
collaborative development: {2012: 2, 2013: 1, 2015: 2}
collaboration patterns: {2012: 4, 2015: 1}
collaborative learning: {2012: 1, 2015: 4}
cyber-physical systems: {2012: 2, 2015: 3}
model inference: {2012: 3, 2013: 1, 2016: 1}
gui testing: {2012: 1, 2013: 1, 2015: 1, 2016: 2}
task allocation: {2012: 5}
automatic static analysis: {2012: 3, 2013: 2}
android platform: {2013: 1, 2015: 3, 2017: 1}
cross-project defect prediction: {2013: 2, 2016: 3}
edit locations: {2013: 5}
semantic analysis: {2013: 1, 2016: 3, 2017: 1}
agile approach: {2013: 3, 2015: 2}
ground-truth architectures: {2013: 3, 2015: 2}
agile projects: {2013: 4, 2016: 1}
bug-fixing time: {2013: 5}
access control models: {2013: 4, 2017: 1}
decision analysis: {2013: 1, 2017: 4}
formal verification techniques: {2013: 2, 2017: 3}
international workshop: {2013: 2, 2015: 3}
false test alarms: {2015: 5}
learning outcomes: {2015: 5}
project-based learning: {2015: 5}
societal sustainability: {2015: 5}
android devices: {2015: 2, 2016: 3}
javascript programs: {2015: 2, 2016: 3}
25 %: {2015: 1, 2016: 3, 2017: 1}
green software engineering: {2015: 2, 2016: 3}
& # x00a0: {2015: 5}
# x00a0: {2015: 5}
compiler testing: {2016: 2, 2017: 3}
code mining: {2016: 5}
code quality concerns: {2016: 5}
job rotation: {2016: 5}
software-specific terms: {2017: 5}
static type systems: {2017: 5}
software community: {1988: 1, 2001: 1, 2004: 1, 2015: 1}
general model: {1989: 2, 1988: 1, 1992: 1}
effective reuse: {1989: 1, 1998: 1, 2003: 1, 2011: 1}
various data: {1992: 1, 2012: 2, 2013: 1}
formal technical review: {1994: 3, 1997: 1}
software quality assessment: {1994: 2, 2013: 2}
requirements negotiation: {1998: 2, 2001: 2}
code integration: {1999: 1, 2015: 3}
international collaboration: {1999: 1, 2001: 1, 2003: 1, 2005: 1}
software portability: {2001: 1, 1994: 1, 1996: 2}
old version: {2001: 1, 1998: 1, 1999: 1, 2016: 1}
aerospace control: {2002: 2, 1988: 1, 2004: 1}
sequential analysis: {2007: 2, 2000: 1, 2003: 1}
first-order relational logic: {2007: 2, 2011: 2}
sequential circuits: {2007: 4}
complexity metrics: {2009: 1, 1989: 1, 2008: 2}
information theory: {2009: 1, 2015: 3}
defect content: {2010: 1, 1998: 2, 2002: 1}
95 %: {2011: 1, 2012: 1, 2013: 1, 2015: 1}
learning resources: {2012: 4}
mailing list: {2012: 1, 2000: 1, 2011: 1, 2015: 1}
architectural problems: {2015: 2, 2002: 2}
evolving systems: {2015: 1, 1998: 1, 2002: 1, 2005: 1}
automatic detection: {2015: 2, 2008: 1, 2013: 1}
many applications: {1988: 1, 1992: 1, 2002: 1, 2012: 1}
formal definition: {1988: 2, 2002: 1, 2011: 1}
design evaluation: {1988: 1, 2003: 1, 2010: 1, 2013: 1}
several approaches: {1988: 1, 2011: 1, 2012: 1, 2017: 1}
specific problems: {1988: 1, 2004: 1, 2013: 1, 2016: 1}
building blocks: {1988: 2, 1998: 1, 2004: 1}
computer programs: {1988: 2, 1989: 1, 1992: 1}
experimental evidence: {1988: 1, 2000: 1, 2009: 1, 2011: 1}
three components: {1988: 1, 2012: 2, 2016: 1}
text editing: {1988: 1, 1993: 1, 2010: 1, 2013: 1}
us government: {1988: 2, 1997: 1, 1998: 1}
specification analysis: {1988: 1, 1995: 1, 1996: 1, 2004: 1}
theorem prover: {1988: 2, 1996: 2}
textual specification: {1988: 1, 2004: 2, 2012: 1}
integrated set: {1988: 1, 1996: 2, 2003: 1}
set theory: {1988: 2, 2002: 1, 2013: 1}
distributed system: {1988: 1, 1998: 1, 2001: 1, 2012: 1}
file systems: {1988: 1, 1997: 1, 1999: 1, 2000: 1}
robot sensing systems: {1988: 1, 2012: 1, 2013: 1, 2015: 1}
theory w: {1988: 4}
strategic planning: {1988: 1, 2000: 1, 2004: 1, 2013: 1}
integrated project support environment: {1988: 2, 1993: 2}
timing constraints: {1989: 2, 1994: 1, 1995: 1}
concurrent program: {1989: 1, 2009: 1, 2010: 2}
function point analysis: {1989: 1, 1998: 2, 2002: 1}
new technologies: {1989: 1, 1991: 1, 1998: 1, 2005: 1}
large-scale software system: {1989: 1, 2012: 1, 2016: 2}
error analysis: {1989: 3, 2012: 1}
reusable software components: {1989: 1, 2000: 2, 2011: 1}
electronic switching systems: {1989: 1, 1994: 1, 1996: 1, 1997: 1}
reliability model: {1989: 1, 1996: 1, 2011: 2}
software fault: {1989: 1, 2012: 1, 2015: 2}
design methods: {1989: 1, 1994: 1, 2002: 1, 2004: 1}
many studies: {1989: 1, 2010: 1, 2012: 1, 2017: 1}
software complexity: {1989: 1, 2005: 1, 2010: 2}
specific application domains: {1989: 1, 2007: 1, 2013: 1, 2015: 1}
inscape environment: {1989: 2, 1991: 2}
design goals: {1989: 1, 2002: 1, 2003: 2}
application architecture: {1990: 2, 2004: 2}
< <: {1990: 1, 1991: 1, 1993: 1, 1994: 1}
systematic development: {1990: 2, 1999: 1, 2003: 1}
net browser: {1990: 4}
graphical notations: {1990: 2, 1998: 2}
meeting planning: {1990: 1, 2002: 1, 2003: 1, 2009: 1}
technology planning: {1990: 1, 2002: 1, 2004: 2}
data model: {1990: 3, 1999: 1}
software development cycle: {1990: 2, 2012: 2}
software process models: {1990: 2, 2000: 1, 2007: 1}
test process: {1990: 1, 1996: 2, 2008: 1}
ripple effects: {1990: 2, 2011: 2}
source lines: {1990: 1, 1998: 1, 1999: 1, 2008: 1}
many areas: {1990: 1, 2003: 2, 2009: 1}
physics computing: {1990: 2, 1996: 1, 2000: 1}
important problem: {1990: 1, 1999: 1, 2011: 1, 2017: 1}
open problems: {1990: 1, 1994: 2, 2002: 1}
computer animation: {1990: 1, 1993: 1, 2000: 1, 2001: 1}
large software system: {1990: 2, 2003: 1, 2011: 1}
creation maintenance: {1990: 1, 2010: 1, 2011: 1, 2013: 1}
resulting system: {1990: 1, 2000: 1, 2004: 2}
tool integration: {1990: 1, 1999: 1, 2008: 2}
power system management: {1990: 1, 1997: 1, 2005: 1, 2009: 1}
computing education: {1991: 4}
technological advances: {1991: 3, 2015: 1}
domain modeling: {1991: 3, 1993: 1}
language design: {1991: 2, 2003: 1, 2011: 1}
code segments: {1991: 2, 2013: 2}
sperry marine: {1991: 4}
design document: {1991: 2, 1992: 1, 2015: 1}
external influence: {1991: 2, 2010: 1, 2011: 1}
user-centered design: {1991: 2, 2009: 1, 2015: 1}
fault location: {1991: 1, 2003: 1, 2013: 1, 2017: 1}
main features: {1991: 1, 2011: 1, 2013: 1, 2015: 1}
software implementation: {1991: 1, 2005: 1, 2008: 2}
mathematical techniques: {1991: 2, 2001: 2}
contract management: {1991: 2, 2005: 2}
artificial faults: {1992: 1, 2017: 3}
program code: {1992: 1, 2003: 1, 2008: 1, 2011: 1}
new method: {1992: 1, 1993: 1, 2003: 1, 2015: 1}
character recognition: {1992: 1, 2000: 3}
controlled experiments: {1992: 1, 2005: 2, 2013: 1}
several versions: {1992: 1, 2008: 1, 2009: 1, 2016: 1}
actual use: {1993: 1, 1999: 1, 2003: 1, 2013: 1}
user requirements: {1993: 3, 2000: 1}
several cases: {1993: 1, 2012: 1, 2013: 1, 2017: 1}
statistical control: {1993: 2, 2013: 2}
cleanroom software engineering: {1993: 2, 1997: 2}
finite state machine: {1993: 1, 2004: 2, 2011: 1}
bottom-up approach: {1993: 2, 2017: 2}
transaction processing: {1993: 3, 2005: 1}
industrial settings: {1993: 1, 2005: 1, 2011: 1, 2013: 1}
programmer productivity: {1993: 1, 2007: 1, 2011: 1, 2016: 1}
complex data structures: {1993: 1, 2008: 2, 2010: 1}
existing software systems: {1993: 2, 1999: 1, 2003: 1}
reusable parts: {1993: 1, 1994: 2, 2015: 1}
formal representation: {1993: 2, 1994: 1, 1998: 1}
reflective features: {1993: 3, 2004: 1}
two languages: {1993: 1, 2011: 1, 2017: 2}
change propagation: {1993: 2, 1997: 1, 2011: 1}
design reuse: {1993: 1, 1996: 2, 1998: 1}
et al.: {1993: 1, 2001: 2, 2004: 1}
important part: {1993: 1, 1999: 1, 2012: 1, 2017: 1}
dynamic program analysis: {1993: 1, 2002: 2, 2015: 1}
dynamic visualization: {1993: 2, 1996: 2}
test program: {1993: 1, 2004: 2, 2017: 1}
frame problem: {1993: 4}
z notation: {1993: 2, 1996: 2}
object-oriented databases: {1993: 2, 1998: 1, 2001: 1}
new insights: {1993: 1, 2005: 1, 2012: 2}
cost model: {1993: 2, 1998: 2}
component composition: {1993: 1, 1997: 1, 2000: 1, 2013: 1}
related work: {1993: 1, 2001: 1, 2003: 1, 2008: 1}
major concern: {1993: 1, 2011: 1, 2013: 1, 2017: 1}
debugging time: {1994: 4}
regression test selection techniques: {1994: 1, 1998: 2, 2000: 1}
distributed software engineering: {1994: 2, 2008: 2}
quality concerns: {1994: 1, 2012: 1, 2015: 1, 2016: 1}
dependency relationships: {1994: 2, 2002: 2}
cost drivers: {1994: 4}
high-level design: {1994: 3, 2003: 1}
new functionality: {1994: 1, 2008: 1, 2010: 2}
software process assessment: {1994: 2, 1995: 2}
research issues: {1994: 3, 1999: 1}
' work: {1994: 1, 2005: 1, 2012: 1, 2016: 1}
system structure: {1994: 2, 1998: 1, 1999: 1}
description logics: {1994: 2, 1999: 2}
long-term impact: {1994: 2, 2010: 2}
business communication: {1994: 1, 2002: 1, 2005: 1, 2008: 1}
mental model: {1994: 2, 2011: 1, 2013: 1}
timing requirements: {1994: 2, 1999: 1, 2000: 1}
three case studies: {1994: 1, 1999: 1, 2002: 1, 2012: 1}
exhaustive analysis: {1994: 2, 1996: 1, 1999: 1}
reusable software: {1994: 2, 2003: 2}
open issues: {1995: 1, 2010: 1, 2012: 1, 2013: 1}
fault detection effectiveness: {1995: 1, 2004: 1, 2013: 2}
testing methodology: {1995: 1, 1998: 1, 2000: 2}
failure probability: {1995: 1, 2013: 1, 2017: 2}
practical applications: {1995: 1, 2005: 1, 2011: 1, 2012: 1}
neural networks: {1995: 1, 1997: 1, 2015: 1, 2017: 1}
development organization: {1995: 1, 2000: 2, 2015: 1}
major challenges: {1995: 1, 2011: 1, 2012: 2}
omron corporation: {1995: 2, 1998: 2}
architectural mismatch: {1995: 1, 1996: 2, 2010: 1}
reusable part: {1995: 1, 1999: 3}
multiple stakeholders: {1995: 1, 2013: 3}
viewpoints framework: {1995: 1, 2003: 3}
experimental software engineering: {1995: 1, 2000: 1, 2012: 1, 2013: 1}
evolving system: {1996: 1, 2000: 1, 2011: 1, 2013: 1}
design model: {1996: 1, 2000: 1, 2007: 1, 2010: 1}
high-quality software: {1996: 2, 2004: 2}
data flow testing: {1996: 2, 2003: 1, 2004: 1}
definition-use pairs: {1996: 4}
new type: {1996: 2, 2011: 1, 2013: 1}
little effort: {1996: 2, 1998: 1, 2016: 1}
original model: {1996: 2, 2011: 1, 2016: 1}
q system: {1996: 4}
iso 9000: {1996: 1, 1998: 1, 2004: 2}
interacting classes: {1996: 4}
system dependence: {1996: 3, 1999: 1}
software errors: {1996: 2, 2015: 2}
new technology: {1996: 1, 1998: 1, 2003: 1, 2004: 1}
utility programs: {1996: 1, 2005: 2, 2010: 1}
classification scheme: {1996: 2, 1999: 2}
different environments: {1996: 1, 1998: 1, 2004: 1, 2005: 1}
call graph: {1996: 1, 2012: 1, 2015: 2}
partial models: {1996: 1, 2012: 2, 2013: 1}
programmed graph rewriting system: {1996: 4}
incremental modification: {1996: 1, 2000: 3}
past decades: {1996: 1, 2010: 1, 2011: 1, 2015: 1}
several problems: {1996: 1, 2002: 1, 2008: 1, 2015: 1}
industrial experience: {1996: 1, 2011: 1, 2015: 2}
student projects: {1996: 2, 2011: 1, 2015: 1}
practical issues: {1996: 1, 2000: 1, 2001: 1, 2010: 1}
communication switching: {1996: 1, 2003: 1, 2004: 1, 2007: 1}
algebraic specifications: {1997: 1, 2004: 1, 2012: 2}
partition testing: {1997: 1, 2012: 1, 2015: 2}
information filters: {1997: 1, 2005: 1, 2008: 1, 2015: 1}
software development cost: {1997: 1, 1998: 1, 2001: 1, 2002: 1}
cyclic redundancy check: {1997: 1, 1999: 1, 2001: 1, 2005: 1}
regression tree analysis: {1997: 1, 1999: 1, 2000: 1, 2003: 1}
research initiatives: {1998: 1, 2000: 1, 2001: 1, 2016: 1}
one example: {1998: 1, 2010: 1, 2012: 1, 2013: 1}
software contracts: {1998: 1, 2011: 2, 2013: 1}
extensive analysis: {1998: 1, 2000: 1, 2012: 1, 2017: 1}
estimation accuracy: {1998: 3, 2001: 1}
two characteristics: {1998: 1, 2003: 2, 2004: 1}
one year: {1998: 1, 2003: 1, 2017: 2}
industrial project: {1998: 1, 2005: 1, 2008: 2}
component-based software development: {1998: 1, 2000: 2, 2008: 1}
real-time system: {1998: 1, 2001: 1, 2005: 1, 2008: 1}
automatic verification: {1998: 2, 2003: 1, 2007: 1}
z language: {1998: 2, 2000: 1, 2004: 1}
complex system: {1998: 1, 2005: 1, 2011: 2}
statistical approach: {1998: 1, 2015: 2, 2016: 1}
maintenance data: {1998: 3, 2013: 1}
uml notation: {1998: 2, 2000: 2}
business applications: {1998: 1, 2008: 2, 2012: 1}
major problems: {1998: 1, 2004: 1, 2005: 1, 2016: 1}
current progress: {1998: 1, 2004: 1, 2012: 1, 2013: 1}
simulation model: {1998: 2, 2000: 1, 2015: 1}
end-user computing: {1998: 2, 2002: 2}
linear regression: {1998: 1, 1999: 1, 2002: 1, 2013: 1}
rigorous reasoning: {1998: 1, 2000: 2, 2008: 1}
nasa/gsfc software engineering laboratory: {1998: 2, 2002: 2}
event-based systems: {1998: 1, 2004: 1, 2010: 2}
heuristic programming: {1998: 1, 1999: 1, 2004: 2}
complex functionality: {1999: 1, 2000: 2, 2005: 1}
new capabilities: {1999: 2, 2012: 1, 2013: 1}
boeing commercial airplane group: {1999: 4}
persistent objects: {1999: 3, 2005: 1}
component integration: {1999: 2, 2004: 2}
component interaction: {1999: 1, 2004: 2, 2008: 1}
multiple dimensions: {1999: 2, 2012: 1, 2013: 1}
aspect oriented programming: {1999: 1, 2000: 1, 2001: 1, 2012: 1}
modularized specifications: {1999: 2, 2000: 2}
symbolic model checking: {1999: 2, 2001: 1, 2011: 1}
liveness properties: {1999: 2, 2001: 2}
telecommunication control: {1999: 1, 2003: 1, 2005: 1, 2008: 1}
united states payment system: {1999: 2, 2001: 2}
control system: {1999: 1, 2000: 1, 2008: 1, 2010: 1}
modifying code: {1999: 3, 2000: 1}
22 %: {1999: 1, 2011: 1, 2013: 1, 2015: 1}
goal state: {1999: 4}
functional properties: {1999: 1, 2012: 2, 2013: 1}
input domain: {1999: 1, 2008: 1, 2015: 2}
large scale: {1999: 1, 2003: 1, 2009: 1, 2012: 1}
cocomo factors: {1999: 4}
product size: {1999: 4}
analysis of variance: {1999: 1, 2000: 2, 2003: 1}
quality models: {1999: 1, 2011: 3}
agent technology: {1999: 1, 2003: 2, 2004: 1}
mobile hosts: {1999: 3, 2002: 1}
application level: {1999: 1, 2001: 1, 2002: 1, 2008: 1}
query specification: {1999: 4}
flow graph: {1999: 2, 2009: 2}
current status: {1999: 1, 2002: 1, 2007: 1, 2015: 1}
program change: {1999: 2, 2009: 2}
change impact: {1999: 2, 2005: 1, 2012: 1}
functional languages: {1999: 1, 2009: 1, 2010: 1, 2015: 1}
development lifecycle: {1999: 1, 2004: 1, 2008: 2}
parallel languages: {1999: 1, 2002: 1, 2011: 2}
language constructs: {1999: 2, 2015: 1, 2017: 1}
component-based approach: {1999: 2, 2001: 1, 2005: 1}
common features: {1999: 2, 2007: 1, 2012: 1}
advantages disadvantages: {1999: 1, 2011: 1, 2016: 2}
key practices: {1999: 1, 2001: 1, 2004: 1, 2005: 1}
leap toolkit: {1999: 3, 2000: 1}
life estimation: {1999: 1, 2000: 1, 2005: 1, 2017: 1}
automatic approach: {1999: 1, 2010: 1, 2012: 1, 2017: 1}
mobile systems: {1999: 1, 2013: 2, 2016: 1}
static structural information: {1999: 2, 2008: 2}
key role: {2000: 1, 2008: 1, 2012: 1, 2013: 1}
software engineering research practice: {2000: 1, 2012: 1, 2013: 1, 2015: 1}
process metrics: {2000: 1, 2001: 1, 2008: 1, 2013: 1}
statistical testing: {2000: 1, 2003: 2, 2013: 1}
schedule constraints: {2000: 2, 2013: 2}
log file analysis: {2000: 3, 2012: 1}
multivariate visualization: {2000: 2, 2003: 2}
essential tradeoffs: {2000: 1, 2002: 3}
test order: {2000: 4}
inheritance hierarchy: {2000: 2, 2004: 2}
sesam project: {2000: 4}
software architect: {2000: 2, 2002: 1, 2010: 1}
spreadsheet paradigm: {2000: 2, 2003: 2}
's effectiveness: {2000: 1, 2004: 1, 2007: 1, 2016: 1}
visual programming language: {2000: 4}
code replication: {2000: 2, 2008: 2}
apache web server: {2000: 2, 2001: 2}
email archives: {2000: 2, 2011: 2}
oss project: {2000: 1, 2005: 1, 2011: 1, 2016: 1}
course content: {2000: 3, 2007: 1}
successful application: {2000: 1, 2003: 1, 2005: 1, 2008: 1}
effective way: {2000: 1, 2007: 1, 2015: 1, 2016: 1}
traditional techniques: {2000: 1, 2001: 1, 2002: 1, 2011: 1}
web interface: {2000: 2, 2009: 2}
input language: {2000: 4}
exponential complexity: {2000: 2, 2010: 2}
project team members: {2000: 2, 2012: 1, 2013: 1}
object oriented code: {2000: 2, 2005: 2}
automated verification: {2000: 2, 2005: 1, 2007: 1}
labeled transition systems: {2000: 2, 2009: 1, 2011: 1}
e-commerce systems: {2000: 1, 2008: 3}
remote procedure calls: {2000: 1, 2001: 1, 2002: 2}
cm system: {2000: 1, 2004: 3}
cellular radio: {2000: 1, 2001: 1, 2002: 1, 2003: 1}
reflective software engineering: {2000: 4}
personal computing: {2000: 1, 2005: 1, 2010: 2}
software professionals: {2000: 2, 2009: 1, 2013: 1}
system level: {2000: 2, 2004: 2}
black-box testing: {2000: 1, 2011: 1, 2016: 2}
dynamic metrics: {2000: 2, 2003: 2}
past projects: {2000: 2, 2012: 1, 2015: 1}
new projects: {2000: 1, 2012: 1, 2013: 1, 2015: 1}
work processes: {2000: 2, 2013: 1, 2015: 1}
code level: {2000: 1, 2012: 2, 2013: 1}
control structures: {2000: 1, 2012: 1, 2015: 2}
composing components: {2000: 1, 2003: 1, 2004: 1, 2013: 1}
trace analysis: {2000: 2, 2011: 2}
stand-alone tools: {2000: 2, 2001: 2}
encouraging results: {2000: 1, 2010: 1, 2013: 1, 2016: 1}
requirements traceability: {2000: 1, 2011: 2, 2012: 1}
file organization: {2001: 2, 2008: 2}
object-oriented design patterns: {2001: 2, 2004: 2}
medical software: {2001: 2, 2008: 2}
free software: {2001: 1, 2012: 1, 2013: 2}
core system: {2001: 3, 2009: 1}
multivalued logic: {2001: 2, 2003: 1, 2004: 1}
three factors: {2001: 1, 2016: 3}
peer reviews: {2001: 1, 2002: 2, 2008: 1}
context-dependent coordination: {2001: 4}
coordination activities: {2001: 2, 2009: 2}
large scale systems: {2001: 1, 2010: 1, 2013: 2}
step analyzer: {2001: 4}
initial model: {2001: 1, 2007: 1, 2011: 1, 2013: 1}
architecture-centric approach: {2001: 2, 2015: 2}
large-scale case study: {2001: 2, 2009: 1, 2010: 1}
cost benefit analysis method: {2001: 2, 2003: 2}
first part: {2001: 1, 2004: 1, 2010: 1, 2013: 1}
traceability information: {2001: 2, 2011: 1, 2013: 1}
software architecture research: {2001: 4}
potential benefits: {2001: 1, 2009: 1, 2012: 1, 2015: 1}
java beans: {2001: 2, 2002: 2}
software development artifacts: {2001: 1, 2002: 1, 2007: 1, 2011: 1}
true value: {2001: 2, 2002: 1, 2005: 1}
40 %: {2001: 1, 2004: 1, 2012: 1, 2017: 1}
processes tools: {2001: 1, 2010: 1, 2011: 1, 2015: 1}
design intent: {2001: 1, 2002: 1, 2011: 2}
object-oriented analysis: {2001: 2, 2002: 2}
networked systems: {2001: 2, 2013: 2}
additional information: {2001: 1, 2002: 1, 2009: 2}
usage information: {2001: 2, 2011: 2}
state machine: {2001: 1, 2003: 1, 2010: 2}
transient analysis: {2001: 1, 2011: 2, 2013: 1}
graphical models: {2001: 1, 2008: 3}
delay effects: {2001: 1, 2002: 1, 2003: 1, 2012: 1}
tool developers: {2001: 2, 2007: 1, 2013: 1}
open challenge: {2001: 1, 2013: 1, 2015: 2}
statistical significance: {2001: 1, 2005: 1, 2009: 1, 2011: 1}
introductory courses: {2001: 2, 2013: 2}
component behavior: {2001: 2, 2002: 1, 2012: 1}
limited resources: {2001: 1, 2011: 1, 2012: 1, 2013: 1}
next version: {2001: 2, 2003: 1, 2008: 1}
communication system security: {2001: 1, 2004: 1, 2008: 2}
much attention: {2002: 1, 2005: 1, 2012: 2}
system behavior: {2002: 3, 2017: 1}
software changes: {2002: 1, 2004: 1, 2012: 2}
significant effort: {2002: 1, 2011: 2, 2016: 1}
gui programs: {2002: 4}
software bugs: {2002: 1, 2009: 1, 2011: 1, 2013: 1}
programming errors: {2002: 1, 2011: 1, 2013: 2}
online data sources: {2002: 4}
dynamic data feeds: {2002: 4}
dynamic web applications: {2002: 2, 2013: 1, 2015: 1}
critical components: {2002: 1, 2003: 1, 2004: 1, 2011: 1}
implementation details: {2002: 3, 2007: 1}
industrial environment: {2002: 1, 2009: 1, 2010: 2}
language independent: {2002: 1, 2004: 1, 2005: 1, 2017: 1}
shared memory systems: {2002: 1, 2011: 1, 2012: 1, 2016: 1}
library code: {2002: 2, 2009: 2}
collaborative software engineering: {2002: 2, 2011: 1, 2013: 1}
technical factors: {2002: 1, 2011: 3}
' experiences: {2002: 1, 2012: 1, 2015: 2}
development work: {2002: 1, 2012: 3}
international standards: {2002: 2, 2007: 2}
simple object access protocol: {2002: 1, 2009: 1, 2010: 1, 2012: 1}
current approaches: {2002: 1, 2011: 1, 2015: 1, 2017: 1}
home appliances: {2002: 1, 2003: 2, 2007: 1}
enterprise java beans: {2002: 1, 2003: 3}
research papers: {2002: 1, 2003: 2, 2015: 1}
two aspects: {2002: 1, 2012: 2, 2017: 1}
rational unified process: {2002: 1, 2003: 2, 2005: 1}
parallel program design language: {2002: 2, 2004: 2}
aspect models: {2002: 3, 2011: 1}
fault model: {2002: 2, 2011: 2}
industrial partner: {2003: 1, 2010: 1, 2012: 1, 2017: 1}
data flow graphs: {2003: 1, 2008: 2, 2013: 1}
learning theory: {2003: 2, 2015: 2}
software configuration: {2003: 1, 2012: 2, 2017: 1}
data compression: {2003: 1, 2004: 3}
thorough understanding: {2003: 1, 2012: 1, 2013: 1, 2015: 1}
computer game: {2003: 2, 2016: 2}
scientific word processor: {2003: 4}
design recovery tool: {2003: 4}
research demonstration: {2003: 1, 2004: 1, 2011: 2}
dynamic slicing algorithms: {2003: 1, 2004: 3}
goal-oriented requirements engineering: {2003: 1, 2009: 1, 2012: 2}
state-of-the-art techniques: {2003: 1, 2013: 1, 2016: 1, 2017: 1}
interaction analysis: {2003: 2, 2005: 1, 2013: 1}
many fields: {2003: 1, 2005: 1, 2015: 1, 2016: 1}
educational administrative data processing: {2003: 3, 2015: 1}
process simulation: {2003: 1, 2011: 3}
future research directions: {2003: 2, 2010: 2}
particular interest: {2003: 1, 2004: 1, 2007: 1, 2013: 1}
frequency estimation: {2003: 1, 2004: 1, 2009: 1, 2010: 1}
agile software development methods: {2003: 4}
individual contribution: {2003: 3, 2013: 1}
programming models: {2003: 1, 2005: 2, 2010: 1}
complex software: {2003: 1, 2004: 1, 2015: 2}
agile approaches: {2003: 1, 2004: 1, 2012: 1, 2013: 1}
accepted papers: {2003: 1, 2013: 1, 2015: 2}
program committee: {2003: 1, 2005: 1, 2013: 1, 2015: 1}
in-depth understanding: {2003: 1, 2008: 1, 2010: 2}
many years: {2003: 1, 2005: 2, 2012: 1}
high assurance systems: {2003: 2, 2011: 1, 2015: 1}
intrusion detection: {2003: 2, 2009: 1, 2017: 1}
dynamic software visualization: {2003: 2, 2005: 2}
practical approach: {2003: 1, 2012: 3}
business logic: {2003: 1, 2004: 2, 2013: 1}
development communities: {2003: 1, 2013: 1, 2015: 2}
program specification: {2003: 1, 2007: 1, 2008: 1, 2015: 1}
languages tools: {2004: 1, 2009: 1, 2010: 1, 2011: 1}
qos requirements: {2004: 1, 2016: 3}
biology computing: {2004: 1, 2007: 1, 2009: 1, 2012: 1}
novel way: {2004: 1, 2007: 1, 2013: 1, 2016: 1}
real-time constraints: {2004: 2, 2010: 2}
technical challenges: {2004: 1, 2007: 1, 2012: 1, 2016: 1}
c# language: {2004: 1, 2005: 1, 2009: 1, 2013: 1}
several types: {2004: 1, 2012: 1, 2013: 2}
data encapsulation: {2004: 1, 2007: 1, 2011: 1, 2013: 1}
design decision: {2004: 1, 2010: 2, 2011: 1}
size complexity: {2004: 1, 2008: 2, 2011: 1}
15 %: {2004: 1, 2016: 2, 2017: 1}
search-based testing: {2004: 2, 2010: 2}
state explosion problem: {2004: 1, 2011: 1, 2012: 2}
various techniques: {2004: 1, 2012: 2, 2016: 1}
formal games: {2004: 4}
face-to-face communication: {2004: 2, 2012: 2}
second part: {2004: 1, 2008: 1, 2010: 1, 2013: 1}
np-complete problem: {2004: 3, 2008: 1}
java class: {2004: 1, 2008: 2, 2010: 1}
requirements engineers: {2004: 1, 2012: 2, 2013: 1}
component size: {2004: 2, 2005: 1, 2013: 1}
potential usefulness: {2004: 1, 2010: 1, 2016: 1, 2017: 1}
solid foundation: {2004: 1, 2011: 1, 2012: 2}
automated generation: {2004: 1, 2007: 1, 2012: 2}
integer programming: {2004: 1, 2009: 1, 2012: 1, 2013: 1}
integer linear programming: {2004: 1, 2007: 1, 2009: 1, 2012: 1}
real world problem: {2004: 2, 2010: 2}
satellite data processing: {2004: 1, 2011: 1, 2013: 1, 2015: 1}
several times: {2005: 1, 2012: 1, 2013: 1, 2015: 1}
mozilla firefox: {2005: 2, 2013: 1, 2015: 1}
feature interaction problem: {2005: 3, 2007: 1}
introductory welcome message: {2005: 1, 2015: 1, 2016: 1, 2017: 1}
changing requirements: {2005: 4}
new tools: {2005: 2, 2008: 2}
data structure repair: {2005: 2, 2008: 1, 2010: 1}
proposed method: {2005: 1, 2009: 1, 2010: 1, 2011: 1}
decision-making process: {2005: 1, 2010: 2, 2015: 1}
optimization techniques: {2005: 1, 2007: 3}
code structure: {2005: 1, 2008: 2, 2012: 1}
density measurement: {2005: 1, 2008: 1, 2009: 1, 2017: 1}
code churn: {2005: 2, 2008: 1, 2015: 1}
configuration space: {2005: 1, 2013: 1, 2017: 2}
security-critical systems: {2005: 2, 2011: 1, 2013: 1}
software fault localization: {2005: 1, 2012: 3}
informed decisions: {2005: 1, 2013: 2, 2015: 1}
structured english grammar: {2005: 2, 2008: 2}
empirical assessment: {2005: 2, 2012: 2}
testing time: {2005: 1, 2016: 1, 2017: 2}
software engineering curricula: {2005: 3, 2012: 1}
software product quality: {2005: 1, 2012: 2, 2013: 1}
empirical findings: {2005: 1, 2007: 1, 2016: 2}
solo programming: {2005: 1, 2012: 2, 2013: 1}
several techniques: {2005: 1, 2008: 1, 2012: 2}
formal modelling: {2005: 2, 2008: 2}
peer review: {2005: 1, 2008: 2, 2011: 1}
recent survey: {2005: 1, 2012: 1, 2013: 2}
engineering education: {2005: 2, 2007: 1, 2013: 1}
significant challenges: {2005: 1, 2011: 1, 2012: 2}
assessment tool: {2005: 2, 2015: 2}
project-specific process: {2005: 4}
early phases: {2005: 1, 2010: 1, 2011: 1, 2013: 1}
functional requirement: {2005: 1, 2010: 2, 2011: 1}
test selection: {2005: 3, 2007: 1}
safety-critical system: {2005: 1, 2012: 1, 2013: 2}
fujaba real-time tool suite: {2005: 2, 2007: 1, 2009: 1}
secure software: {2005: 2, 2012: 1, 2013: 1}
program assertions: {2007: 1, 2010: 2, 2016: 1}
failing tests: {2007: 2, 2009: 2}
open source programs: {2007: 1, 2013: 2, 2016: 1}
runtime performance: {2007: 1, 2010: 1, 2011: 1, 2017: 1}
aspect candidates: {2007: 4}
join points: {2007: 4}
automated approach: {2007: 1, 2008: 1, 2015: 1, 2017: 1}
existing ones: {2007: 1, 2009: 2, 2012: 1}
clone detection tool: {2007: 2, 2013: 2}
systematic evaluation: {2007: 1, 2008: 2, 2012: 1}
multithreaded software: {2007: 1, 2010: 2, 2011: 1}
api changes: {2007: 1, 2008: 1, 2011: 2}
fragmented nature: {2007: 1, 2009: 1, 2010: 2}
different locations: {2007: 1, 2010: 2, 2011: 1}
different degrees: {2007: 1, 2008: 1, 2010: 1, 2015: 1}
open-source software: {2007: 2, 2012: 1, 2016: 1}
gui events: {2007: 1, 2013: 2, 2017: 1}
java libraries: {2007: 1, 2011: 1, 2015: 2}
nlp techniques: {2007: 1, 2017: 3}
computational science: {2007: 1, 2011: 1, 2013: 1, 2015: 1}
software development companies: {2007: 2, 2012: 1, 2017: 1}
measurement concept: {2007: 4}
control engineering computing: {2007: 1, 2011: 1, 2015: 2}
search engine: {2007: 1, 2010: 1, 2011: 2}
software company: {2007: 1, 2011: 1, 2012: 2}
learning process: {2007: 1, 2017: 3}
close collaboration: {2007: 1, 2011: 1, 2012: 2}
group work: {2007: 1, 2015: 3}
eclipse plug-in tool: {2007: 2, 2009: 2}
input validation: {2008: 2, 2012: 1, 2013: 1}
source locations: {2008: 1, 2013: 3}
various approaches: {2008: 3, 2015: 1}
finite state automaton: {2008: 2, 2013: 2}
usage pattern: {2008: 1, 2012: 3}
random number generation: {2008: 1, 2016: 3}
empirical case study: {2008: 1, 2012: 2, 2013: 1}
cross-site scripting: {2008: 2, 2009: 1, 2012: 1}
string analysis: {2008: 2, 2011: 1, 2012: 1}
static detection: {2008: 1, 2011: 1, 2012: 1, 2015: 1}
eclipse project: {2008: 2, 2012: 2}
test-suite reduction: {2008: 4}
fault-localization techniques: {2008: 4}
runtime verification: {2008: 1, 2010: 1, 2012: 1, 2015: 1}
atomic sets: {2008: 1, 2013: 3}
concrete execution: {2008: 1, 2010: 2, 2013: 1}
fine-grained extensions: {2008: 4}
semantic clones: {2008: 2, 2011: 2}
test effectiveness: {2008: 2, 2012: 1, 2017: 1}
fit tables: {2008: 4}
query languages: {2008: 1, 2010: 1, 2011: 1, 2013: 1}
important issues: {2008: 1, 2011: 1, 2012: 1, 2015: 1}
new generation: {2008: 1, 2011: 1, 2012: 1, 2015: 1}
low level: {2008: 1, 2010: 2, 2013: 1}
natural language information: {2008: 4}
recommendation system: {2008: 2, 2015: 2}
model synthesis: {2008: 1, 2012: 2, 2016: 1}
important information: {2008: 1, 2009: 1, 2013: 1, 2017: 1}
requirement models: {2008: 2, 2012: 2}
windows vista: {2008: 2, 2009: 2}
network analysis: {2008: 2, 2012: 2}
production engineering computing: {2008: 2, 2011: 2}
control algorithm: {2008: 4}
healthcare software systems: {2008: 4}
software release: {2008: 1, 2012: 2, 2013: 1}
architecture evaluation: {2008: 2, 2010: 1, 2011: 1}
concurrent software: {2008: 2, 2010: 2}
core competence: {2008: 2, 2010: 1, 2011: 1}
model-driven software development: {2008: 1, 2011: 1, 2013: 2}
code transformation: {2008: 1, 2013: 2, 2017: 1}
software engineering field: {2008: 1, 2011: 1, 2012: 1, 2015: 1}
program heap: {2008: 2, 2011: 2}
program entities: {2009: 2, 2012: 1, 2017: 1}
context-sensitive analysis: {2009: 4}
sql injection: {2009: 2, 2012: 1, 2013: 1}
query reformulation: {2009: 1, 2013: 3}
classification algorithms: {2009: 1, 2011: 1, 2012: 1, 2016: 1}
inductive learning: {2009: 2, 2012: 1, 2015: 1}
logic rules: {2009: 2, 2010: 2}
textual differences: {2009: 1, 2010: 2, 2011: 1}
' needs: {2009: 1, 2011: 1, 2015: 2}
string-taint analysis: {2009: 4}
hard-coded constant strings: {2009: 4}
delta debugging: {2009: 1, 2012: 3}
novel combination: {2009: 1, 2012: 1, 2013: 1, 2016: 1}
test engineers: {2009: 2, 2012: 1, 2013: 1}
worst-case inputs: {2009: 4}
/sub >: {2009: 1, 2012: 3}
project performance: {2009: 1, 2015: 3}
user evaluation: {2009: 2, 2011: 1, 2013: 1}
large quantities: {2009: 1, 2011: 3}
large corpus: {2009: 1, 2015: 1, 2016: 1, 2017: 1}
context awareness: {2009: 1, 2010: 1, 2012: 2}
external services: {2009: 1, 2011: 2, 2012: 1}
adaptation process: {2009: 2, 2013: 2}
performance modeling: {2010: 3, 2012: 1}
storage virtualization: {2010: 4}
software configuration management system: {2010: 4}
smart spaces: {2010: 3, 2015: 1}
code smell detection: {2010: 1, 2012: 1, 2015: 2}
industrial partners: {2010: 1, 2013: 2, 2016: 1}
program obfuscation: {2010: 1, 2017: 3}
program semantics: {2010: 1, 2013: 1, 2016: 2}
game development: {2010: 1, 2011: 2, 2015: 1}
's needs: {2010: 1, 2011: 1, 2013: 2}
target location: {2010: 3, 2017: 1}
multiple layers: {2010: 1, 2011: 2, 2017: 1}
long period: {2010: 1, 2011: 1, 2013: 1, 2017: 1}
web-based tool: {2010: 2, 2011: 2}
software maintenance activities: {2010: 1, 2012: 2, 2013: 1}
prediction results: {2010: 1, 2015: 3}
multi-core processors: {2010: 1, 2011: 1, 2013: 2}
much research: {2010: 1, 2011: 1, 2012: 1, 2015: 1}
fundamental activity: {2010: 2, 2011: 1, 2013: 1}
cooperative aspects: {2010: 1, 2011: 1, 2013: 1, 2015: 1}
meeting place: {2010: 1, 2011: 1, 2013: 1, 2015: 1}
office tools: {2010: 1, 2011: 3}
green it: {2010: 1, 2011: 1, 2013: 1, 2015: 1}
runtime adaptation: {2010: 3, 2015: 1}
user data: {2010: 1, 2011: 1, 2012: 2}
emerging trends: {2010: 1, 2011: 1, 2013: 2}
low impact: {2010: 1, 2011: 1, 2013: 1, 2015: 1}
current software development: {2010: 1, 2011: 1, 2013: 1, 2015: 1}
london ambulance service: {2010: 2, 2016: 2}
multicore processors: {2010: 1, 2011: 1, 2012: 1, 2013: 1}
industrial practices: {2010: 2, 2013: 1, 2015: 1}
ieee computer society: {2010: 1, 2011: 2, 2013: 1}
se research: {2010: 1, 2015: 3}
combinatorial interaction testing: {2010: 1, 2012: 1, 2016: 2}
input data: {2010: 1, 2012: 1, 2016: 1, 2017: 1}
lean software development: {2010: 1, 2017: 3}
mining software engineering data: {2010: 4}
software engineering data: {2010: 2, 2012: 1, 2015: 1}
concurrent program traces: {2011: 4}
natural language description: {2011: 2, 2012: 1, 2013: 1}
google code search: {2011: 4}
code search: {2011: 1, 2012: 1, 2013: 1, 2016: 1}
relevant functions: {2011: 4}
build systems: {2011: 2, 2015: 1, 2017: 1}
load imbalance: {2011: 4}
possible interleavings: {2011: 4}
three phases: {2011: 1, 2015: 2, 2017: 1}
developer network: {2011: 3, 2017: 1}
spl behaviour: {2011: 2, 2012: 2}
smt solver: {2011: 2, 2012: 1, 2013: 1}
satisfiability modulo theories: {2011: 2, 2013: 2}
similar contexts: {2011: 2, 2012: 1, 2017: 1}
method calls: {2011: 1, 2012: 2, 2016: 1}
eclipse jdt: {2011: 3, 2013: 1}
three projects: {2011: 1, 2012: 2, 2013: 1}
composite service: {2011: 2, 2013: 2}
service-based applications: {2011: 1, 2012: 3}
dynamic language: {2011: 2, 2013: 2}
one another: {2011: 2, 2015: 1, 2016: 1}
problem identification: {2011: 3, 2016: 1}
two worlds: {2011: 1, 2012: 2, 2016: 1}
run-time errors: {2011: 2, 2013: 2}
software quality improvement: {2011: 2, 2013: 1, 2015: 1}
repertory grid: {2011: 4}
code orb: {2011: 4}
information and communication technology: {2011: 1, 2013: 1, 2015: 2}
scientific computing projects: {2011: 4}
software assurance: {2011: 3, 2013: 1}
research group: {2011: 1, 2012: 1, 2013: 1, 2015: 1}
software system maintenance: {2011: 1, 2012: 2, 2016: 1}
architecturally significant requirements: {2011: 2, 2016: 2}
diverse set: {2011: 1, 2015: 2, 2016: 1}
manual modifications: {2011: 3, 2012: 1}
tools and environments: {2011: 1, 2012: 3}
manual inspection: {2011: 1, 2012: 1, 2015: 1, 2017: 1}
software vulnerability: {2011: 1, 2013: 1, 2017: 2}
software usage: {2011: 3, 2015: 1}
environmental sustainability: {2011: 2, 2015: 2}
metamodel definitions: {2011: 4}
server side: {2011: 1, 2012: 1, 2013: 1, 2016: 1}
structural coverage: {2011: 2, 2013: 1, 2016: 1}
quality indicators: {2011: 1, 2016: 3}
source code search engines: {2011: 3, 2012: 1}
user experience: {2011: 1, 2013: 1, 2015: 1, 2017: 1}
1.x-way mapping: {2011: 2, 2012: 2}
less attention: {2011: 1, 2012: 1, 2015: 1, 2016: 1}
real world web applications: {2011: 2, 2012: 2}
base model: {2011: 1, 2012: 3}
cse software: {2011: 2, 2013: 2}
bug triage: {2012: 4}
bug repositories: {2012: 4}
imperative programming: {2012: 2, 2013: 1, 2015: 1}
microsoft windows: {2012: 2, 2015: 1, 2016: 1}
java projects: {2012: 1, 2013: 1, 2016: 1, 2017: 1}
search-based software testing: {2012: 1, 2015: 1, 2016: 1, 2017: 1}
bug prediction models: {2012: 1, 2013: 3}
file levels: {2012: 4}
buggy code: {2012: 2, 2016: 1, 2017: 1}
commit messages: {2012: 1, 2015: 3}
predicate-level statistical debuggers: {2012: 4}
template code: {2012: 4}
external resource: {2012: 4}
architectural tactics: {2012: 1, 2017: 3}
preliminary experiments: {2012: 2, 2015: 1, 2016: 1}
metadata invariants: {2012: 4}
obstacle analysis: {2012: 2, 2016: 2}
human effort: {2012: 1, 2013: 3}
state-of-the-art approach: {2012: 1, 2017: 3}
fault-finding effectiveness: {2012: 4}
unused code: {2012: 4}
psp education: {2012: 4}
paired students: {2012: 4}
system adaptation: {2012: 2, 2013: 2}
input sanitization: {2012: 2, 2017: 2}
online social networks: {2012: 4}
modern integrated development environments: {2012: 2, 2013: 2}
input events: {2012: 1, 2015: 3}
production code: {2012: 2, 2015: 2}
automatic test generation: {2012: 1, 2013: 1, 2016: 2}
graphics processing units: {2012: 2, 2015: 2}
application execution: {2012: 2, 2015: 2}
linked data: {2012: 4}
eclipse-based tool: {2012: 2, 2015: 2}
security testing: {2012: 2, 2015: 2}
prior research: {2012: 1, 2013: 1, 2015: 2}
pla design: {2012: 4}
complex networks: {2012: 2, 2013: 1, 2015: 1}
device b: {2012: 4}
core assets: {2012: 4}
actual usage: {2012: 1, 2013: 1, 2015: 1, 2016: 1}
identifier names: {2012: 1, 2016: 1, 2017: 2}
san francisco: {2013: 3, 2015: 1}
feature interactions: {2013: 3, 2015: 1}
strong specifications: {2013: 4}
dynamic profiling: {2013: 4}
end user: {2013: 3, 2015: 1}
developer behavior: {2013: 2, 2015: 2}
big data analytics: {2013: 2, 2015: 1, 2016: 1}
prediction models: {2013: 4}
frequency modulation: {2013: 2, 2015: 1, 2016: 1}
systematic edits: {2013: 4}
data-intensive software: {2013: 4}
service level agreements: {2013: 4}
static attributes: {2013: 4}
32 %: {2013: 1, 2015: 2, 2016: 1}
integer problems: {2013: 4}
study results: {2013: 3, 2015: 1}
recovery techniques: {2013: 1, 2015: 3}
reliable historical data: {2013: 4}
unsupervised learning: {2013: 1, 2015: 1, 2016: 1, 2017: 1}
interactive feedback: {2013: 4}
mixed-method approach: {2013: 2, 2015: 2}
teaching methods: {2013: 1, 2015: 3}
semantic smells: {2013: 4}
live programming: {2013: 3, 2015: 1}
explicit examples: {2013: 4}
' use: {2013: 2, 2015: 2}
java 8: {2013: 1, 2016: 1, 2017: 2}
configurable systems: {2013: 1, 2016: 2, 2017: 1}
model-transformation compositions: {2013: 4}
user nonrepudiation: {2013: 4}
software requirement patterns: {2013: 2, 2015: 2}
general theory: {2013: 3, 2015: 1}
general theories: {2013: 2, 2015: 2}
mobile-enabled systems: {2013: 4}
app stores: {2015: 4}
conceptual design: {2015: 4}
code repurposing: {2015: 4}
control group: {2015: 4}
social se: {2015: 4}
cognitive revolution: {2015: 4}
relative correctness: {2015: 4}
concurrency (computers): {2015: 2, 2016: 1, 2017: 1}
ide services: {2015: 4}
selective mutation testing: {2015: 4}
emergent behavior: {2015: 4}
static taint analysis: {2015: 1, 2016: 3}
android application: {2015: 3, 2016: 1}
software development security practices: {2015: 4}
agile project management: {2015: 4}
37th international conference: {2015: 4}
software protection: {2015: 4}
framework model: {2016: 4}
semantic features: {2016: 4}
tabulation styles: {2016: 4}
virtual devices: {2016: 4}
sampling algorithms: {2016: 4}
evidence-based dynamic analysis: {2016: 4}
concurrent tests: {2016: 1, 2017: 3}
default methods: {2017: 4}
malicious behavior: {2017: 4}
buggy program: {2017: 4}
security patches: {2017: 4}
software developments: {1988: 2, 1994: 1}
different programming languages: {1989: 2, 1992: 1}
resulting architecture: {1989: 1, 1999: 1, 2011: 1}
reuse library technology: {1990: 3}
reuse libraries: {1990: 1, 1999: 2}
hypertext systems: {1991: 1, 1989: 1, 1992: 1}
bruns model: {1991: 3}
system reliability: {1993: 1, 2002: 1, 2004: 1}
task interaction: {1995: 1, 1989: 2}
compact representation: {1995: 1, 2011: 1, 2012: 1}
individual components: {1996: 1, 2004: 1, 2008: 1}
two ideas: {1996: 1, 2003: 2}
's value: {1998: 1, 1999: 2}
multi-site development: {1999: 2, 2001: 1}
i.e. integration: {1999: 1, 2013: 1, 2015: 1}
medical image processing: {2000: 1, 2008: 1, 2017: 1}
family architecture: {2000: 2, 1998: 1}
medical imaging product family: {2000: 3}
architectural approach: {2000: 2, 1996: 1}
particular kind: {2000: 1, 2008: 1, 2017: 1}
software library: {2001: 2, 2004: 1}
simple idea: {2001: 1, 1993: 1, 2000: 1}
emerging paradigm: {2003: 1, 2004: 1, 2007: 1}
several challenges: {2003: 2, 2011: 1}
software-based systems: {2005: 2, 2011: 1}
battery powered vehicles: {2005: 1, 2000: 2}
architecture-based management systems: {2008: 3}
reflective component models: {2008: 3}
fault prediction: {2009: 1, 2010: 1, 2013: 1}
defect content estimation: {2010: 2, 2002: 1}
relative error: {2010: 1, 1998: 1, 2003: 1}
optimized production technology: {2011: 1, 2007: 1, 2013: 1}
systems architecture: {2015: 1, 2013: 1, 2017: 1}
modern software development: {2015: 1, 2002: 1, 2013: 1}
different ways: {2015: 1, 1998: 1, 2008: 1}
intended architecture: {2015: 2, 2010: 1}
practical applicability: {2015: 1, 2011: 1, 2016: 1}
privacy policies: {2016: 3}
top-down strategy: {1988: 2, 1995: 1}
flexible mechanism: {1988: 2, 2000: 1}
virtual manufacturing: {1988: 1, 1999: 1, 2007: 1}
extension mechanism: {1988: 2, 2009: 1}
actual program: {1988: 3}
intended program: {1988: 3}
language support: {1988: 2, 2000: 1}
performance prediction: {1988: 1, 2010: 1, 2011: 1}
software engineering environments: {1988: 1, 1995: 1, 1999: 1}
current version: {1988: 1, 2007: 1, 2012: 1}
mutant programs: {1988: 3}
air traffic control: {1988: 1, 2003: 2}
graph model: {1988: 3}
difficult problems: {1988: 1, 2011: 1, 2012: 1}
automated highways: {1988: 1, 1996: 1, 1997: 1}
specification design: {1988: 1, 1990: 2}
large software projects: {1988: 1, 2005: 1, 2013: 1}
combined use: {1988: 1, 2001: 1, 2017: 1}
c programming: {1988: 1, 2016: 2}
program changes: {1988: 1, 2007: 1, 2009: 1}
intersymbol interference: {1988: 1, 1990: 1, 2001: 1}
requirements analysis process: {1988: 1, 2002: 2}
parallel hardware: {1988: 2, 2012: 1}
interactive software: {1988: 2, 2003: 1}
design documentation: {1988: 1, 2016: 2}
logical relationships: {1988: 1, 2001: 2}
energy management: {1988: 1, 2005: 1, 2009: 1}
microcomputer applications: {1988: 2, 2001: 1}
software designer: {1988: 1, 1989: 1, 2015: 1}
applicative expression: {1988: 3}
carnegie-mellon university: {1988: 2, 2015: 1}
formal specification techniques: {1988: 2, 1994: 1}
software partition: {1988: 3}
resource utilization: {1988: 2, 2010: 1}
core algorithm: {1988: 2, 2013: 1}
large part: {1988: 1, 2000: 1, 2007: 1}
multiple tasks: {1988: 2, 2007: 1}
robot programming: {1988: 1, 2005: 1, 2015: 1}
incremental construction: {1988: 2, 1996: 1}
model parameters: {1989: 1, 1994: 1, 2017: 1}
program modularity: {1989: 1, 2011: 2}
slice profiles: {1989: 3}
output variables: {1989: 1, 1993: 2}
increasing popularity: {1989: 1, 2012: 1, 2013: 1}
coding practice: {1989: 1, 2011: 2}
performance engineering: {1989: 2, 2010: 1}
concurrent tasks: {1989: 1, 1990: 2}
business process re-engineering: {1989: 1, 1999: 1, 2008: 1}
page description languages: {1989: 1, 1994: 1, 2001: 1}
architecture design: {1989: 1, 1999: 1, 2004: 1}
's requirements: {1989: 1, 1998: 1, 2013: 1}
tool builders: {1989: 1, 1998: 1, 1999: 1}
dynamic systems: {1989: 1, 2015: 2}
natural way: {1989: 1, 1998: 1, 2005: 1}
recent empirical studies: {1989: 1, 2015: 2}
several tools: {1989: 1, 2010: 1, 2015: 1}
design alternatives: {1989: 1, 2010: 1, 2011: 1}
application domain knowledge: {1990: 3}
multiple applications: {1990: 2, 2010: 1}
object-oriented technology: {1990: 1, 1998: 1, 2000: 1}
ada process model: {1990: 3}
's success: {1990: 1, 2015: 2}
demonstration-based approach: {1990: 1, 2011: 2}
rule-based approach: {1990: 1, 1993: 2}
simulation engine: {1990: 3}
requirement specifications: {1990: 2, 2000: 1}
digital signal processing: {1990: 1, 2003: 1, 2015: 1}
asynchronous transfer mode: {1990: 1, 1996: 2}
prototyping effort: {1990: 1, 1993: 2}
critical role: {1990: 1, 2011: 1, 2013: 1}
modular construction: {1990: 1, 1991: 1, 2000: 1}
conditional equations: {1990: 3}
large class: {1990: 1, 2001: 1, 2005: 1}
specification process: {1990: 2, 2011: 1}
formal proofs: {1990: 1, 1998: 2}
evolution transformations: {1990: 3}
technology receptor group: {1990: 3}
new methods: {1990: 1, 1998: 1, 2000: 1}
cost-effective manner: {1990: 1, 2008: 1, 2013: 1}
product groups: {1990: 3}
close cooperation: {1990: 1, 2003: 1, 2008: 1}
individual objects: {1990: 1, 2005: 1, 2008: 1}
software requirements specification: {1990: 1, 2010: 2}
design techniques: {1990: 1, 2003: 1, 2008: 1}
particular emphasis: {1990: 1, 2005: 1, 2015: 1}
graph structure: {1990: 3}
important concerns: {1990: 1, 2005: 1, 2010: 1}
wide spectrum: {1990: 1, 2009: 1, 2013: 1}
functional specifications: {1990: 2, 2004: 1}
given specification: {1990: 1, 2015: 2}
declarative description: {1990: 1, 2011: 2}
software assets: {1990: 1, 2011: 2}
computer-aided software engineering: {1990: 2, 2011: 1}
reverse engineering process: {1990: 1, 1995: 1, 2004: 1}
unified type model: {1990: 3}
logical framework: {1990: 2, 2000: 1}
formal models: {1990: 1, 1995: 1, 2015: 1}
phase measurement: {1990: 1, 1997: 1, 2003: 1}
actual projects: {1990: 1, 1996: 2}
lisp machines: {1991: 2, 2013: 1}
monte carlo simulation: {1991: 1, 2013: 1, 2016: 1}
computer system design: {1991: 3}
power generation economics: {1991: 1, 1994: 1, 1999: 1}
error correction codes: {1991: 1, 2000: 1, 2007: 1}
panel discussion: {1991: 2, 2002: 1}
software engineering profession: {1991: 1, 1994: 2}
nontechnological issues: {1991: 3}
change structure: {1991: 3}
dependency structure: {1991: 3}
language semantics: {1991: 1, 2008: 1, 2010: 1}
industrial application: {1991: 1, 2012: 1, 2015: 1}
telecommunication network management: {1991: 1, 2003: 2}
proper decomposition: {1991: 2, 2009: 1}
practical method: {1991: 1, 1993: 1, 2013: 1}
's performance: {1991: 1, 2005: 1, 2008: 1}
several levels: {1991: 1, 2002: 1, 2008: 1}
's viewpoint: {1991: 3}
aerospace testing: {1991: 1, 1994: 1, 2008: 1}
integrated environment: {1991: 2, 2003: 1}
bug location: {1991: 1, 2004: 2}
management failure: {1991: 3}
full range: {1991: 1, 2000: 1, 2013: 1}
distributed architectures: {1991: 2, 2002: 1}
language interface: {1991: 2, 2000: 1}
current work: {1991: 1, 2002: 1, 2003: 1}
architectural principles: {1991: 1, 1994: 2}
feedback systems: {1991: 3}
information access: {1991: 2, 2013: 1}
conceptual framework: {1991: 2, 2015: 1}
end product: {1991: 1, 1998: 1, 2015: 1}
ethical considerations: {1991: 2, 2015: 1}
space shuttles: {1991: 1, 1999: 1, 2001: 1}
preliminary assessment: {1991: 1, 2011: 2}
cooperative work: {1991: 1, 1994: 2}
social interactions: {1991: 1, 2015: 2}
real-time properties: {1992: 1, 2005: 1, 2008: 1}
requirements development: {1992: 1, 2001: 2}
power sector: {1992: 3}
main reasons: {1992: 1, 2013: 1, 2015: 1}
critical component: {1992: 1, 1994: 1, 2015: 1}
test results: {1992: 1, 2000: 1, 2015: 1}
different components: {1992: 1, 2000: 1, 2015: 1}
visual databases: {1992: 1, 2007: 1, 2011: 1}
two problems: {1992: 1, 2003: 1, 2012: 1}
automated teller machine: {1992: 1, 1996: 2}
graphical interval logic: {1992: 2, 1997: 1}
parallel algorithms: {1992: 1, 2013: 1, 2016: 1}
pv method: {1992: 3}
assertion methods: {1992: 1, 2011: 2}
process programming: {1992: 2, 1997: 1}
resource usage: {1992: 3}
code analysis tools: {1992: 1, 2011: 2}
polynomial time: {1992: 1, 2012: 2}
important aspects: {1992: 1, 1998: 1, 2001: 1}
two main factors: {1992: 1, 2005: 1, 2012: 1}
software estimation: {1992: 3}
program dependence graphs: {1992: 1, 2008: 1, 2012: 1}
subspace constraints: {1992: 1, 2008: 1, 2017: 1}
several years: {1993: 1, 1996: 1, 1999: 1}
business application domain: {1993: 2, 1999: 1}
traditional approach: {1993: 1, 2003: 1, 2011: 1}
first-order logic: {1993: 2, 2017: 1}
high level language: {1993: 3}
top-down approach: {1993: 2, 2015: 1}
scenario-driven approach: {1993: 2, 2001: 1}
interconnected systems: {1993: 1, 1998: 1, 2001: 1}
attribute focusing: {1993: 3}
alternative solutions: {1993: 1, 2013: 1, 2016: 1}
system engineering: {1993: 1, 1997: 1, 2008: 1}
testing strategies: {1993: 2, 2004: 1}
and/or operators: {1993: 3}
preliminary experimental results: {1993: 1, 2011: 1, 2015: 1}
computational reflection: {1993: 1, 2010: 2}
small portion: {1993: 1, 2011: 1, 2016: 1}
c/sub 2/: {1993: 3}
group discussion: {1993: 3}
selected papers: {1993: 1, 2002: 1, 2015: 1}
fault hypothesis: {1993: 3}
automatic identification: {1993: 2, 2015: 1}
given program: {1993: 1, 1996: 1, 2015: 1}
example scenarios: {1993: 1, 2000: 2}
algorithm animation: {1993: 3}
computational efficiency: {1993: 1, 1994: 1, 2008: 1}
two models: {1993: 1, 1999: 1, 2017: 1}
significant improvements: {1993: 1, 1994: 1, 2012: 1}
critical analysis: {1993: 1, 2013: 1, 2015: 1}
different projects: {1993: 1, 2010: 1, 2017: 1}
reuse repository: {1993: 2, 2002: 1}
fuzzy set theory: {1993: 1, 2011: 1, 2017: 1}
packaging machines: {1993: 1, 1998: 1, 2007: 1}
test coverage measurement: {1993: 3}
component generators: {1993: 3}
component descriptions: {1993: 3}
knowledge-based software engineering: {1993: 2, 1994: 1}
telephone systems: {1993: 1, 1999: 2}
test path selection criteria: {1993: 3}
interprocedural data flow dependencies: {1993: 3}
structural testing: {1993: 2, 1996: 1}
accurate representation: {1993: 2, 1999: 1}
selective retesting: {1994: 3}
change information: {1994: 1, 2010: 2}
program modification: {1994: 3}
three types: {1994: 1, 2007: 1, 2009: 1}
two main reasons: {1994: 1, 1995: 1, 2005: 1}
team-oriented approach: {1994: 2, 2001: 1}
process-centered software engineering environments: {1994: 2, 2011: 1}
software architecture investments: {1994: 3}
coverage criteria: {1994: 2, 2013: 1}
faulty program: {1994: 1, 2017: 2}
high level design: {1994: 1, 2000: 2}
schedule overruns: {1994: 2, 2012: 1}
requirements modeling: {1994: 2, 2011: 1}
systematic software reuse: {1994: 1, 2002: 1, 2005: 1}
building systems: {1994: 1, 2004: 2}
individual descriptions: {1994: 3}
support system: {1994: 1, 1995: 2}
many software systems: {1994: 1, 1999: 1, 2013: 1}
engineering discipline: {1994: 2, 2005: 1}
programming theory: {1994: 2, 2000: 1}
small businesses: {1994: 3}
small software organization: {1994: 1, 1998: 2}
research career: {1994: 1, 2003: 2}
industrial problems: {1994: 2, 1996: 1}
concrete examples: {1994: 1, 2002: 2}
abstraction levels: {1994: 1, 1996: 1, 2013: 1}
protocol analysis: {1994: 2, 2008: 1}
basic lotos: {1994: 2, 1995: 1}
design activities: {1994: 1, 2000: 1, 2007: 1}
educational processes: {1994: 2, 2015: 1}
concept lattice: {1994: 1, 2004: 2}
behavioral analysis: {1994: 1, 2007: 2}
design maintenance: {1994: 1, 2004: 2}
reuse problem: {1994: 3}
product family: {1994: 1, 2000: 1, 2004: 1}
design tradeoffs: {1995: 1, 1996: 1, 2001: 1}
program reliability: {1995: 1, 2011: 2}
computer technology: {1995: 1, 2015: 2}
assessment methods: {1995: 2, 2008: 1}
quality improvement paradigm: {1995: 1, 1997: 1, 2000: 1}
action plan: {1995: 3}
in-depth analysis: {1995: 1, 1998: 1, 2001: 1}
organizational context: {1995: 2, 2003: 1}
one technique: {1995: 1, 1996: 1, 2005: 1}
ad model: {1995: 3}
different viewpoints: {1995: 2, 2002: 1}
existing parts: {1995: 1, 2001: 1, 2002: 1}
software composition: {1995: 1, 1998: 2}
design level: {1995: 1, 2013: 1, 2015: 1}
design phase: {1995: 1, 2003: 2}
esprit project: {1995: 1, 1998: 2}
derived information: {1995: 3}
concurrent software engineering: {1995: 1, 1997: 1, 2015: 1}
prototype environment: {1995: 1, 1996: 2}
experimental approach: {1995: 1, 2007: 1, 2011: 1}
key aspect: {1995: 1, 1999: 1, 2013: 1}
inter-component communication: {1995: 1, 2004: 2}
different approaches: {1995: 1, 2011: 1, 2013: 1}
poles and towers: {1996: 1, 2000: 1, 2001: 1}
product tower: {1996: 3}
architecture language: {1996: 3}
reliability theory: {1996: 1, 1997: 1, 2001: 1}
module level: {1996: 1, 2012: 1, 2017: 1}
higher quality: {1996: 1, 2000: 1, 2002: 1}
predictive effort model: {1996: 3}
next release: {1996: 1, 2012: 1, 2013: 1}
flight dynamics division: {1996: 1, 1998: 2}
similar results: {1996: 1, 2000: 1, 2012: 1}
software selection: {1996: 2, 2011: 1}
compositional reachability analysis: {1996: 3}
evolutionary change: {1996: 2, 2011: 1}
safety property violation: {1996: 1, 2004: 2}
desert environment: {1996: 3}
sub model: {1996: 3}
composition operators: {1996: 2, 2004: 1}
communication mechanism: {1996: 2, 2004: 1}
language features: {1996: 1, 2001: 1, 2005: 1}
life cycle models: {1996: 2, 2005: 1}
feedback loops: {1996: 1, 2012: 2}
class libraries: {1996: 2, 2005: 1}
automated test data generation: {1996: 3}
cots selection: {1996: 1, 2000: 2}
key aspects: {1996: 1, 1999: 1, 2002: 1}
software engineering experiment: {1996: 2, 2000: 1}
main results: {1996: 1, 2007: 1, 2008: 1}
sensor systems: {1996: 1, 2001: 1, 2003: 1}
evolving software systems: {1996: 2, 2005: 1}
coding guidelines: {1996: 2, 1998: 1}
new way: {1996: 1, 2008: 1, 2012: 1}
industrial development: {1996: 1, 2008: 2}
major impact: {1996: 1, 2008: 1, 2015: 1}
experimental environment: {1996: 1, 2002: 1, 2012: 1}
incremental analyzer: {1996: 3}
demand-driven analyzer: {1996: 3}
demand-driven analysis: {1996: 2, 2009: 1}
euclidean distance: {1996: 2, 2007: 1}
automated software tool: {1996: 2, 2000: 1}
program failures: {1996: 1, 2009: 2}
fault revelation: {1996: 2, 2017: 1}
random variables: {1996: 1, 2013: 1, 2016: 1}
dynamic task nets: {1996: 3}
corrective action: {1996: 2, 1999: 1}
problem detection: {1996: 1, 2004: 1, 2013: 1}
minimum set: {1996: 1, 2013: 1, 2017: 1}
software architecture documentation: {1996: 1, 2003: 1, 2005: 1}
requirement change: {1996: 3}
trade-off analysis: {1996: 1, 2007: 1, 2011: 1}
formal foundation: {1996: 1, 2000: 2}
software prototypes: {1996: 2, 2013: 1}
quality data: {1996: 2, 1998: 1}
road vehicles: {1996: 2, 2015: 1}
project plan: {1996: 1, 1998: 1, 1999: 1}
highly interactive software systems: {1996: 2, 1998: 1}
machine vision: {1996: 1, 1999: 1, 2003: 1}
early stage: {1996: 1, 1999: 1, 2011: 1}
innovative systems: {1996: 1, 1998: 2}
scenario diagrams: {1996: 3}
dynamic scheduling: {1996: 1, 2001: 1, 2011: 1}
program understanding problem: {1996: 3}
tree data structures: {1996: 1, 2009: 1, 2012: 1}
abstract syntax tree: {1996: 2, 2015: 1}
medical information systems: {1996: 1, 2008: 1, 2012: 1}
broadband communication: {1997: 3}
ip networks: {1997: 1, 1999: 1, 2003: 1}
object-oriented modeling: {1997: 2, 2001: 1}
control charts: {1997: 1, 2004: 1, 2013: 1}
computational intelligence society: {1997: 1, 1998: 1, 1999: 1}
career development: {1997: 1, 2000: 2}
image analysis: {1997: 1, 2002: 1, 2009: 1}
differential equations: {1997: 1, 2001: 1, 2008: 1}
information filtering: {1997: 1, 2005: 1, 2008: 1}
copyright protection: {1997: 2, 2000: 1}
economic models: {1997: 1, 2001: 1, 2015: 1}
framework documentation: {1997: 1, 2002: 2}
authoring systems: {1997: 1, 2000: 1, 2003: 1}
signal processing: {1997: 1, 2002: 1, 2003: 1}
incremental process: {1997: 1, 1999: 1, 2002: 1}
release planning: {1997: 1, 2016: 2}
object oriented: {1997: 2, 2000: 1}
use case: {1997: 1, 2002: 1, 2016: 1}
telecommunication switching: {1997: 1, 2003: 2}
radio access networks: {1997: 2, 2008: 1}
separation of concerns: {1997: 1, 1999: 1, 2004: 1}
specification validation: {1997: 1, 2000: 2}
object oriented databases: {1997: 1, 2005: 1, 2008: 1}
domain engineering: {1997: 1, 1999: 1, 2000: 1}
classification tree analysis: {1997: 1, 2004: 1, 2008: 1}
discussion forums: {1997: 1, 2015: 2}
relation link: {1998: 3}
architectural modeling: {1998: 1, 1999: 1, 2005: 1}
two examples: {1998: 2, 2005: 1}
dynamic properties: {1998: 1, 2005: 2}
valuable insight: {1998: 1, 2010: 1, 2011: 1}
traffic control: {1998: 2, 1999: 1}
architectural descriptions: {1998: 1, 1999: 1, 2000: 1}
project members: {1998: 2, 2013: 1}
use case point method: {1998: 3}
correlation analysis: {1998: 1, 2012: 2}
commercial system: {1998: 1, 2009: 1, 2016: 1}
systematic application: {1998: 1, 2010: 1, 2013: 1}
status report: {1998: 2, 2001: 1}
process research: {1998: 3}
funsoft nets: {1998: 3}
software quality analysis: {1998: 2, 2009: 1}
development department: {1998: 1, 2001: 2}
development departments: {1998: 1, 1999: 2}
virtual environment: {1998: 2, 2015: 1}
virtual environments: {1998: 2, 2015: 1}
highly desirable: {1998: 1, 2003: 1, 2016: 1}
naturalization process: {1998: 3}
new language: {1998: 1, 2003: 1, 2004: 1}
individual techniques: {1998: 1, 2012: 1, 2015: 1}
multidimensional systems: {1998: 1, 2001: 1, 2008: 1}
telecommunication traffic: {1998: 1, 1999: 2}
network management: {1998: 2, 2003: 1}
agenda management: {1998: 1, 2000: 2}
distributed environments: {1998: 2, 1999: 1}
position measurement: {1998: 1, 2008: 1, 2013: 1}
four case studies: {1998: 1, 2000: 2}
natural language interfaces: {1998: 1, 2015: 2}
large-scale software development: {1998: 2, 2001: 1}
iterative process enaction: {1998: 3}
first contribution: {1998: 1, 2016: 2}
many kinds: {1998: 1, 2000: 1, 2008: 1}
initial studies: {1998: 1, 2000: 1, 2013: 1}
large amount: {1998: 1, 2007: 1, 2017: 1}
electronics industry: {1998: 1, 2000: 1, 2004: 1}
two experiments: {1998: 1, 2003: 1, 2007: 1}
overall cost: {1998: 1, 2004: 1, 2010: 1}
' productivity: {1998: 1, 2007: 1, 2015: 1}
commercial spreadsheets: {1998: 2, 2002: 1}
system life-cycle: {1998: 2, 2001: 1}
various dimensions: {1998: 1, 2003: 1, 2008: 1}
combination technique: {1998: 2, 2011: 1}
important class: {1998: 1, 2003: 1, 2008: 1}
file names: {1998: 3}
curve fitting: {1998: 1, 2002: 2}
probability distribution: {1998: 1, 2013: 1, 2016: 1}
detailed information: {1998: 1, 2009: 1, 2013: 1}
complex distributed systems: {1998: 1, 1999: 1, 2003: 1}
organizational complexity: {1998: 1, 2008: 2}
running systems: {1999: 1, 2010: 1, 2016: 1}
product maps: {1999: 3}
different products: {1999: 1, 2000: 1, 2012: 1}
implementation platforms: {1999: 2, 2009: 1}
specific techniques: {1999: 1, 2010: 1, 2015: 1}
isolation technology: {1999: 1, 2007: 1, 2009: 1}
html browser: {1999: 3}
system integration: {1999: 1, 2004: 1, 2008: 1}
high-level description: {1999: 2, 2001: 1}
component functionality: {1999: 1, 2000: 2}
's source code: {1999: 1, 2009: 1, 2012: 1}
multi-dimensional separation of concerns: {1999: 1, 2000: 1, 2001: 1}
cryptographic protocols: {1999: 1, 2005: 2}
message authentication: {1999: 1, 2003: 1, 2010: 1}
structuring mechanisms: {1999: 2, 2000: 1}
formal verification technique: {1999: 1, 2001: 1, 2010: 1}
local control: {1999: 3}
simple model: {1999: 2, 2011: 1}
promela model: {1999: 3}
proposed algorithm: {1999: 1, 2016: 2}
different scenarios: {1999: 1, 2005: 1, 2015: 1}
dynamic application layout: {1999: 2, 2002: 1}
local-remote relationships: {1999: 3}
large networks: {1999: 3}
novel programming model: {1999: 2, 2002: 1}
evolving collection: {1999: 2, 2007: 1}
adaptive control: {1999: 2, 2008: 1}
infrastructure information systems: {1999: 3}
identifying program properties: {1999: 2, 2004: 1}
dynamic techniques: {1999: 2, 2015: 1}
's work: {1999: 1, 2008: 1, 2012: 1}
software evolution task: {1999: 1, 2000: 2}
hook methods: {1999: 3}
cluster analysis: {1999: 1, 2001: 2}
initial state: {1999: 3}
several studies: {1999: 1, 2015: 2}
reactive software: {1999: 1, 2015: 1, 2016: 1}
statement coverage: {1999: 2, 2013: 1}
model-based testing approach: {1999: 1, 2015: 2}
large empirical study: {1999: 1, 2007: 1, 2015: 1}
considerable effort: {1999: 1, 2010: 1, 2017: 1}
several issues: {1999: 1, 2005: 1, 2011: 1}
cost models: {1999: 1, 2000: 2}
significant predictors: {1999: 1, 2008: 1, 2013: 1}
oo systems: {1999: 2, 2015: 1}
university environment: {1999: 1, 2001: 2}
agent patterns: {1999: 3}
wireless communication: {1999: 1, 2008: 1, 2010: 1}
abstraction match: {1999: 3}
library specification: {1999: 3}
pattern-based approach: {1999: 1, 2016: 2}
pattern system: {1999: 2, 2008: 1}
's structure: {1999: 1, 2004: 1, 2013: 1}
75 %: {1999: 1, 2011: 1, 2017: 1}
application family model: {1999: 3}
one system: {1999: 1, 2012: 1, 2013: 1}
qualitative methods: {1999: 2, 2010: 1}
software documents: {1999: 3}
distributed documents: {1999: 2, 2000: 1}
architectural design patterns: {1999: 1, 2001: 1, 2002: 1}
product-line architectures: {1999: 2, 2011: 1}
architectural documentation: {1999: 1, 2002: 2}
open hypermedia: {1999: 3}
two orders: {1999: 1, 2008: 1, 2012: 1}
building software systems: {1999: 2, 2000: 1}
changing code: {1999: 1, 2011: 1, 2012: 1}
model construction: {1999: 2, 2007: 1}
verification process: {1999: 1, 2011: 1, 2015: 1}
underlying architectures: {1999: 1, 2004: 1, 2005: 1}
ongoing research: {1999: 1, 2010: 1, 2012: 1}
existing components: {1999: 1, 2002: 1, 2003: 1}
three areas: {1999: 1, 2003: 1, 2011: 1}
large complex systems: {1999: 1, 2005: 1, 2012: 1}
insight tool suite: {1999: 3}
software engineering approach: {1999: 1, 2000: 1, 2012: 1}
specific needs: {1999: 1, 2003: 1, 2012: 1}
requirements modelling: {1999: 1, 2013: 2}
web engineering approach: {1999: 1, 2002: 2}
decision theory: {1999: 1, 2013: 2}
component-based software: {1999: 1, 2004: 2}
constraint theory: {1999: 1, 2000: 2}
face detection: {1999: 1, 2002: 1, 2005: 1}
software engineering experiments: {1999: 2, 2004: 1}
two groups: {1999: 1, 2013: 1, 2015: 1}
multicast algorithms: {1999: 1, 2001: 1, 2008: 1}
component based system: {2000: 2, 2001: 1}
development costs: {2000: 2, 2013: 1}
stand-alone applications: {2000: 2, 2007: 1}
product metrics: {2000: 2, 2001: 1}
observation-based testing: {2000: 2, 2005: 1}
software releases: {2000: 1, 2002: 2}
testing levels: {2000: 3}
requirements/assurances contracts: {2000: 3}
development documents: {2000: 2, 2015: 1}
library classes: {2000: 1, 2007: 1, 2008: 1}
existing applications: {2000: 1, 2004: 1, 2005: 1}
fundamental building blocks: {2000: 2, 2012: 1}
application areas: {2000: 1, 2002: 2}
university courses: {2000: 2, 2002: 1}
sa dynamics: {2000: 3}
real world case study: {2000: 2, 2011: 1}
labelled transition system: {2000: 2, 2001: 1}
java implementation: {2000: 1, 2013: 2}
precise semantics: {2000: 3}
uml behavior diagrams: {2000: 3}
modeling approach: {2000: 2, 2007: 1}
uml behavior: {2000: 3}
conceptual level: {2000: 2, 2013: 1}
system-level design: {2000: 1, 2012: 2}
effective techniques: {2000: 1, 2011: 1, 2016: 1}
individual students: {2000: 2, 2015: 1}
student learning: {2000: 2, 2015: 1}
student performance: {2000: 2, 2003: 1}
structured approach: {2000: 1, 2012: 2}
maintenance cost: {2000: 1, 2009: 1, 2011: 1}
assembly language: {2000: 1, 2001: 2}
memory locations: {2000: 3}
memory location: {2000: 2, 2008: 1}
pointer variables: {2000: 3}
significant difference: {2000: 1, 2002: 1, 2015: 1}
logistic regression analysis: {2000: 2, 2008: 1}
senior managers: {2000: 2, 2016: 1}
exceptional behaviors: {2000: 3}
paper reports: {2000: 1, 2002: 1, 2005: 1}
better support: {2000: 2, 2004: 1}
fewer defects: {2000: 1, 2004: 1, 2013: 1}
finite-state verification techniques: {2000: 2, 2001: 1}
verification tools: {2000: 1, 2004: 2}
correctness properties: {2000: 2, 2003: 1}
model extraction: {2000: 1, 2017: 2}
automatic extraction: {2000: 2, 2009: 1}
variable values: {2000: 1, 2012: 2}
technical solutions: {2000: 2, 2012: 1}
empirical approach: {2000: 2, 2005: 1}
child specification: {2000: 3}
interface extension: {2000: 3}
new behavior: {2000: 1, 2002: 1, 2012: 1}
graphical animation: {2000: 2, 2005: 1}
modelling languages: {2000: 1, 2015: 2}
software design process: {2000: 1, 2011: 2}
solar energy: {2000: 3}
software development engineers: {2000: 3}
important requirements: {2000: 1, 2010: 1, 2016: 1}
success story: {2000: 1, 2002: 2}
computer science courses: {2000: 1, 2013: 2}
manual analysis: {2000: 1, 2013: 1, 2016: 1}
information flow: {2000: 2, 2012: 1}
large companies: {2000: 1, 2013: 2}
distributed object systems: {2000: 3}
new products: {2000: 1, 2002: 2}
process improvement experiment: {2000: 3}
organizational change: {2000: 2, 2011: 1}
future direction: {2000: 2, 2004: 1}
professional skills: {2000: 2, 2005: 1}
radio control: {2000: 1, 2002: 1, 2009: 1}
pc industry: {2000: 3}
four years: {2000: 1, 2002: 1, 2008: 1}
virtual communities: {2000: 2, 2012: 1}
java applets: {2000: 3}
interactive lessons: {2000: 3}
algorithmic cost estimation: {2000: 3}
work activities: {2000: 2, 2013: 1}
proposed solutions: {2000: 1, 2004: 1, 2008: 1}
hardware devices: {2000: 2, 2003: 1}
spontaneous software: {2000: 3}
evolving requirements: {2000: 2, 2004: 1}
program behaviour: {2000: 1, 2011: 2}
optimization methods: {2000: 2, 2005: 1}
sat solvers: {2000: 1, 2003: 2}
program compiler: {2000: 1, 2001: 1, 2007: 1}
automatic analysis: {2000: 1, 2004: 1, 2012: 1}
multi-dimensional separation: {2000: 1, 2001: 1, 2002: 1}
document management system: {2000: 3}
low cost: {2000: 1, 2003: 2}
industrial use: {2000: 1, 2011: 2}
multi-threaded programs: {2000: 2, 2011: 1}
developing applications: {2000: 1, 2013: 1, 2017: 1}
message sequence chart: {2000: 2, 2002: 1}
limited set: {2000: 1, 2012: 1, 2017: 1}
performance measurements: {2000: 1, 2003: 1, 2007: 1}
learning styles: {2000: 1, 2007: 2}
socio-economic effects: {2000: 1, 2003: 1, 2015: 1}
application states: {2000: 3}
three techniques: {2000: 1, 2012: 1, 2016: 1}
ieee standards: {2000: 1, 2001: 1, 2005: 1}
requirements artifacts: {2000: 1, 2017: 2}
synthesis process: {2000: 1, 2001: 1, 2004: 1}
high performance: {2000: 2, 2016: 1}
little work: {2000: 1, 2009: 1, 2011: 1}
best practice: {2000: 1, 2002: 1, 2015: 1}
logical formalism: {2001: 2, 2012: 1}
comprehension tasks: {2001: 1, 2007: 1, 2012: 1}
maintenance activities: {2001: 1, 2011: 1, 2013: 1}
execution profiles: {2001: 2, 2013: 1}
core component: {2001: 1, 2007: 1, 2015: 1}
significant advantages: {2001: 1, 2013: 1, 2015: 1}
verification results: {2001: 1, 2015: 1, 2016: 1}
organizational models: {2001: 1, 2012: 2}
organizational units: {2001: 1, 2005: 2}
validation activities: {2001: 3}
requirements document: {2001: 2, 2004: 1}
cost effectiveness: {2001: 1, 2010: 2}
inspection process: {2001: 1, 2004: 2}
main findings: {2001: 2, 2012: 1}
merged model: {2001: 2, 2008: 1}
critical properties: {2001: 1, 2003: 1, 2005: 1}
topoi diagrams: {2001: 3}
efficient implementation: {2001: 1, 2013: 1, 2015: 1}
challenging problem: {2001: 1, 2008: 1, 2012: 1}
inference graph: {2001: 3}
state variables: {2001: 2, 2010: 1}
several shortcomings: {2001: 1, 2013: 1, 2015: 1}
collecting data: {2001: 1, 2011: 1, 2015: 1}
solid architectural vision: {2001: 1, 2002: 2}
success failure: {2001: 1, 2002: 1, 2015: 1}
business goals: {2001: 1, 2013: 2}
reliability security: {2001: 1, 2002: 1, 2011: 1}
practical tool: {2001: 1, 2008: 2}
extensible markup language: {2001: 2, 2015: 1}
research paradigms: {2001: 1, 2003: 2}
several kinds: {2001: 1, 2002: 1, 2017: 1}
various stages: {2001: 1, 2003: 1, 2004: 1}
technology companies: {2001: 2, 2015: 1}
small teams: {2001: 2, 2005: 1}
new software: {2001: 1, 2008: 1, 2011: 1}
system family development: {2001: 3}
model elements: {2001: 1, 2007: 1, 2008: 1}
development artifacts: {2001: 1, 2013: 2}
scenario-based specifications: {2001: 1, 2008: 1, 2013: 1}
operational profiles: {2001: 2, 2010: 1}
component buyer: {2001: 3}
statechart diagrams: {2001: 2, 2002: 1}
interactive algorithm: {2001: 3}
resource-constrained devices: {2001: 2, 2002: 1}
static analysis techniques: {2001: 1, 2011: 2}
important issue: {2001: 1, 2013: 1, 2015: 1}
xml documents: {2001: 3}
map metaphor: {2001: 3}
global changes: {2001: 2, 2007: 1}
effective tools: {2001: 1, 2003: 1, 2012: 1}
theorem provers: {2001: 2, 2003: 1}
automated analysis: {2001: 1, 2004: 1, 2012: 1}
central versioning repository: {2001: 3}
web engineering: {2001: 1, 2002: 1, 2010: 1}
user expectations: {2001: 2, 2007: 1}
software functionality: {2001: 2, 2017: 1}
new feature: {2001: 1, 2003: 1, 2013: 1}
management education: {2001: 1, 2011: 1, 2015: 1}
problem solving: {2001: 1, 2010: 1, 2012: 1}
software risk management: {2001: 1, 2015: 2}
north america: {2001: 2, 2013: 1}
postal services: {2001: 1, 2004: 1, 2013: 1}
software factory: {2001: 3}
university curricula: {2001: 1, 2013: 2}
hands-on approach: {2001: 1, 2008: 2}
various factors: {2002: 1, 2013: 1, 2017: 1}
computer scientists: {2002: 1, 2015: 2}
static representation: {2002: 1, 2004: 2}
interval estimate: {2002: 3}
parameter estimation: {2002: 1, 2009: 1, 2015: 1}
novel method: {2002: 1, 2003: 1, 2013: 1}
two days: {2002: 1, 2011: 1, 2013: 1}
six releases: {2002: 1, 2008: 1, 2016: 1}
incremental testing: {2002: 2, 2011: 1}
spreadsheet users: {2002: 1, 2012: 2}
strong fairness: {2002: 3}
error trace: {2002: 3}
multivariate models: {2002: 3}
different applications: {2002: 1, 2004: 1, 2012: 1}
consumer electronics: {2002: 3}
product population approach: {2002: 3}
component technology: {2002: 2, 2004: 1}
research process: {2002: 2, 2012: 1}
semantic anomaly detection: {2002: 3}
timely fashion: {2002: 1, 2011: 2}
different roles: {2002: 1, 2013: 2}
quantitative evaluation: {2002: 1, 2010: 1, 2013: 1}
tight schedules: {2002: 1, 2004: 1, 2010: 1}
lightweight approach: {2002: 1, 2005: 1, 2013: 1}
low quality: {2002: 1, 2005: 1, 2013: 1}
high cost: {2002: 1, 2010: 1, 2015: 1}
concern graphs: {2002: 3}
concern graph representation: {2002: 3}
corresponding source code: {2002: 2, 2008: 1}
practical tradeoffs: {2002: 3}
concern representation: {2002: 3}
software model checking: {2002: 2, 2013: 1}
lucent technologies: {2002: 1, 2003: 2}
debugging process: {2002: 1, 2010: 1, 2017: 1}
dependence graphs: {2002: 1, 2012: 2}
program points: {2002: 2, 2007: 1}
interval analysis: {2002: 1, 2017: 2}
path conditions: {2002: 3}
software development organization: {2002: 1, 2010: 1, 2013: 1}
explicit queries: {2002: 1, 2005: 2}
information delivery: {2002: 3}
empirical evaluations: {2002: 1, 2008: 1, 2016: 1}
one challenge: {2002: 1, 2016: 1, 2017: 1}
incremental development processes: {2002: 1, 2011: 2}
model-driven architecture: {2002: 2, 2003: 1}
financial loss: {2002: 3}
medical devices: {2002: 1, 2003: 1, 2008: 1}
scientific information systems: {2002: 2, 2011: 1}
software engineering methodologies: {2002: 1, 2013: 2}
programming methodology: {2002: 1, 2004: 2}
transient program failure: {2002: 3}
transactional functions: {2002: 3}
full advantage: {2002: 1, 2005: 1, 2012: 1}
large organization: {2002: 3}
industrial research: {2002: 1, 2012: 2}
web services technologies: {2002: 2, 2004: 1}
business transactions: {2002: 1, 2010: 1, 2011: 1}
implied scenarios: {2002: 1, 2005: 2}
cots components: {2002: 1, 2004: 1, 2007: 1}
software architecture evaluation: {2002: 1, 2005: 2}
software engineering economics: {2002: 1, 2011: 1, 2012: 1}
major elements: {2002: 1, 2003: 1, 2004: 1}
current technology: {2002: 1, 2003: 1, 2004: 1}
broader impact: {2002: 1, 2003: 1, 2004: 1}
understanding dependability: {2002: 1, 2003: 1, 2004: 1}
ad hoc: {2002: 1, 2003: 2}
common object request broker architecture: {2002: 3}
architectural patterns: {2002: 1, 2004: 1, 2010: 1}
agile processes: {2002: 1, 2003: 1, 2005: 1}
object constraint language: {2002: 1, 2013: 2}
projects organizations: {2002: 1, 2010: 1, 2011: 1}
run-time monitor: {2002: 3}
partial orders: {2002: 1, 2004: 1, 2011: 1}
different models: {2002: 1, 2008: 1, 2010: 1}
mobile phone applications: {2002: 2, 2013: 1}
mobile phones: {2002: 1, 2016: 2}
architecture evolution: {2002: 1, 2009: 2}
formal platform: {2002: 2, 2004: 1}
ill-formed configurations: {2002: 2, 2012: 1}
community workbench: {2002: 2, 2004: 1}
unity programs: {2002: 1, 2004: 2}
class hierarchy: {2002: 2, 2012: 1}
proposed solution: {2002: 1, 2011: 1, 2016: 1}
context-aware applications: {2002: 1, 2004: 1, 2008: 1}
explicit inputs: {2002: 3}
implicit inputs: {2002: 3}
interactive programming: {2002: 1, 2004: 1, 2017: 1}
initial investigation: {2002: 1, 2012: 2}
compliance notation: {2002: 3}
incomplete specifications: {2002: 1, 2012: 2}
dynamic data: {2002: 2, 2010: 1}
state diagrams: {2003: 1, 2012: 2}
developers users: {2003: 1, 2010: 1, 2011: 1}
oss communities: {2003: 2, 2013: 1}
step-wise refinement: {2003: 3}
type-checked interactions: {2003: 1, 2004: 2}
formal parameters: {2003: 2, 2011: 1}
global variables: {2003: 3}
program components: {2003: 1, 2008: 2}
first international workshop: {2003: 1, 2010: 1, 2015: 1}
practitioners educators: {2003: 1, 2004: 1, 2015: 1}
first attempt: {2003: 1, 2012: 1, 2013: 1}
platform-independent model: {2003: 2, 2005: 1}
platform-specific model: {2003: 2, 2005: 1}
systematic way: {2003: 2, 2010: 1}
product-line engineering: {2003: 1, 2011: 2}
productivity applications: {2003: 3}
interactive graphical applications: {2003: 3}
software product archiving: {2003: 3}
program fragments: {2003: 1, 2008: 2}
computer engineers: {2003: 2, 2004: 1}
parallel processes: {2003: 2, 2013: 1}
visualization techniques: {2003: 2, 2012: 1}
reliability analysis: {2003: 2, 2013: 1}
performance issues: {2003: 1, 2012: 1, 2016: 1}
software usability: {2003: 2, 2004: 1}
requirements discovery: {2003: 2, 2005: 1}
safety-critical software system: {2003: 2, 2010: 1}
software quality performance: {2003: 1, 2004: 1, 2015: 1}
growing number: {2003: 2, 2016: 1}
system complexity: {2003: 1, 2005: 1, 2010: 1}
many faults: {2003: 1, 2008: 1, 2012: 1}
practical guidance: {2003: 1, 2005: 1, 2013: 1}
icse workshop: {2003: 1, 2013: 1, 2015: 1}
workshop summary: {2003: 1, 2004: 2}
data access: {2003: 1, 2005: 1, 2013: 1}
industry academia: {2003: 1, 2007: 1, 2012: 1}
good understanding: {2003: 1, 2011: 1, 2013: 1}
wider software engineering community: {2003: 1, 2015: 2}
together researchers: {2003: 1, 2004: 1, 2015: 1}
full potential: {2003: 1, 2011: 1, 2012: 1}
software problems: {2003: 1, 2004: 1, 2010: 1}
usage-centered design: {2003: 3}
software evolves: {2003: 1, 2005: 1, 2008: 1}
different artifacts: {2003: 1, 2012: 2}
detecting inconsistencies: {2003: 1, 2011: 2}
significant challenge: {2003: 1, 2012: 1, 2013: 1}
industry practitioners: {2003: 1, 2004: 1, 2013: 1}
database applications: {2003: 1, 2004: 2}
community building: {2003: 2, 2011: 1}
certain properties: {2003: 1, 2011: 1, 2016: 1}
research university: {2003: 2, 2010: 1}
personal life: {2003: 1, 2010: 1, 2013: 1}
nsefs 03: {2003: 3}
safety security: {2003: 1, 2010: 1, 2013: 1}
important aspect: {2003: 1, 2008: 1, 2016: 1}
network-based software: {2003: 3}
sensitive information: {2003: 1, 2011: 1, 2012: 1}
dynamic java visualizer: {2003: 1, 2005: 2}
tertiary education: {2003: 3}
agile development practices: {2003: 1, 2017: 2}
learning environment: {2003: 1, 2013: 2}
target tracking: {2003: 1, 2005: 1, 2013: 1}
software fault correction: {2003: 3}
various phases: {2003: 1, 2010: 1, 2012: 1}
detailed design: {2003: 1, 2004: 1, 2010: 1}
knowledge repositories: {2003: 3}
different purposes: {2003: 1, 2013: 2}
intelligent sensors: {2003: 1, 2009: 1, 2015: 1}
end-user program development: {2003: 3}
pilot project: {2003: 2, 2013: 1}
application team: {2003: 3}
greedy methods: {2003: 1, 2005: 2}
software interaction testing: {2003: 2, 2005: 1}
component-based embedded systems: {2003: 2, 2009: 1}
user session data: {2003: 3}
generated tests: {2003: 1, 2011: 1, 2016: 1}
half-day tutorial: {2003: 1, 2013: 2}
software modeling tools: {2004: 1, 2015: 2}
maintenance effort: {2004: 1, 2011: 1, 2016: 1}
peer-to-peer computing: {2004: 2, 2011: 1}
semantic concepts: {2004: 3}
practicing software engineers: {2004: 1, 2016: 2}
subjective evaluations: {2004: 2, 2011: 1}
dependence graph: {2004: 1, 2010: 2}
biomedical engineering: {2004: 1, 2008: 2}
estimation theory: {2004: 2, 2012: 1}
main objective: {2004: 2, 2011: 1}
software artefacts: {2004: 1, 2015: 2}
language mechanisms: {2004: 2, 2016: 1}
novel applications: {2004: 1, 2010: 1, 2011: 1}
internal metrics: {2004: 3}
early indicators: {2004: 2, 2005: 1}
field quality: {2004: 1, 2011: 2}
run-time verification: {2004: 1, 2011: 2}
little use: {2004: 1, 2011: 1, 2012: 1}
causal model: {2004: 3}
peer-to-peer architectures: {2004: 3}
statement level: {2004: 3}
program-execution data: {2004: 3}
coloring technique: {2004: 3}
binary decision: {2004: 1, 2008: 2}
fault-revealing properties: {2004: 3}
support vector machine: {2004: 1, 2013: 2}
interactive applications: {2004: 2, 2011: 1}
research development: {2004: 1, 2015: 2}
type safety: {2004: 1, 2005: 1, 2007: 1}
distributed interaction: {2004: 3}
pattern structures: {2004: 3}
precise specification: {2004: 2, 2008: 1}
version histories: {2004: 1, 2011: 1, 2012: 1}
26 %: {2004: 1, 2016: 1, 2017: 1}
enterprise information systems: {2004: 2, 2012: 1}
multi-tier architectures: {2004: 3}
database server: {2004: 2, 2005: 1}
java servlets: {2004: 1, 2012: 2}
java type system: {2004: 3}
sql runtime exception: {2004: 3}
search-based techniques: {2004: 1, 2016: 2}
excel spreadsheets: {2004: 3}
design artifacts: {2004: 2, 2005: 1}
different phases: {2004: 1, 2007: 1, 2015: 1}
actual system: {2004: 1, 2010: 2}
software process simulation: {2004: 1, 2011: 1, 2015: 1}
large complex software systems: {2004: 1, 2011: 1, 2013: 1}
strong emphasis: {2004: 1, 2015: 1, 2016: 1}
debugging aids: {2004: 1, 2012: 1, 2013: 1}
every time: {2004: 1, 2012: 1, 2015: 1}
requirements documentation: {2004: 3}
evidence-based medicine: {2004: 2, 2016: 1}
test suite generation: {2004: 1, 2008: 2}
information extraction: {2004: 1, 2011: 1, 2016: 1}
model driven architecture: {2004: 1, 2005: 1, 2015: 1}
self-adjusting systems: {2004: 1, 2005: 2}
size control: {2004: 1, 2005: 1, 2008: 1}
change requests: {2004: 1, 2013: 2}
technique selection: {2004: 1, 2013: 2}
language interoperability: {2004: 2, 2016: 1}
experimental infrastructure: {2004: 2, 2017: 1}
existing application: {2004: 1, 2009: 2}
hand-coded implementation: {2004: 3}
mobile tools: {2004: 3}
real-world projects: {2004: 1, 2005: 1, 2007: 1}
architectural thinking: {2004: 2, 2015: 1}
architectural issues: {2004: 1, 2015: 1, 2016: 1}
implicit control flow: {2004: 3}
static dynamic analyses: {2004: 1, 2015: 1, 2017: 1}
usability-supporting architectural pattern: {2004: 1, 2005: 2}
first version: {2004: 1, 2013: 1, 2015: 1}
main idea: {2004: 1, 2013: 1, 2016: 1}
test suite reduction: {2004: 1, 2012: 2}
bi-criteria model: {2004: 3}
open source software communities: {2004: 1, 2012: 1, 2013: 1}
nuclear physics crash simulation: {2004: 1, 2011: 1, 2013: 1}
commercial organizations: {2004: 1, 2013: 2}
time resources: {2004: 1, 2012: 1, 2015: 1}
new ways: {2005: 1, 2010: 1, 2013: 1}
first glance: {2005: 1, 2007: 1, 2013: 1}
open source development: {2005: 2, 2010: 1}
model level: {2005: 1, 2012: 1, 2015: 1}
test driven development: {2005: 1, 2010: 1, 2013: 1}
core developers: {2005: 1, 2017: 2}
internet telephony: {2005: 1, 2008: 2}
modular reasoning: {2005: 2, 2009: 1}
crosscutting concerns: {2005: 1, 2007: 2}
sql statements: {2005: 3}
database schema: {2005: 1, 2013: 2}
transparent persistence: {2005: 3}
safe query objects: {2005: 3}
example code: {2005: 2, 2011: 1}
eclipse integrated: {2005: 1, 2009: 1, 2010: 1}
working set: {2005: 2, 2010: 1}
35 %: {2005: 1, 2011: 1, 2016: 1}
end-user software engineering: {2005: 2, 2012: 1}
spreadsheet errors: {2005: 1, 2013: 2}
execution paths: {2005: 1, 2015: 2}
binary refactoring: {2005: 3}
library developers: {2005: 1, 2012: 2}
client code: {2005: 1, 2007: 1, 2017: 1}
early prediction: {2005: 2, 2008: 1}
statistical regression models: {2005: 1, 2013: 2}
resource constraints: {2005: 2, 2012: 1}
performance degradation: {2005: 1, 2013: 1, 2017: 1}
conventional techniques: {2005: 1, 2012: 1, 2017: 1}
original method: {2005: 2, 2007: 1}
large project: {2005: 1, 2009: 1, 2011: 1}
secure systems development: {2005: 3}
real-time specification patterns: {2005: 3}
effective means: {2005: 1, 2009: 1, 2012: 1}
large numbers: {2005: 1, 2013: 1, 2017: 1}
dynamic impact analysis: {2005: 2, 2011: 1}
static information: {2005: 1, 2010: 2}
usability concerns: {2005: 2, 2011: 1}
dependency analysis: {2005: 1, 2013: 2}
user stories: {2005: 1, 2017: 2}
experimental studies: {2005: 1, 2007: 1, 2010: 1}
claimed benefits: {2005: 1, 2008: 1, 2012: 1}
service robots: {2005: 3}
home service: {2005: 3}
considerable attention: {2005: 1, 2007: 1, 2010: 1}
product management: {2005: 2, 2008: 1}
pivotal role: {2005: 1, 2010: 1, 2011: 1}
major findings: {2005: 1, 2013: 1, 2015: 1}
software effort: {2005: 1, 2016: 2}
local data: {2005: 1, 2013: 1, 2015: 1}
relevant concepts: {2005: 1, 2010: 1, 2015: 1}
computer science curriculum: {2005: 1, 2007: 2}
social dimension: {2005: 2, 2015: 1}
teaching software engineering: {2005: 1, 2013: 1, 2015: 1}
north carolina state university: {2005: 1, 2007: 2}
framework development: {2005: 3}
creative process: {2005: 1, 2007: 1, 2013: 1}
architecture issues: {2005: 1, 2013: 2}
social issues: {2005: 1, 2010: 2}
se education: {2005: 2, 2012: 1}
role scheme: {2005: 3}
project metrics: {2005: 3}
main challenges: {2005: 1, 2010: 1, 2011: 1}
human aspect: {2005: 1, 2010: 2}
business partners: {2005: 1, 2010: 2}
regression error: {2005: 2, 2013: 1}
specification pattern: {2005: 1, 2008: 2}
change impact analysis tool: {2005: 2, 2007: 1}
continuous testing: {2005: 2, 2012: 1}
control software: {2005: 1, 2011: 2}
smart home network: {2005: 3}
limited support: {2005: 1, 2007: 1, 2015: 1}
requirements prioritization: {2005: 1, 2008: 1, 2013: 1}
software creation: {2005: 1, 2015: 1, 2016: 1}
risk mitigation: {2005: 1, 2015: 2}
key challenges: {2005: 1, 2013: 1, 2015: 1}
new semantics: {2007: 2, 2016: 1}
mathematical properties: {2007: 1, 2013: 2}
performance gain: {2007: 1, 2010: 1, 2016: 1}
input models: {2007: 1, 2009: 2}
original code: {2007: 1, 2012: 2}
feedback-directed random test generation: {2007: 3}
target systems: {2007: 2, 2010: 1}
fingerprint recognition: {2007: 2, 2009: 1}
large code bases: {2007: 1, 2008: 1, 2012: 1}
distributed approach: {2007: 2, 2012: 1}
high rates: {2007: 1, 2010: 1, 2015: 1}
aspect mining: {2007: 2, 2011: 1}
automated inference: {2007: 1, 2008: 2}
pointcut expressions: {2007: 3}
key challenge: {2007: 1, 2016: 1, 2017: 1}
extensible toolset: {2007: 3}
change inference process: {2007: 3}
integrity constraints: {2007: 2, 2008: 1}
maintainability performance: {2007: 1, 2008: 2}
structural changes: {2007: 3}
keyboard control: {2007: 3}
ethnographic study: {2007: 3}
uml stereotypes: {2007: 3}
seed test suite: {2007: 3}
seed suite: {2007: 3}
client applications: {2007: 2, 2016: 1}
backward compatibility: {2007: 1, 2012: 2}
global positioning system: {2007: 1, 2012: 1, 2015: 1}
industrial developers: {2007: 3}
security-sensitive operations: {2007: 3}
trust negotiation protocols: {2007: 3}
potential inconsistencies: {2007: 1, 2009: 1, 2011: 1}
source code files: {2007: 1, 2012: 1, 2013: 1}
observational study: {2007: 2, 2012: 1}
learning strategies: {2007: 1, 2015: 2}
design choices: {2007: 1, 2012: 1, 2013: 1}
metso automation: {2007: 3}
uml extension umlsec: {2007: 2, 2008: 1}
experiences results: {2007: 1, 2008: 1, 2015: 1}
front-end problem management: {2007: 3}
semi-structured interviews: {2007: 1, 2009: 1, 2013: 1}
software development costs: {2007: 2, 2016: 1}
top se program: {2007: 3}
software engineering audience: {2007: 2, 2013: 1}
accessibility requirements: {2007: 3}
systematic search: {2007: 1, 2008: 2}
failure-inducing changes: {2007: 1, 2012: 2}
next generation networking: {2007: 1, 2009: 1, 2010: 1}
conceptual queries: {2008: 3}
automotive systems: {2008: 3}
live sequence charts: {2008: 1, 2010: 2}
context inconsistency resolution: {2008: 3}
automatic fault localization: {2008: 2, 2013: 1}
time spectra: {2008: 3}
's quality: {2008: 1, 2011: 1, 2015: 1}
misuse cases: {2008: 3}
inductive logic programming: {2008: 2, 2013: 1}
fixed-time constraints: {2008: 3}
temporal correctness: {2008: 3}
new strategy: {2008: 1, 2011: 1, 2012: 1}
memory consumption: {2008: 1, 2010: 1, 2013: 1}
structural coverage metrics: {2008: 1, 2013: 2}
mental models: {2008: 1, 2010: 1, 2011: 1}
literal replication: {2008: 3}
human subjects: {2008: 2, 2012: 1}
thread scheduling: {2008: 3}
code fragment: {2008: 1, 2012: 1, 2015: 1}
potential consequences: {2008: 1, 2010: 1, 2011: 1}
task annotations: {2008: 3}
work practices: {2008: 1, 2013: 1, 2016: 1}
program behaviors: {2008: 1, 2017: 2}
inferred invariants: {2008: 3}
novice programmers: {2008: 1, 2009: 2}
coarse granularity: {2008: 3}
program design: {2008: 2, 2015: 1}
' experience: {2008: 1, 2010: 1, 2015: 1}
various areas: {2008: 1, 2013: 2}
logic queries: {2008: 3}
performance metrics: {2008: 1, 2010: 2}
object-oriented applications: {2008: 1, 2015: 2}
existing bug reports: {2008: 2, 2010: 1}
's evolution: {2008: 2, 2012: 1}
organization structure: {2008: 1, 2013: 2}
dependency graphs: {2008: 2, 2017: 1}
explicit system: {2008: 3}
time-bounded adaptation: {2008: 3}
dynamic adaptation: {2008: 2, 2013: 1}
automotive domain: {2008: 2, 2016: 1}
automotive software design: {2008: 3}
software component description: {2008: 3}
rapid-prototyping system: {2008: 3}
real-world process: {2008: 1, 2011: 2}
medical treatment: {2008: 2, 2009: 1}
quality model: {2008: 1, 2011: 1, 2012: 1}
mirth architecture: {2008: 3}
vast amounts: {2008: 1, 2010: 1, 2011: 1}
multimedia communication: {2008: 1, 2013: 1, 2015: 1}
application scenario: {2008: 1, 2012: 1, 2016: 1}
possible solutions: {2008: 1, 2011: 1, 2012: 1}
process quality: {2008: 2, 2013: 1}
technical drama: {2008: 3}
software companies: {2008: 1, 2011: 1, 2016: 1}
inverted classroom model: {2008: 3}
project experience: {2008: 3}
visualization technique: {2008: 1, 2010: 1, 2015: 1}
reachability property: {2008: 1, 2010: 2}
76 %: {2009: 1, 2013: 1, 2015: 1}
technical artifacts: {2009: 3}
socio-technical relationships: {2009: 1, 2011: 2}
path profiles: {2009: 3}
discrete time markov chain: {2009: 2, 2011: 1}
desired property: {2009: 1, 2013: 2}
requirement violations: {2009: 1, 2016: 2}
license mismatch problem: {2009: 3}
software internationalization: {2009: 3}
sequential code: {2009: 1, 2012: 1, 2015: 1}
strong statistical significance: {2009: 1, 2011: 1, 2012: 1}
redundant test cases: {2009: 2, 2012: 1}
data abstraction: {2009: 3}
invariant generation: {2009: 2, 2012: 1}
finite state abstractions: {2009: 1, 2010: 2}
original seed input files: {2009: 3}
code cloning: {2009: 2, 2010: 1}
open source system: {2009: 1, 2012: 2}
< sub: {2009: 1, 2016: 1, 2017: 1}
existing tests: {2009: 1, 2011: 2}
significant percentage: {2009: 1, 2011: 1, 2016: 1}
various challenges: {2009: 1, 2010: 1, 2011: 1}
drastic change: {2009: 3}
anomalous events: {2009: 3}
first results: {2009: 1, 2011: 1, 2015: 1}
new tool: {2009: 1, 2012: 1, 2015: 1}
open source software projects: {2009: 1, 2012: 1, 2015: 1}
evolutionary paths: {2009: 2, 2013: 1}
' activities: {2009: 1, 2012: 1, 2017: 1}
automated tools: {2009: 1, 2012: 1, 2017: 1}
self-managing systems: {2010: 3}
assessment framework: {2010: 3}
' perception: {2010: 2, 2013: 1}
architectural choices: {2010: 1, 2011: 1, 2012: 1}
null value: {2010: 1, 2015: 1, 2017: 1}
static-analysis tools: {2010: 3}
usefulness problems: {2010: 3}
many benefits: {2010: 1, 2011: 1, 2012: 1}
multiple tools: {2010: 1, 2013: 1, 2015: 1}
etcs specifications: {2010: 3}
formalization validation: {2010: 3}
space vehicles: {2010: 1, 2011: 1, 2012: 1}
space flight software: {2010: 1, 2011: 2}
real-time analysis: {2010: 1, 2015: 2}
software programs: {2010: 1, 2015: 2}
emergency response: {2010: 1, 2011: 2}
statistical learning: {2010: 1, 2015: 2}
time series: {2010: 2, 2011: 1}
textual analysis: {2010: 1, 2013: 1, 2015: 1}
new product development: {2010: 3}
game jam: {2010: 3}
game jams: {2010: 3}
positive effects: {2010: 1, 2015: 1, 2016: 1}
software developer: {2010: 1, 2011: 1, 2012: 1}
creativity engine: {2010: 3}
code canvas: {2010: 3}
team awareness: {2010: 2, 2013: 1}
tool infrastructure: {2010: 1, 2011: 2}
stakeholder analysis: {2010: 3}
legacy component: {2010: 3}
automatic unit test generation: {2010: 1, 2013: 2}
end-user involvement: {2010: 2, 2012: 1}
lightweight editable fragments: {2010: 3}
's integrated development environments: {2010: 2, 2016: 1}
file-based editing: {2010: 3}
runtime model: {2010: 2, 2013: 1}
fixing defects: {2010: 1, 2011: 1, 2012: 1}
potential duplicates: {2010: 3}
invariant relation: {2010: 1, 2012: 2}
south africa: {2010: 3}
uml profile: {2010: 3}
dynamic software product lines: {2010: 1, 2012: 2}
variability model: {2010: 1, 2015: 2}
probabilistic model: {2010: 1, 2012: 1, 2013: 1}
intelligent e-services: {2010: 3}
different context: {2010: 1, 2012: 1, 2015: 1}
business-specific concerns: {2010: 3}
uml metric: {2010: 3}
code-based prediction model: {2010: 3}
model-driven engineering (mde): {2010: 1, 2012: 2}
embedded software development: {2010: 1, 2012: 2}
phd project: {2010: 3}
given property: {2010: 1, 2013: 2}
software analysis tools: {2010: 3}
electronic whiteboards: {2010: 2, 2011: 1}
mixed-methods approach: {2010: 2, 2012: 1}
software team: {2010: 1, 2017: 2}
social technical dimensions: {2010: 3}
event-based components: {2010: 3}
model composition effort: {2010: 3}
business users: {2010: 3}
cpu utilization: {2010: 1, 2013: 2}
first edition: {2010: 2, 2015: 1}
great interest: {2010: 1, 2011: 1, 2016: 1}
research communities: {2010: 1, 2011: 1, 2015: 1}
multicore software engineering: {2010: 2, 2011: 1}
security requirement: {2010: 1, 2011: 2}
various conditions: {2010: 1, 2011: 1, 2013: 1}
high quality research: {2010: 1, 2011: 1, 2013: 1}
architectural knowledge: {2010: 1, 2011: 1, 2016: 1}
sensor networks: {2010: 1, 2011: 1, 2015: 1}
sensor network applications: {2010: 1, 2011: 1, 2013: 1}
computational thinking: {2010: 1, 2011: 1, 2013: 1}
software research: {2010: 2, 2013: 1}
computational models: {2010: 1, 2012: 2}
web 2.0 applications: {2010: 1, 2011: 2}
software development governance: {2010: 3}
similar pieces: {2010: 1, 2011: 1, 2013: 1}
many researchers: {2010: 1, 2012: 1, 2015: 1}
system failure: {2010: 2, 2015: 1}
every software system: {2010: 1, 2016: 2}
open source testing tool: {2010: 1, 2013: 2}
developer testing: {2010: 3}
practical problem: {2010: 3}
theoretical foundations: {2010: 1, 2012: 1, 2016: 1}
event handlers: {2010: 3}
software build: {2010: 3}
source code search: {2010: 1, 2013: 2}
model-driven techniques: {2010: 1, 2012: 2}
dynamic information: {2010: 1, 2013: 2}
natural language processing techniques: {2010: 1, 2015: 2}
commit comments: {2010: 3}
many different types: {2011: 1, 2012: 1, 2015: 1}
os concurrency bugs: {2011: 3}
failure-inducing inputs: {2011: 3}
security concerns: {2011: 1, 2013: 2}
many types: {2011: 2, 2012: 1}
deployed applications: {2011: 1, 2012: 1, 2016: 1}
dependability case: {2011: 3}
fault models: {2011: 3}
web mashups: {2011: 3}
big challenge: {2011: 2, 2015: 1}
high level actions: {2011: 3}
code search system: {2011: 3}
higher precision: {2011: 1, 2012: 1, 2015: 1}
passing test: {2011: 3}
one proprietary: {2011: 2, 2015: 1}
89 %: {2011: 1, 2015: 1, 2017: 1}
release cycle: {2011: 1, 2013: 1, 2015: 1}
organizational factors: {2011: 3}
existing studies: {2011: 1, 2013: 1, 2015: 1}
good performance: {2011: 1, 2012: 1, 2016: 1}
nullness information: {2011: 3}
custom class loaders: {2011: 3}
doped fiber amplifiers: {2011: 1, 2012: 1, 2013: 1}
sna metrics: {2011: 3}
online survey: {2011: 1, 2017: 2}
synchronization primitives: {2011: 1, 2015: 2}
tool-supported technique: {2011: 1, 2012: 2}
code units: {2011: 3}
two program versions: {2011: 1, 2013: 2}
formal foundations: {2011: 2, 2016: 1}
oracle selection: {2011: 2, 2012: 1}
generative programming: {2011: 1, 2012: 2}
role objects: {2011: 3}
professional spreadsheet users: {2011: 3}
noise measurement: {2011: 1, 2012: 2}
fine-grained level: {2011: 1, 2012: 2}
optimization technique: {2011: 1, 2016: 2}
completeness analysis: {2011: 3}
modern web applications: {2011: 1, 2017: 2}
javascript applications: {2011: 1, 2016: 2}
event handler: {2011: 1, 2015: 2}
uncertainty handling: {2011: 1, 2012: 1, 2013: 1}
monte carlo: {2011: 2, 2013: 1}
uncertain data processing: {2011: 3}
data dependency: {2011: 3}
structural test generation: {2011: 3}
simple programs: {2011: 3}
complex programs: {2011: 3}
method-call sequences: {2011: 3}
testing complex programs: {2011: 3}
branch statements: {2011: 3}
problem candidates: {2011: 3}
semiconductor optical amplifiers: {2011: 1, 2012: 1, 2015: 1}
socio-technical systems: {2011: 1, 2013: 2}
smart grids: {2011: 1, 2013: 2}
digital forensics: {2011: 2, 2013: 1}
real-world software development: {2011: 2, 2016: 1}
usage characteristics: {2011: 3}
earlier studies: {2011: 1, 2013: 1, 2015: 1}
release planning models: {2011: 3}
industrial software: {2011: 1, 2013: 1, 2015: 1}
sequential programs: {2011: 1, 2016: 2}
distributed team: {2011: 2, 2015: 1}
source code quality: {2011: 1, 2013: 2}
important tool: {2011: 1, 2013: 1, 2015: 1}
crisis informatics: {2011: 3}
emerging results: {2011: 1, 2013: 1, 2015: 1}
's familiarity: {2011: 2, 2016: 1}
given test suite: {2011: 1, 2012: 1, 2013: 1}
oracle problem: {2011: 3}
software testing process: {2011: 3}
fuzzy set: {2011: 3}
data evolution: {2011: 1, 2012: 2}
program element: {2011: 3}
software traceability: {2011: 3}
architectural preservation: {2011: 3}
agile development methods: {2011: 2, 2013: 1}
relevant software artifacts: {2011: 1, 2012: 2}
psychological processes: {2011: 2, 2015: 1}
recursive data structures: {2011: 1, 2013: 2}
volume computation: {2011: 3}
semantic templates: {2011: 3}
software vulnerabilities: {2011: 2, 2017: 1}
multifractal analysis: {2011: 3}
version control systems: {2011: 2, 2012: 1}
air pollution: {2011: 1, 2012: 1, 2013: 1}
ieee potentials: {2011: 1, 2012: 2}
static phase: {2011: 3}
dynamic phase: {2011: 3}
bug query language: {2011: 2, 2013: 1}
similar bugs: {2011: 2, 2012: 1}
collaborative filtering: {2011: 2, 2016: 1}
email communication: {2011: 3}
unstructured data: {2011: 3}
electronic whiteboard: {2011: 1, 2015: 2}
view infinity: {2011: 3}
abstraction layers: {2011: 1, 2013: 2}
image color analysis: {2011: 1, 2012: 2}
source code lexicon: {2011: 1, 2013: 2}
god classes: {2011: 3}
software resource estimation: {2011: 3}
technical briefings: {2011: 1, 2012: 2}
people-centric information: {2011: 3}
ui controls: {2011: 3}
fast pace: {2011: 1, 2013: 1, 2017: 1}
architecture change model: {2011: 1, 2012: 2}
service orchestration: {2011: 2, 2012: 1}
cross-browser issues: {2011: 3}
software design patterns: {2011: 1, 2015: 2}
three open source projects: {2011: 1, 2012: 1, 2017: 1}
system specifications: {2011: 1, 2015: 2}
returned results: {2011: 1, 2013: 1, 2015: 1}
software engineering paradigm: {2011: 1, 2012: 2}
pedagogical model: {2011: 1, 2013: 1, 2015: 1}
collaboration infrastructure: {2011: 1, 2013: 2}
automation of software test: {2011: 1, 2013: 1, 2015: 1}
computational engineering: {2011: 1, 2013: 1, 2015: 1}
climate modeling: {2011: 1, 2013: 1, 2015: 1}
bioinformatics vehicle development: {2011: 1, 2013: 1, 2015: 1}
se practices: {2011: 1, 2013: 1, 2015: 1}
existing se tools: {2011: 1, 2013: 1, 2015: 1}
business/it community: {2011: 1, 2013: 1, 2015: 1}
appropriate se solutions: {2011: 1, 2013: 1, 2015: 1}
salient characteristics: {2011: 1, 2013: 1, 2015: 1}
share perspectives: {2011: 1, 2013: 1, 2015: 1}
present findings: {2011: 1, 2013: 1, 2015: 1}
techniques experimental methods: {2011: 1, 2013: 1, 2015: 1}
second iteration: {2011: 2, 2013: 1}
software engineering project course: {2011: 1, 2013: 2}
bug localization: {2012: 1, 2013: 1, 2016: 1}
configurable software: {2012: 1, 2015: 1, 2016: 1}
single method call: {2012: 3}
context-free code templates: {2012: 3}
current code: {2012: 3}
learned constraints: {2012: 3}
software logging: {2012: 3}
log messages: {2012: 3}
first attempts: {2012: 1, 2015: 1, 2016: 1}
high coverage: {2012: 2, 2016: 1}
class boundaries: {2012: 3}
fine-grained prediction: {2012: 3}
historical metrics: {2012: 3}
ide support: {2012: 1, 2013: 2}
automated refactoring: {2012: 1, 2013: 1, 2017: 1}
constant prints: {2012: 3}
automated repair: {2012: 1, 2017: 2}
string constraints: {2012: 1, 2013: 2}
php web applications: {2012: 2, 2015: 1}
multiple products: {2012: 2, 2013: 1}
rc system: {2012: 3}
crosscutting effect: {2012: 3}
ichi tracker: {2012: 3}
similar applications: {2012: 3}
stack trace: {2012: 1, 2016: 2}
default ordering: {2012: 3}
potential bugs: {2012: 2, 2016: 1}
87 %: {2012: 1, 2013: 1, 2017: 1}
software structure: {2012: 2, 2013: 1}
graph mining: {2012: 2, 2016: 1}
graph metrics: {2012: 3}
maintenance issues: {2012: 2, 2013: 1}
execution data: {2012: 3}
memory dumps: {2012: 2, 2016: 1}
call stacks: {2012: 3}
key abstraction: {2012: 3}
time pressure: {2012: 3}
mutual engagement: {2012: 3}
build breakages: {2012: 3}
broken builds: {2012: 3}
build process: {2012: 3}
long term contributor: {2012: 3}
test-first programming: {2012: 3}
bidirectional transformations: {2012: 3}
server side scripts: {2012: 1, 2013: 2}
65 %: {2012: 1, 2017: 2}
dynamic nature: {2012: 1, 2013: 1, 2015: 1}
array variables: {2012: 3}
enterprise applications: {2012: 1, 2013: 2}
main source code: {2012: 3}
risk identification: {2012: 1, 2015: 2}
gnu coreutils: {2012: 1, 2013: 2}
c++ programs: {2012: 2, 2016: 1}
integer overflow: {2012: 1, 2016: 2}
' intent: {2012: 2, 2013: 1}
82 %: {2012: 2, 2017: 1}
94 %: {2012: 1, 2016: 1, 2017: 1}
statistical language models: {2012: 2, 2015: 1}
software naturalness: {2012: 1, 2015: 1, 2016: 1}
open-source repositories: {2012: 3}
desired features: {2012: 1, 2015: 1, 2016: 1}
oracle data: {2012: 3}
concurrent bugs: {2012: 2, 2013: 1}
deterministic replay: {2012: 2, 2017: 1}
worst case: {2012: 1, 2013: 2}
51 %: {2012: 1, 2013: 2}
paradigm shift: {2012: 2, 2016: 1}
verification validation: {2012: 1, 2015: 2}
huge wealth: {2012: 2, 2013: 1}
actionable information: {2012: 2, 2013: 1}
rich data: {2012: 1, 2013: 1, 2015: 1}
modern software services: {2012: 2, 2013: 1}
software data: {2012: 1, 2013: 2}
research achievements: {2012: 1, 2013: 2}
parsing expression grammars: {2012: 3}
parser combinator: {2012: 3}
formal parsers: {2012: 3}
debugger canvas: {2012: 3}
statistical models: {2012: 2, 2016: 1}
quantitative understanding: {2012: 2, 2013: 1}
unnecessary code: {2012: 3}
bayesian networks: {2012: 3}
lifelong learning: {2012: 1, 2013: 2}
stmicroelectronics belgium: {2012: 3}
systematic process: {2012: 1, 2015: 1, 2017: 1}
java systems: {2012: 1, 2017: 2}
concolic testing technique: {2012: 1, 2015: 2}
static analyzer: {2012: 1, 2015: 2}
progressive development: {2012: 3}
focus program: {2012: 3}
ct dc: {2012: 3}
psp class: {2012: 3}
72 %: {2012: 1, 2017: 2}
intellectual capabilities: {2012: 3}
contemplative techniques: {2012: 3}
knowledge work: {2012: 2, 2015: 1}
knowledge workers: {2012: 2, 2015: 1}
large amounts: {2012: 1, 2013: 1, 2016: 1}
type-3 clones: {2012: 1, 2017: 2}
static code: {2012: 3}
power regressions: {2012: 3}
supervised learning: {2012: 1, 2013: 2}
single-label learning: {2012: 3}
failing execution: {2012: 3}
existing efforts: {2012: 1, 2013: 1, 2015: 1}
tribal memory: {2012: 3}
test outputs: {2012: 1, 2016: 2}
dynamically adaptive systems: {2012: 3}
adaptation capabilities: {2012: 2, 2013: 1}
execution context: {2012: 1, 2016: 1, 2017: 1}
team-based software development: {2012: 2, 2015: 1}
client-side code: {2012: 2, 2015: 1}
server-side code: {2012: 3}
novel tool: {2012: 1, 2013: 2}
software development tasks: {2012: 2, 2015: 1}
integrated circuit modeling: {2012: 1, 2013: 1, 2015: 1}
fault detector component: {2012: 3}
memory usage: {2012: 2, 2016: 1}
cloud infrastructures: {2012: 2, 2013: 1}
spreadsheet model: {2012: 3}
important activity: {2012: 1, 2013: 1, 2015: 1}
icse 2012: {2012: 3}
regression faults: {2012: 3}
sopl engineering: {2012: 3}
object system models: {2012: 3}
decision rights: {2012: 3}
software project performance: {2012: 1, 2015: 2}
search-based algorithms: {2012: 2, 2015: 1}
optimization problem: {2012: 1, 2013: 2}
20 years: {2012: 1, 2013: 1, 2017: 1}
composite semantics: {2012: 3}
metric temporal logic: {2012: 2, 2016: 1}
binary programs: {2012: 1, 2017: 2}
monitorable actions: {2012: 3}
software localization: {2012: 3}
design motifs: {2012: 3}
societal computing: {2012: 3}
semantic search: {2012: 3}
relevant results: {2012: 1, 2013: 1, 2015: 1}
goal-based standards: {2012: 3}
data-driven approach: {2012: 2, 2013: 1}
performance tests: {2012: 1, 2013: 1, 2017: 1}
cloud approaches: {2012: 3}
icse 2013: {2013: 3}
reconfiguration contract: {2013: 3}
mobile application: {2013: 3}
project owners: {2013: 3}
iterative closest point algorithm: {2013: 2, 2015: 1}
gui states: {2013: 3}
def-use coverage: {2013: 3}
library calls: {2013: 3}
verification status: {2013: 3}
extensive experiments: {2013: 1, 2017: 2}
many bugs: {2013: 1, 2016: 2}
specific configuration options: {2013: 3}
configuration errors: {2013: 2, 2017: 1}
human developers: {2013: 3}
target projects: {2013: 3}
cloud deployments: {2013: 3}
broken sets: {2013: 3}
large repositories: {2013: 1, 2015: 1, 2016: 1}
mining software repository: {2013: 3}
cloud environments: {2013: 1, 2015: 2}
natural language documents: {2013: 3}
software versions: {2013: 1, 2015: 1, 2016: 1}
symbolic pathfinder: {2013: 3}
xbi detection: {2013: 3}
differencing technique: {2013: 2, 2017: 1}
intrinsic redundancy: {2013: 3}
48 %: {2013: 1, 2015: 1, 2016: 1}
software maintenance task: {2013: 2, 2015: 1}
formal tools: {2013: 3}
informal documentation: {2013: 2, 2015: 1}
regulated environments: {2013: 3}
microsoft products: {2013: 3}
ct dc aa: {2013: 3}
peer code review: {2013: 3}
review bot: {2013: 3}
code review process: {2013: 3}
technology transfer adoption: {2013: 3}
product teams: {2013: 2, 2015: 1}
microsoft bing: {2013: 3}
rapid fielding: {2013: 3}
business stakeholders: {2013: 3}
regular expressions: {2013: 2, 2017: 1}
collaboration network: {2013: 3}
bug reporters: {2013: 3}
ten years: {2013: 1, 2015: 2}
skills training: {2013: 2, 2015: 1}
studio-based teaching: {2013: 3}
studio approach: {2013: 2, 2015: 1}
novice students: {2013: 1, 2015: 2}
introductory programming courses: {2013: 3}
popt students: {2013: 3}
first software engineering course: {2013: 3}
curriculum guidelines: {2013: 2, 2015: 1}
distributed scrum: {2013: 1, 2015: 2}
aalto university: {2013: 1, 2015: 2}
industry involvement: {2013: 3}
regression test failures: {2013: 2, 2015: 1}
new line: {2013: 1, 2015: 2}
random access memory: {2013: 2, 2016: 1}
github projects: {2013: 2, 2016: 1}
hci techniques: {2013: 2, 2015: 1}
exploratory testing: {2013: 3}
simulink models: {2013: 1, 2016: 2}
two refactorings: {2013: 2, 2016: 1}
architectural drift: {2013: 3}
real-time feedback: {2013: 1, 2015: 2}
crowd knowledge: {2013: 3}
path constraints: {2013: 3}
video demonstration: {2013: 2, 2015: 1}
software maintenance tasks: {2013: 3}
database design: {2013: 3}
transformational software development: {2013: 3}
architecting process: {2013: 3}
quality measurements: {2013: 3}
continuous process: {2013: 2, 2015: 1}
individual information: {2013: 3}
software security metrics: {2013: 3}
expressiveness scalability: {2013: 3}
translation-based approach: {2013: 3}
10 years: {2013: 1, 2015: 2}
variability-intensive systems: {2013: 3}
two-day workshop: {2013: 1, 2015: 2}
provisional program: {2013: 1, 2015: 2}
keynote speaker: {2013: 1, 2015: 2}
natural language analysis: {2013: 3}
cloud services: {2013: 1, 2015: 2}
requirements engineering software architecture: {2013: 1, 2015: 2}
conference officers: {2015: 1, 2016: 1, 2017: 1}
' congratulations: {2015: 1, 2016: 1, 2017: 1}
conference event publication: {2015: 1, 2016: 1, 2017: 1}
service quality issues: {2015: 3}
software engineering workflow: {2015: 3}
integration tests: {2015: 3}
34 %: {2015: 2, 2016: 1}
classification techniques: {2015: 1, 2016: 2}
outdated dependencies: {2015: 3}
selex es: {2015: 3}
coding practices: {2015: 2, 2016: 1}
architecture roots: {2015: 3}
vehicle control product line: {2015: 3}
source files: {2015: 3}
security policy: {2015: 1, 2017: 2}
app store: {2015: 1, 2016: 2}
final year students: {2015: 3}
design learning: {2015: 3}
personality traits: {2015: 3}
distance education: {2015: 3}
student collaboration patterns: {2015: 3}
first programming course: {2015: 3}
se courses: {2015: 3}
system thinking: {2015: 3}
software project managers: {2015: 3}
agile models: {2015: 3}
code hunt: {2015: 3}
sustainability design: {2015: 3}
interdisciplinary design patterns: {2015: 3}
value sensitive design: {2015: 3}
governance rules: {2015: 3}
society projects: {2015: 3}
shared attention: {2015: 3}
code snippets: {2015: 1, 2016: 2}
explicit elasticity: {2015: 3}
systematic commit histories: {2015: 3}
extracted task descriptions: {2015: 3}
task nav: {2015: 3}
app developers: {2015: 2, 2017: 1}
energy conservation: {2015: 2, 2016: 1}
security toolbox: {2015: 3}
android app: {2015: 1, 2016: 1, 2017: 1}
data invariants: {2015: 3}
android application testing: {2015: 3}
recurrent neural networks: {2015: 2, 2017: 1}
fix generation technique: {2015: 3}
model-based mutation analysis: {2015: 2, 2016: 1}
spoken utterances: {2015: 3}
abstract interpreter: {2015: 3}
adaptive security: {2015: 3}
debugging research: {2015: 3}
ltl formulae: {2015: 3}
mobile api developers: {2015: 3}
geographic distribution: {2015: 3}
operational independence: {2015: 3}
search-based algorithm: {2015: 1, 2017: 2}
participation intentions: {2015: 3}
software energy efficiency: {2015: 3}
manipulation tools: {2015: 3}
mobile app developers: {2016: 3}
gt practices: {2016: 3}
new & # x201d: {2016: 3}
code instrumentation: {2016: 2, 2017: 1}
function preconditions: {2016: 3}
differential testing: {2016: 2, 2017: 1}
c++ languages: {2016: 3}
peephole optimizations: {2016: 3}
non-terminating compilation: {2016: 3}
emerging issues: {2016: 3}
effective combination: {2016: 2, 2017: 1}
emerging issue: {2016: 3}
video tutorials: {2016: 3}
deep learning: {2016: 2, 2017: 1}
software defect prediction: {2016: 3}
connectivity-based classifiers: {2016: 3}
83 %: {2016: 3}
c# languages: {2016: 1, 2017: 2}
heart rate variability: {2016: 3}
test generation approach: {2016: 3}
imputation strategy: {2016: 3}
software effort estimation: {2016: 3}
effort data: {2016: 3}
pareto front: {2016: 3}
sbse community: {2016: 3}
android runtime library: {2016: 3}
unix operating system: {2016: 3}
statistical log analysis: {2016: 3}
reference hijacking: {2016: 3}
organizational practice: {2016: 3}
expected loss: {2016: 3}
quality experience: {2016: 3}
separate testers: {2016: 3}
review quality: {2016: 3}
blame analysis: {2016: 3}
invariant discovery: {2016: 3}
shared memory accesses: {2016: 3}
locking discipline: {2016: 3}
regression bugs: {2016: 3}
trace links: {2017: 3}
latent topics: {2017: 3}
user story information: {2017: 3}
user reviews: {2017: 3}
count-based operationalizations: {2017: 3}
developer roles: {2017: 3}
complex string operations: {2017: 3}
web api requests: {2017: 3}
wearable devices: {2017: 3}
code edits: {2017: 3}
domain-specific lexical rules: {2017: 3}
informal discussions: {2017: 3}
taint analysis: {2017: 3}
malicious misuses: {2017: 3}
reliability improvement: {2017: 3}
modular representations: {2017: 3}
localization techniques: {2017: 3}
symbolic search: {2017: 3}
compiler bugs: {2017: 3}
scheduling process: {2017: 3}
symbolic model extraction: {2017: 3}
experimentation evolution model: {2017: 3}
