1127
software and its engineering: {1986: 50, 1987: 40, 1988: 30, 1989: 46, 1991: 28, 1990: 33, 1993: 36, 1992: 40, 1994: 36, 1995: 40, 1996: 32, 1997: 26, 1998: 30, 1999: 30, 2000: 26, 2001: 26, 2002: 22, 2003: 25, 2004: 25, 2005: 31, 2006: 29, 2007: 38, 2008: 32, 2009: 31, 2010: 59, 2011: 60, 2012: 54, 2013: 43, 2014: 48, 2015: 38, 2016: 43, 2017: 16}
software notations and tools: {1986: 45, 1987: 38, 1988: 27, 1989: 45, 1991: 28, 1990: 29, 1993: 36, 1992: 39, 1994: 32, 1995: 35, 1996: 31, 1997: 25, 1998: 28, 1999: 29, 2000: 25, 2001: 26, 2002: 19, 2003: 20, 2005: 25, 2006: 26, 2008: 28, 2009: 25, 2013: 29, 2015: 31, 2016: 28, 2004: 20, 2007: 30, 2010: 43, 2011: 42, 2012: 42, 2014: 33, 2017: 13}
general programming languages: {1986: 40, 1987: 30, 1991: 28, 1990: 27, 1993: 36, 1992: 39, 1994: 31, 1995: 32, 1996: 31, 1997: 25, 1998: 26, 1999: 29, 2000: 23, 2001: 26, 2003: 17, 2005: 21, 2006: 17, 2008: 18, 2009: 18, 2013: 14, 2015: 17, 2016: 18, 1988: 23, 1989: 42, 2002: 12, 2004: 15, 2007: 18, 2010: 26, 2011: 28, 2012: 24, 2014: 21, 2017: 3}
language types: {1986: 39, 1987: 26, 1991: 28, 1993: 36, 1992: 39, 1994: 31, 1995: 28, 1996: 30, 1997: 25, 1998: 25, 1999: 27, 2000: 23, 2001: 25, 2003: 11, 2016: 7, 1988: 19, 1989: 36, 1990: 22, 2002: 7, 2004: 9, 2005: 11, 2006: 10, 2007: 10, 2008: 9, 2009: 11, 2010: 14, 2011: 18, 2012: 13, 2013: 9, 2014: 12, 2015: 10, 2017: 1}
software creation and management: {1989: 34, 1991: 9, 1990: 30, 1993: 17, 1996: 16, 1997: 12, 2007: 13, 2011: 20, 2012: 20, 2014: 12, 2015: 19, 1986: 22, 1987: 13, 1988: 7, 1992: 14, 1994: 8, 1995: 11, 1998: 12, 1999: 13, 2000: 3, 2001: 3, 2002: 8, 2003: 6, 2004: 6, 2005: 11, 2006: 11, 2008: 10, 2009: 6, 2010: 20, 2013: 17, 2016: 19, 2017: 7}
theory of computation: {1986: 15, 1987: 15, 1990: 11, 1994: 5, 1996: 16, 2000: 7, 2001: 10, 2012: 18, 1988: 7, 1989: 7, 1991: 10, 1993: 20, 1992: 4, 1995: 13, 1997: 4, 1998: 12, 1999: 17, 2002: 5, 2003: 7, 2004: 5, 2005: 7, 2006: 7, 2007: 11, 2008: 8, 2009: 4, 2010: 9, 2011: 14, 2013: 17, 2014: 16, 2015: 27, 2016: 23, 2017: 1}
language features: {1990: 19, 1996: 16, 1997: 5, 2003: 13, 2008: 14, 2009: 11, 2015: 10, 1986: 4, 1987: 14, 1988: 7, 1989: 23, 1991: 6, 1993: 12, 1992: 5, 1994: 5, 1995: 11, 1998: 5, 1999: 13, 2000: 2, 2001: 7, 2002: 10, 2004: 11, 2005: 15, 2006: 11, 2007: 14, 2010: 15, 2011: 16, 2012: 14, 2013: 5, 2014: 11, 2016: 15, 2017: 2}
object oriented languages: {1991: 28, 1993: 35, 1992: 36, 1994: 29, 1995: 27, 1996: 30, 1997: 19, 2000: 12, 2003: 7, 1989: 1, 1990: 1, 1998: 14, 1999: 11, 2001: 10, 2002: 5, 2004: 9, 2005: 8, 2006: 9, 2007: 5, 2008: 7, 2009: 4, 2010: 4, 2011: 3, 2012: 4, 2013: 2, 2014: 1, 2015: 1}
semantics and reasoning: {1994: 4, 1996: 12, 2001: 9, 2012: 16, 1986: 3, 1987: 7, 1988: 1, 1989: 3, 1991: 6, 1990: 7, 1993: 13, 1992: 3, 1995: 6, 1997: 2, 1998: 9, 1999: 11, 2000: 2, 2002: 4, 2003: 5, 2004: 4, 2005: 7, 2006: 4, 2007: 9, 2008: 7, 2009: 4, 2010: 8, 2011: 11, 2013: 15, 2014: 14, 2015: 23, 2016: 21}
software organization and properties: {1987: 9, 1988: 5, 1989: 4, 1999: 13, 2000: 6, 2002: 9, 2004: 8, 2007: 12, 2011: 12, 2012: 14, 1986: 7, 1991: 2, 1990: 3, 1993: 4, 1992: 4, 1994: 7, 1995: 6, 1996: 4, 1997: 3, 1998: 3, 2001: 6, 2003: 12, 2005: 9, 2006: 5, 2008: 7, 2009: 4, 2010: 13, 2013: 15, 2014: 6, 2015: 15, 2016: 13, 2017: 3}
computing methodologies: {1993: 8, 2000: 7, 2016: 4, 1986: 13, 1987: 13, 1988: 5, 1989: 11, 1991: 4, 1990: 7, 1992: 9, 1994: 3, 1995: 10, 1996: 2, 1997: 3, 1999: 2, 2001: 2, 2003: 1, 2005: 2, 2006: 2, 2007: 4, 2008: 2, 2009: 3, 2010: 9, 2011: 15, 2012: 11, 2013: 7, 2014: 8, 2015: 5, 2017: 2}
software verification and validation: {1993: 4, 2007: 10, 2011: 14, 2012: 15, 2014: 11, 2015: 17, 1986: 1, 1988: 1, 1989: 2, 1990: 2, 1992: 3, 1995: 2, 1996: 1, 1997: 2, 1998: 1, 1999: 6, 2001: 1, 2002: 3, 2003: 4, 2004: 2, 2005: 2, 2006: 3, 2008: 5, 2009: 4, 2010: 11, 2013: 14, 2016: 18, 2017: 4}
general and reference: {1999: 11, 2012: 9, 1986: 11, 1988: 1, 1991: 1, 1990: 1, 1993: 5, 1992: 1, 1994: 2, 1995: 9, 1996: 2, 1997: 4, 1998: 2, 2000: 4, 2002: 4, 2003: 7, 2004: 4, 2005: 2, 2006: 2, 2007: 7, 2008: 7, 2009: 1, 2010: 9, 2011: 8, 2013: 10, 2014: 7, 2015: 12, 2016: 13, 2017: 1}
software development techniques: {1989: 33, 1990: 27, 1996: 9, 1997: 3, 1986: 20, 1987: 3, 1988: 1, 1991: 4, 1993: 6, 1992: 6, 1995: 3, 1998: 3, 1999: 3, 2000: 1, 2001: 1, 2002: 3, 2003: 1, 2005: 4, 2006: 4, 2007: 2, 2008: 5, 2009: 1, 2010: 3, 2011: 2, 2012: 3, 2015: 1, 2017: 1}
cross-computing tools and techniques: {1999: 11, 2012: 9, 1986: 10, 1988: 1, 1991: 1, 1990: 1, 1993: 3, 1992: 1, 1994: 2, 1995: 7, 1996: 2, 1997: 2, 1998: 1, 2000: 3, 2002: 4, 2003: 7, 2004: 4, 2005: 2, 2006: 2, 2007: 7, 2008: 6, 2009: 1, 2010: 8, 2011: 8, 2013: 10, 2014: 7, 2015: 12, 2016: 13, 2017: 1}
software development process management: {1991: 2, 1996: 6, 2012: 8, 1986: 5, 1987: 8, 1988: 3, 1989: 8, 1990: 4, 1993: 6, 1992: 2, 1994: 7, 1995: 4, 1998: 7, 1999: 7, 2000: 1, 2002: 2, 2003: 4, 2004: 1, 2005: 4, 2006: 4, 2007: 4, 2008: 3, 2010: 5, 2011: 4, 2013: 3, 2014: 2, 2015: 11, 2016: 13}
program reasoning: {2012: 14, 1987: 1, 1989: 1, 1990: 1, 1993: 1, 1995: 1, 1996: 1, 1998: 1, 1999: 5, 2002: 2, 2003: 5, 2004: 4, 2005: 4, 2006: 1, 2007: 6, 2008: 5, 2009: 3, 2010: 7, 2011: 8, 2013: 13, 2014: 11, 2015: 13, 2016: 14}
information systems: {1988: 6, 1998: 6, 2007: 1, 2011: 2, 1986: 9, 1987: 14, 1989: 4, 1991: 7, 1990: 3, 1993: 6, 1992: 2, 1994: 9, 1995: 3, 1996: 7, 1997: 4, 1999: 8, 2000: 1, 2001: 3, 2002: 2, 2005: 1, 2008: 2, 2009: 1, 2010: 1, 2012: 1, 2013: 2, 2014: 1, 2015: 7, 2016: 2}
social and professional topics: {1992: 5, 1995: 6, 1996: 7, 1986: 8, 1987: 5, 1988: 3, 1989: 5, 1991: 2, 1993: 9, 1994: 5, 1997: 7, 1998: 10, 1999: 6, 2000: 1, 2002: 1, 2003: 2, 2004: 1, 2007: 3, 2008: 1, 2009: 1, 2010: 8, 2011: 3, 2012: 2, 2013: 1, 2014: 1, 2015: 2, 2016: 2, 2017: 1}
operating systems: {1988: 4, 1989: 4, 1999: 7, 2000: 3, 2002: 4, 2004: 5, 2007: 3, 2011: 4, 1986: 3, 1987: 8, 1991: 2, 1993: 1, 1992: 4, 1994: 3, 1995: 5, 1996: 1, 1997: 2, 1998: 1, 2001: 5, 2003: 7, 2005: 2, 2006: 1, 2008: 1, 2009: 2, 2010: 2, 2012: 3, 2013: 6, 2014: 3, 2015: 4, 2016: 1}
designing software: {1991: 3, 1986: 3, 1987: 9, 1988: 4, 1989: 9, 1990: 10, 1993: 3, 1992: 5, 1994: 7, 1995: 4, 1996: 3, 1997: 5, 1998: 7, 1999: 2, 2000: 2, 2002: 3, 2005: 4, 2006: 4, 2007: 3, 2010: 1, 2011: 3, 2012: 2, 2014: 1, 2016: 1}
contextual software domains: {1988: 4, 1989: 3, 1999: 7, 2000: 3, 2002: 4, 2004: 5, 2007: 3, 2011: 3, 1986: 3, 1987: 8, 1991: 2, 1993: 1, 1992: 4, 1994: 2, 1995: 4, 1996: 1, 1997: 2, 1998: 1, 2001: 5, 2003: 7, 2005: 2, 2006: 1, 2008: 1, 2009: 2, 2010: 2, 2012: 3, 2013: 6, 2014: 2, 2015: 4, 2016: 1, 2017: 1}
professional topics: {1992: 5, 1995: 6, 1996: 7, 1986: 5, 1987: 4, 1988: 3, 1989: 4, 1991: 2, 1993: 8, 1994: 5, 1997: 7, 1998: 9, 1999: 4, 2000: 1, 2002: 1, 2003: 2, 2004: 1, 2007: 3, 2008: 1, 2009: 1, 2010: 7, 2011: 3, 2012: 2, 2013: 1, 2014: 1, 2015: 2, 2016: 2}
development frameworks and environments: {1988: 10, 1993: 6, 1998: 2, 1986: 6, 1987: 14, 1989: 8, 1991: 2, 1990: 3, 1992: 2, 1994: 3, 1995: 5, 1996: 2, 1997: 1, 1999: 2, 2000: 1, 2001: 1, 2003: 1, 2004: 1, 2005: 4, 2006: 1, 2007: 2, 2008: 2, 2009: 4, 2010: 4, 2011: 1, 2012: 3, 2013: 2, 2017: 2}
program semantics: {1987: 3, 1988: 1, 1989: 2, 1990: 1, 1992: 1, 1995: 5, 1996: 3, 1997: 2, 1998: 3, 1999: 4, 2000: 2, 2001: 1, 2003: 1, 2004: 2, 2005: 4, 2006: 2, 2007: 4, 2008: 4, 2009: 4, 2010: 2, 2011: 4, 2012: 6, 2013: 6, 2014: 5, 2015: 12, 2016: 7}
software defect analysis: {1993: 3, 2007: 4, 2011: 6, 2014: 8, 2015: 10, 1986: 1, 1988: 1, 1989: 2, 1990: 2, 1992: 1, 1995: 1, 1996: 1, 1997: 2, 1999: 2, 2001: 1, 2002: 1, 2003: 1, 2004: 2, 2006: 2, 2008: 2, 2009: 3, 2010: 6, 2012: 7, 2013: 9, 2016: 10, 2017: 2}
software testing and debugging: {1993: 3, 2007: 4, 2011: 6, 2014: 8, 2015: 10, 1986: 1, 1988: 1, 1989: 2, 1990: 2, 1992: 1, 1995: 1, 1996: 1, 1997: 2, 1999: 2, 2001: 1, 2002: 1, 2003: 1, 2004: 2, 2006: 2, 2008: 2, 2009: 3, 2010: 6, 2012: 7, 2013: 9, 2016: 10, 2017: 2}
management of computing and information systems: {1995: 6, 1996: 7, 1986: 3, 1987: 2, 1988: 3, 1989: 3, 1991: 2, 1993: 8, 1992: 4, 1994: 5, 1997: 4, 1998: 9, 1999: 4, 2000: 1, 2002: 1, 2003: 2, 2004: 1, 2007: 2, 2008: 1, 2010: 6, 2011: 3, 2012: 2, 2013: 1, 2014: 1, 2015: 1, 2016: 2}
formal language definitions: {1986: 6, 1987: 6, 1988: 1, 1989: 1, 1990: 2, 1993: 1, 1992: 1, 1995: 6, 1997: 2, 1998: 3, 1999: 4, 2000: 3, 2001: 2, 2003: 1, 2004: 1, 2005: 3, 2006: 5, 2007: 3, 2008: 2, 2010: 5, 2011: 4, 2012: 3, 2013: 3, 2014: 3, 2015: 6, 2016: 5, 2017: 1}
type system: {2001: 2, 1986: 1, 1987: 2, 1989: 2, 1990: 2, 1994: 1, 1998: 6, 1999: 1, 2000: 1, 2002: 5, 2004: 7, 2005: 3, 2006: 2, 2007: 3, 2008: 3, 2010: 6, 2011: 5, 2012: 15, 2013: 1, 2014: 1, 2015: 2, 2016: 9}
/italic >: {1990: 7, 1986: 24, 1987: 14, 1988: 4, 1989: 12, 1994: 7, 1999: 10}
program constructs: {1994: 4, 1996: 9, 2001: 8, 1986: 3, 1987: 5, 1991: 6, 1990: 5, 1993: 12, 1992: 2, 1995: 1, 1998: 7, 1999: 2, 2002: 2, 2005: 1, 2006: 2, 2007: 2, 2009: 1, 2014: 3, 2015: 2, 2016: 1}
data management systems: {2007: 1, 2011: 1, 1986: 4, 1987: 10, 1988: 4, 1989: 4, 1991: 6, 1990: 3, 1993: 6, 1992: 2, 1994: 9, 1995: 2, 1996: 5, 1997: 3, 1998: 4, 1999: 6, 2000: 1, 2001: 1, 2002: 1, 2005: 1, 2008: 1, 2010: 1, 2012: 1}
software functional properties: {2012: 9, 1988: 1, 1990: 1, 1993: 1, 1995: 1, 1998: 1, 1999: 5, 2002: 3, 2003: 4, 2004: 2, 2005: 1, 2006: 1, 2007: 4, 2008: 4, 2009: 1, 2010: 4, 2011: 3, 2013: 6, 2014: 2, 2015: 10, 2016: 11}
program verification: {2012: 9, 1995: 1, 1998: 1, 1999: 5, 2002: 1, 2003: 4, 2004: 1, 2005: 1, 2006: 1, 2007: 3, 2008: 6, 2010: 5, 2011: 3, 2013: 5, 2014: 4, 2015: 10, 2016: 11}
formal methods: {2012: 8, 1990: 1, 1995: 1, 1998: 2, 1999: 5, 2002: 3, 2003: 4, 2004: 1, 2005: 1, 2006: 1, 2007: 4, 2008: 4, 2010: 4, 2011: 3, 2013: 5, 2014: 2, 2015: 10, 2016: 11}
software management: {1995: 3, 1996: 6, 1986: 3, 1987: 1, 1988: 2, 1989: 2, 1991: 2, 1993: 8, 1992: 4, 1997: 4, 1998: 8, 1999: 3, 2000: 1, 2002: 1, 2003: 2, 2004: 1, 2007: 2, 2008: 1, 2010: 5, 2011: 3, 2012: 2, 2013: 1, 2014: 1, 2016: 1}
concurrent programming languages: {2016: 4, 1986: 4, 1987: 3, 1988: 2, 1989: 3, 1991: 1, 1990: 6, 1993: 2, 1992: 4, 1994: 1, 1999: 2, 2000: 1, 2005: 2, 2007: 1, 2008: 1, 2009: 3, 2010: 1, 2011: 7, 2012: 2, 2013: 5, 2014: 6, 2015: 5, 2017: 1}
formal software verification: {2012: 8, 1995: 1, 1998: 1, 1999: 5, 2002: 3, 2003: 4, 2004: 1, 2005: 1, 2006: 1, 2007: 4, 2008: 3, 2010: 4, 2011: 3, 2013: 4, 2014: 1, 2015: 10, 2016: 11, 2017: 1}
memory management: {1988: 1, 1989: 2, 2002: 4, 2004: 5, 2014: 3, 1991: 2, 1993: 1, 1992: 4, 1994: 1, 1995: 3, 1997: 2, 1998: 1, 1999: 3, 2001: 5, 2003: 7, 2005: 1, 2006: 1, 2007: 2, 2009: 2, 2010: 1, 2011: 1, 2012: 2, 2013: 5, 2015: 3, 2016: 1}
formal languages and automata theory: {1986: 6, 1987: 5, 1991: 1, 1990: 2, 1993: 1, 1992: 2, 1995: 1, 1998: 4, 1999: 2, 2000: 3, 2003: 1, 2004: 1, 2005: 2, 2006: 4, 2007: 1, 2010: 2, 2011: 3, 2012: 2, 2013: 3, 2014: 2, 2015: 6, 2016: 6, 2017: 1}
garbage collection: {2004: 6, 1986: 1, 1990: 1, 1994: 1, 1999: 3, 2001: 6, 2002: 3, 2003: 7, 2005: 7, 2006: 1, 2007: 5, 2008: 2, 2009: 2, 2010: 3, 2011: 1, 2012: 2, 2013: 6, 2014: 2, 2016: 1}
software verification: {2012: 6, 1995: 1, 1998: 1, 1999: 5, 2002: 1, 2003: 4, 2004: 1, 2005: 1, 2006: 1, 2007: 3, 2008: 3, 2010: 3, 2011: 2, 2013: 3, 2014: 1, 2015: 10, 2016: 11}
< italic: {1989: 5, 1990: 13, 1986: 14, 1987: 8, 1988: 1, 1994: 4, 1999: 11}
mathematics of computing: {1986: 15, 1997: 8, 1987: 1, 1989: 3, 1993: 6, 1992: 1, 1995: 1, 1996: 1, 1998: 1, 1999: 6, 2000: 3, 2001: 1, 2003: 1, 2011: 1, 2012: 1, 2013: 1, 2014: 1, 2015: 3}
parallel programming languages: {1991: 1, 1993: 3, 1992: 3, 1996: 2, 2003: 1, 2005: 2, 2006: 1, 2007: 2, 2008: 2, 2009: 4, 2010: 8, 2011: 7, 2012: 7, 2013: 3, 2014: 5, 2017: 2}
software implementation planning: {1991: 2, 1986: 3, 1987: 5, 1988: 2, 1989: 7, 1990: 4, 1993: 1, 1992: 2, 1994: 5, 1995: 1, 1996: 2, 1998: 5, 1999: 1, 2000: 1, 2002: 1, 2005: 2, 2006: 3, 2011: 2, 2012: 1, 2014: 1, 2016: 1}
software design techniques: {1991: 2, 1986: 3, 1987: 5, 1988: 2, 1989: 7, 1990: 4, 1993: 1, 1992: 2, 1994: 5, 1995: 1, 1996: 2, 1998: 5, 1999: 1, 2000: 1, 2002: 1, 2005: 2, 2006: 3, 2011: 2, 2012: 1, 2014: 1, 2016: 1}
object-oriented programming: {1986: 11, 1987: 7, 1988: 2, 1989: 7, 1990: 4, 1994: 1, 1995: 1, 1996: 2, 2000: 2, 2001: 1, 2003: 1, 2004: 1, 2005: 1, 2006: 1, 2007: 1, 2008: 1, 2009: 1, 2010: 3, 2012: 2, 2013: 1}
computer systems organization: {1987: 6, 2000: 3, 1986: 9, 1988: 3, 1989: 2, 1991: 1, 1990: 1, 1993: 1, 1992: 1, 1994: 2, 1996: 2, 1997: 2, 1998: 1, 1999: 3, 2002: 1, 2004: 1, 2007: 1, 2010: 2, 2011: 1, 2012: 2, 2013: 1, 2014: 1, 2015: 3, 2016: 1}
human-centered computing: {1992: 7, 1998: 4, 2017: 3, 1986: 2, 1987: 3, 1988: 1, 1989: 4, 1991: 3, 1990: 1, 1993: 1, 1994: 1, 1995: 2, 1996: 7, 1999: 2, 2000: 1, 2002: 1, 2005: 1, 2006: 1, 2007: 1, 2008: 1, 2010: 1, 2011: 1, 2012: 1, 2016: 1}
concurrent computing methodologies: {2016: 4, 1986: 4, 1987: 3, 1988: 2, 1989: 3, 1991: 1, 1990: 6, 1993: 1, 1992: 3, 1994: 1, 1999: 2, 2000: 1, 2007: 1, 2011: 6, 2012: 1, 2013: 3, 2014: 3, 2015: 5}
object-oriented languages: {1986: 5, 1987: 5, 1988: 1, 1989: 5, 1994: 1, 1995: 3, 1996: 4, 1997: 1, 1998: 3, 1999: 4, 2000: 1, 2001: 2, 2003: 1, 2004: 2, 2007: 1, 2008: 3, 2009: 1, 2010: 1, 2011: 1, 2012: 2, 2013: 1, 2015: 1, 2016: 1}
runtime environments: {1987: 2, 1988: 1, 1995: 1, 2000: 1, 2001: 1, 2002: 2, 2003: 1, 2004: 1, 2006: 3, 2007: 4, 2008: 3, 2009: 3, 2010: 4, 2011: 7, 2012: 5, 2013: 6, 2014: 2, 2017: 1}
software system structures: {1987: 2, 2000: 4, 1986: 4, 1988: 1, 1989: 2, 1990: 1, 1992: 2, 1994: 3, 1996: 2, 1997: 1, 1998: 1, 1999: 1, 2001: 1, 2002: 2, 2003: 1, 2004: 2, 2005: 5, 2006: 3, 2007: 2, 2009: 1, 2010: 3, 2011: 1, 2012: 1, 2015: 1}
classes and objects: {2003: 2, 2008: 3, 1999: 1, 2001: 1, 2002: 4, 2004: 4, 2005: 4, 2006: 6, 2007: 6, 2009: 6, 2010: 4, 2011: 2, 2012: 1, 2014: 3}
type structures: {1994: 4, 2001: 3, 1986: 3, 1987: 1, 1991: 4, 1990: 4, 1993: 8, 1996: 5, 1998: 7, 2005: 1, 2006: 2, 2007: 2, 2014: 2}
human computer interaction (hci): {1992: 7, 1998: 2, 2017: 3, 1986: 2, 1987: 2, 1988: 1, 1989: 4, 1991: 3, 1990: 1, 1993: 1, 1994: 1, 1995: 2, 1996: 7, 1999: 1, 2000: 1, 2002: 1, 2005: 1, 2006: 1, 2008: 1, 2010: 1, 2011: 1, 2012: 1}
data types and structures: {1997: 3, 1986: 2, 1987: 3, 1989: 6, 1991: 2, 1990: 1, 1993: 4, 1992: 1, 1995: 2, 1996: 8, 1999: 4, 2001: 1, 2004: 2, 2005: 2, 2009: 3, 2012: 1}
integrated and visual development environments: {1998: 1, 1986: 4, 1987: 5, 1988: 7, 1989: 3, 1991: 2, 1990: 3, 1993: 5, 1992: 2, 1994: 1, 1995: 2, 1996: 1, 1997: 1, 2005: 1, 2007: 1, 2008: 2, 2009: 1, 2012: 1, 2013: 1, 2017: 1}
virtual machine: {1994: 1, 1998: 1, 1999: 4, 2000: 1, 2001: 4, 2003: 5, 2004: 2, 2005: 2, 2006: 6, 2007: 3, 2008: 6, 2010: 2, 2011: 3, 2012: 2, 2013: 2, 2015: 1}
applied computing: {1986: 16, 1987: 6, 1988: 1, 1989: 3, 1991: 1, 1993: 2, 1992: 2, 1995: 2, 1996: 3, 1997: 1, 1999: 2, 2009: 1, 2013: 2, 2014: 1}
data structures: {1999: 5, 1986: 2, 1987: 1, 1989: 1, 1995: 1, 1996: 5, 2002: 2, 2003: 1, 2004: 1, 2005: 2, 2007: 3, 2009: 2, 2011: 3, 2012: 5, 2013: 2, 2015: 2, 2016: 2, 2017: 1}
parallel computing methodologies: {1989: 1, 1991: 1, 1993: 2, 1992: 1, 1996: 2, 2003: 1, 2005: 1, 2006: 1, 2007: 2, 2008: 1, 2009: 2, 2010: 7, 2011: 7, 2012: 6, 2013: 2, 2014: 2, 2017: 2}
extra-functional properties: {1986: 1, 1990: 1, 1993: 2, 1994: 2, 1995: 1, 1996: 1, 2003: 2, 2005: 2, 2007: 3, 2008: 2, 2010: 5, 2011: 6, 2012: 2, 2013: 4, 2014: 2, 2016: 2, 2017: 2}
programming language: {1987: 5, 2006: 5, 1986: 4, 1988: 2, 1989: 2, 1990: 2, 1995: 1, 1998: 1, 2000: 1, 2008: 1, 2009: 2, 2010: 3, 2011: 4, 2012: 2, 2013: 1, 2016: 2}
concurrent programming structures: {1990: 8, 2008: 3, 1988: 2, 1989: 1, 2001: 1, 2003: 1, 2004: 1, 2005: 2, 2006: 1, 2007: 2, 2009: 2, 2010: 2, 2011: 4, 2012: 4, 2013: 2, 2014: 2}
modules / packages: {1988: 2, 1989: 6, 1990: 4, 1994: 2, 1995: 3, 1998: 1, 2001: 2, 2002: 2, 2003: 1, 2004: 2, 2005: 2, 2006: 2, 2007: 2, 2008: 1, 2009: 1, 2010: 1, 2011: 2, 2012: 2}
software post-development issues: {1989: 1, 1991: 1, 1992: 1, 1996: 3, 1999: 1, 2000: 2, 2001: 3, 2003: 2, 2004: 4, 2005: 1, 2006: 1, 2008: 2, 2009: 1, 2010: 5, 2011: 1, 2012: 3, 2013: 3, 2016: 1, 2017: 2}
java programs: {1999: 7, 2012: 2, 1998: 1, 2000: 3, 2001: 1, 2002: 1, 2003: 2, 2005: 2, 2006: 4, 2007: 1, 2008: 4, 2009: 2, 2011: 2, 2013: 1, 2015: 3, 2016: 1}
database management system engines: {1987: 3, 1989: 1, 1991: 5, 1990: 3, 1993: 6, 1992: 2, 1994: 7, 1995: 1, 1996: 1, 1997: 2, 1998: 4, 2000: 1, 2001: 1}
models of computation: {1987: 2, 2000: 3, 1986: 4, 1988: 3, 1990: 1, 1992: 1, 1995: 3, 1996: 1, 1997: 2, 1998: 1, 1999: 4, 2001: 1, 2003: 1, 2006: 1, 2007: 1, 2011: 1, 2012: 1, 2013: 1, 2014: 1, 2015: 1}
information storage systems: {1988: 2, 1986: 1, 1987: 1, 1989: 1, 1991: 1, 1996: 6, 1998: 4, 1999: 2, 2001: 2, 2002: 1, 2009: 1, 2011: 1, 2013: 1, 2014: 1, 2015: 6, 2016: 2}
static analysis: {1995: 1, 1999: 1, 2004: 2, 2005: 1, 2007: 5, 2008: 7, 2009: 2, 2010: 1, 2011: 4, 2012: 2, 2014: 3, 2015: 2, 2016: 2}
functional languages: {2001: 17, 1989: 1, 1990: 1, 1995: 1, 2002: 1, 2005: 1, 2007: 2, 2008: 1, 2010: 1, 2011: 2, 2012: 1, 2013: 1, 2014: 1, 2016: 1}
database design and models: {1986: 2, 1987: 7, 1988: 3, 1989: 3, 1991: 5, 1990: 2, 1993: 3, 1994: 3, 1995: 1, 1996: 1, 1998: 2}
design implementation: {1987: 1, 1988: 3, 1989: 2, 1994: 1, 1995: 1, 1996: 2, 1999: 1, 2000: 1, 2001: 1, 2002: 1, 2003: 1, 2004: 3, 2006: 1, 2008: 2, 2009: 2, 2010: 2, 2011: 1, 2012: 2, 2013: 1, 2014: 1, 2015: 2}
distributed programming languages: {1993: 3, 1992: 4, 1994: 1, 1995: 1, 1996: 1, 2001: 1, 2005: 3, 2008: 1, 2009: 3, 2010: 1, 2011: 1, 2012: 2, 2013: 3, 2014: 5}
software libraries and repositories: {1988: 2, 1991: 1, 1990: 2, 1993: 2, 1992: 1, 1997: 3, 1998: 3, 1999: 1, 2000: 2, 2002: 2, 2003: 1, 2005: 3, 2006: 2, 2008: 1, 2011: 1, 2012: 1, 2013: 1, 2015: 1}
theory and algorithms for application domains: {2000: 2, 1986: 1, 1987: 2, 1988: 1, 1989: 2, 1991: 1, 1990: 2, 1993: 5, 1994: 1, 1995: 2, 1996: 5, 1998: 2, 1999: 1, 2001: 1, 2008: 1}
experimental results: {1999: 4, 2000: 1, 2001: 2, 2002: 1, 2004: 2, 2005: 1, 2007: 3, 2009: 1, 2012: 1, 2013: 3, 2014: 4, 2015: 4, 2016: 2}
context specific languages: {1987: 2, 1986: 4, 1993: 3, 1992: 1, 1996: 3, 1998: 2, 1999: 1, 2001: 1, 2004: 1, 2005: 2, 2007: 1, 2010: 1, 2011: 1, 2012: 1, 2014: 1, 2017: 3}
program analysis: {2003: 1, 2004: 2, 2005: 1, 2006: 1, 2007: 1, 2008: 1, 2009: 3, 2011: 1, 2012: 5, 2013: 5, 2014: 6, 2015: 1}
multiple inheritance: {1996: 2, 2009: 2, 1986: 4, 1987: 1, 1989: 6, 1994: 1, 1995: 4, 1997: 1, 1998: 1, 1999: 3, 2006: 1, 2011: 1}
database theory: {1986: 1, 1987: 2, 1988: 1, 1989: 2, 1991: 1, 1990: 2, 1993: 5, 1994: 1, 1995: 1, 1996: 5, 1998: 2, 1999: 1, 2000: 1, 2001: 1, 2008: 1}
operational semantics: {1989: 2, 1992: 1, 1996: 1, 1998: 3, 1999: 3, 2005: 1, 2006: 1, 2007: 2, 2008: 2, 2011: 2, 2012: 4, 2016: 5}
# 039: {2015: 15, 2016: 12}
distributed systems organizing principles: {1987: 2, 1986: 3, 1988: 1, 1989: 2, 1990: 1, 1992: 2, 1994: 3, 1996: 2, 1998: 1, 1999: 1, 2001: 1, 2002: 2, 2005: 1, 2009: 1, 2010: 2, 2012: 1}
project and people management: {1995: 5, 1986: 1, 1987: 1, 1988: 1, 1989: 1, 1993: 3, 1994: 5, 1996: 3, 1998: 1, 1999: 1, 2010: 1, 2015: 1, 2016: 1}
artificial intelligence: {2000: 4, 1986: 4, 1987: 4, 1989: 1, 1991: 2, 1992: 2, 1995: 2, 2001: 1, 2008: 1, 2009: 1, 2010: 1, 2011: 1, 2012: 1}
source code: {2006: 1, 1988: 1, 1996: 1, 2002: 3, 2004: 1, 2008: 1, 2009: 6, 2010: 2, 2011: 1, 2012: 5, 2015: 3}
security and privacy: {1986: 2, 1988: 1, 1989: 1, 1993: 5, 1992: 1, 1994: 1, 1995: 2, 1998: 3, 1999: 3, 2000: 1, 2004: 1, 2009: 1, 2012: 1, 2014: 1, 2016: 1}
< /italic >: {1990: 6, 1986: 7, 1987: 3, 1989: 3, 1994: 4, 1999: 1}
programming languages: {1989: 3, 1990: 1, 1996: 1, 2002: 2, 2004: 1, 2005: 1, 2008: 1, 2010: 2, 2011: 6, 2013: 1, 2014: 2, 2015: 2, 2016: 1}
abstract data types: {1986: 1, 1987: 7, 1988: 1, 1989: 3, 1990: 1, 1993: 1, 1995: 3, 2003: 1, 2006: 1, 2009: 1, 2014: 3}
software development methods: {1996: 3, 1986: 1, 1987: 3, 1988: 1, 1989: 1, 1991: 1, 1993: 2, 1992: 2, 1995: 2, 2002: 1, 2005: 1, 2007: 1, 2010: 1, 2011: 1, 2012: 1}
process management: {1999: 4, 2000: 3, 2007: 1, 2011: 1, 1986: 1, 1987: 3, 1988: 1, 1992: 1, 1995: 2, 2005: 1, 2008: 1, 2010: 1, 2012: 1, 2015: 1}
object-oriented language: {1986: 1, 1987: 6, 1989: 3, 1990: 2, 1995: 1, 2001: 1, 2004: 2, 2005: 1, 2007: 1, 2008: 1, 2009: 1, 2010: 1, 2011: 1}
functions and subroutines: {1987: 2, 1988: 1, 1991: 5, 1990: 1, 1993: 5, 1995: 2, 1996: 2, 2004: 1, 2005: 1, 2006: 1, 2008: 1}
software architectures: {2000: 1, 2002: 2, 2003: 1, 2004: 2, 2005: 6, 2006: 3, 2007: 2, 2009: 1, 2010: 2, 2011: 1, 2015: 1}
design and analysis of algorithms: {1986: 4, 2000: 1, 1988: 1, 1989: 2, 1993: 1, 1995: 1, 1996: 5, 1999: 4, 2002: 1, 2015: 1}
# 60: {2004: 21}
discrete mathematics: {1986: 1, 1989: 1, 1993: 4, 1992: 1, 1995: 1, 1997: 5, 1999: 3, 2000: 2, 2001: 1, 2003: 1, 2011: 1}
modeling and simulation: {1986: 3, 1987: 1, 1989: 4, 1993: 2, 1992: 1, 1995: 4, 1997: 2, 2000: 2, 2017: 2}
new approach: {1990: 1, 2000: 1, 2003: 1, 2006: 1, 2010: 2, 2012: 3, 2013: 3, 2015: 4, 2016: 3, 2017: 2}
/sc >: {1995: 1, 1998: 6, 2002: 1, 2003: 4, 2005: 9}
mathematical analysis: {1986: 8, 1989: 2, 1993: 2, 1996: 1, 1998: 1, 1999: 1, 2000: 1, 2013: 1, 2015: 3}
high performance: {2002: 1, 1986: 1, 1987: 1, 1989: 1, 1994: 4, 1999: 1, 2001: 1, 2003: 1, 2005: 1, 2009: 1, 2010: 1, 2011: 1, 2012: 1, 2013: 1, 2014: 1, 2015: 2}
object-oriented programs: {2007: 2, 1988: 1, 1990: 1, 1995: 1, 1996: 3, 1998: 1, 1999: 2, 2000: 1, 2001: 2, 2002: 2, 2003: 1, 2005: 1, 2006: 1, 2010: 1}
software configuration management and version control systems: {1986: 1, 1988: 1, 1989: 2, 1993: 3, 1992: 1, 1994: 2, 1996: 2, 1998: 1, 1999: 1, 2006: 1, 2010: 1, 2015: 1, 2016: 1, 2017: 2}
process validation: {2011: 3, 1990: 1, 1993: 1, 1992: 1, 2002: 1, 2005: 1, 2006: 1, 2007: 1, 2009: 2, 2010: 1, 2012: 2, 2013: 3, 2014: 1}
wide range: {1986: 1, 1987: 2, 1988: 1, 1997: 1, 2000: 1, 2004: 2, 2005: 2, 2006: 1, 2009: 2, 2010: 1, 2011: 1, 2012: 1, 2013: 1, 2015: 1, 2016: 1}
previous work: {1990: 1, 1994: 1, 1999: 1, 2000: 1, 2001: 1, 2002: 1, 2004: 1, 2008: 1, 2010: 1, 2011: 4, 2012: 2, 2013: 1, 2014: 1, 2015: 2}
software performance: {1993: 2, 1994: 2, 1995: 1, 1996: 1, 2003: 1, 2007: 2, 2008: 1, 2010: 1, 2011: 4, 2012: 1, 2013: 2, 2014: 1}
java virtual machine: {2007: 2, 1998: 3, 1999: 1, 2000: 1, 2001: 1, 2008: 1, 2009: 1, 2010: 2, 2011: 2, 2013: 1, 2014: 2, 2016: 1}
computer graphics: {1986: 1, 1987: 5, 1988: 3, 1989: 3, 1990: 1, 1993: 2, 1992: 1, 1994: 1, 1995: 1}
object-oriented paradigm: {1986: 1, 1988: 3, 1989: 6, 1990: 2, 1994: 1, 1996: 1, 1999: 1, 2006: 1, 2007: 1}
virtual classes: {1989: 1, 1999: 9, 2006: 4, 2007: 3}
prototype implementation: {1998: 1, 1989: 1, 1999: 2, 2003: 1, 2004: 1, 2005: 1, 2008: 2, 2010: 1, 2011: 1, 2012: 1, 2013: 2, 2016: 2}
novel approach: {2009: 1, 1999: 1, 2002: 1, 2008: 1, 2010: 2, 2011: 4, 2012: 1, 2013: 1, 2015: 2, 2016: 1, 2017: 1}
record storage systems: {1986: 1, 1991: 1, 1996: 5, 1999: 1, 2001: 1, 2002: 1, 2009: 1, 2011: 1, 2013: 1, 2014: 1, 2015: 2}
information retrieval: {1987: 2, 1988: 1, 1989: 1, 1991: 2, 1994: 1, 1996: 1, 1998: 4, 2002: 1, 2013: 1, 2015: 1, 2016: 1}
software reverse engineering: {1996: 2, 1999: 1, 2000: 1, 2001: 2, 2003: 1, 2004: 3, 2005: 1, 2010: 1, 2011: 1, 2012: 1, 2013: 2}
/em >: {2016: 11, 2017: 5}
numerical analysis: {1986: 6, 1989: 2, 1996: 1, 1999: 1, 2000: 1, 2011: 1, 2013: 1, 2015: 2}
web applications: {1998: 2, 1986: 2, 1996: 1, 1999: 1, 2011: 6, 2012: 1, 2013: 1, 2015: 1}
multiple dispatch: {2009: 1, 1998: 4, 2000: 1, 2008: 9}
information systems applications: {1986: 5, 1987: 2, 1988: 1, 1993: 2, 1994: 1, 1995: 1, 1996: 1, 2008: 1, 2015: 1}
source code generation: {1996: 1, 2000: 1, 2002: 1, 2005: 1, 2010: 2, 2012: 2, 2013: 1, 2014: 5, 2017: 1}
10 %: {1999: 1, 2000: 1, 2002: 3, 2003: 2, 2006: 1, 2007: 1, 2008: 1, 2011: 2, 2012: 1, 2013: 1, 2015: 1}
< /sc >: {2000: 14, 2002: 1}
/i >: {2004: 15}
distributed computing methodologies: {1993: 2, 1992: 2, 1994: 1, 1995: 1, 1996: 1, 2001: 1, 2005: 2, 2012: 1, 2013: 1, 2014: 2}
interaction paradigms: {1998: 2, 1986: 1, 1991: 2, 1992: 2, 1994: 1, 1996: 1, 1999: 1, 2000: 1, 2005: 1, 2010: 1, 2017: 1}
virtual machines: {1998: 1, 1986: 1, 1994: 1, 2000: 1, 2002: 1, 2003: 3, 2005: 2, 2006: 1, 2010: 1, 2013: 1, 2017: 1}
case study: {2002: 2, 1986: 1, 1989: 1, 1996: 1, 2003: 1, 2004: 1, 2005: 1, 2007: 1, 2008: 1, 2011: 2, 2014: 1, 2015: 1}
type safety: {2014: 1, 1998: 1, 1999: 4, 2000: 2, 2005: 1, 2007: 1, 2008: 1, 2009: 2, 2011: 1}
physical sciences and engineering: {1986: 9, 1987: 3, 1989: 1, 1993: 1}
dependable and fault-tolerant systems and networks: {1986: 6, 1997: 1, 1999: 2, 2004: 1, 2012: 1, 2013: 1, 2014: 1, 2015: 1}
software reliability: {1986: 1, 1990: 1, 2001: 1, 2008: 1, 2010: 3, 2012: 1, 2013: 2, 2014: 1, 2016: 2, 2017: 1}
query languages: {1987: 2, 1988: 1, 1989: 1, 1991: 1, 1990: 3, 1995: 1, 1996: 1, 1997: 1, 2007: 2, 2008: 1}
software selection and adaptation: {1993: 2, 1996: 1, 2003: 1, 2007: 2, 2008: 1, 2010: 1, 2011: 3, 2012: 1, 2013: 1, 2014: 1}
parametric polymorphism: {1995: 3, 1998: 2, 2000: 1, 2005: 2, 2006: 2, 2011: 1, 2013: 2, 2016: 1}
java applications: {2000: 1, 2001: 1, 2003: 3, 2004: 1, 2005: 1, 2007: 2, 2009: 1, 2010: 1, 2012: 3}
data races: {2001: 2, 2002: 2, 2010: 1, 2011: 3, 2013: 2, 2015: 3, 2016: 1}
mathematical software: {1997: 7, 1986: 5, 2015: 1}
aspect-oriented programming: {2006: 6, 1999: 3, 2005: 1, 2008: 2, 2010: 1}
new technique: {2011: 1, 1986: 1, 1990: 1, 1996: 1, 2000: 3, 2003: 1, 2007: 1, 2009: 1, 2012: 2, 2016: 1}
graph theory: {1986: 1, 1989: 1, 1993: 4, 1992: 1, 1997: 1, 1999: 1, 2001: 2, 2003: 1, 2011: 1}
operating system: {1988: 3, 1990: 1, 1999: 1, 2000: 1, 2002: 1, 2004: 1, 2009: 1, 2014: 1, 2015: 2, 2016: 1}
module system: {1994: 2, 2003: 2, 2007: 2, 2011: 1, 2012: 6}
program execution: {1995: 1, 1999: 1, 2000: 1, 2007: 2, 2009: 1, 2010: 2, 2011: 4, 2013: 1}
< sc >: {1995: 1, 1998: 1, 2000: 4, 2002: 1, 2003: 3, 2005: 3}
small number: {2013: 2, 1987: 1, 1988: 1, 2003: 1, 2006: 1, 2008: 1, 2010: 2, 2011: 1, 2012: 1, 2015: 1}
low overhead: {2014: 3, 2000: 2, 2005: 1, 2007: 1, 2010: 1, 2011: 2, 2013: 1, 2015: 1}
existing approaches: {2015: 3, 2006: 1, 2007: 2, 2010: 1, 2011: 2, 2013: 1, 2014: 1, 2016: 1}
document types: {1986: 1, 1993: 2, 1995: 2, 1997: 2, 1998: 1, 1999: 1, 2000: 1, 2008: 1, 2010: 1}
requirements analysis: {1989: 1, 1994: 1, 1998: 3, 1999: 1, 2000: 1, 2002: 2, 2006: 1, 2007: 1, 2012: 1}
functional constructs: {1991: 3, 1993: 4, 1992: 2, 1996: 3}
design patterns: {1995: 3, 1996: 2, 1998: 4, 2009: 1, 2011: 2}
multithreaded programs: {2001: 2, 2002: 1, 2009: 1, 2010: 2, 2011: 1, 2012: 1, 2014: 3, 2016: 1}
dynamic analysis: {2003: 1, 2005: 2, 2009: 2, 2011: 2, 2014: 1, 2015: 4}
symbolic execution: {2008: 1, 2012: 3, 2013: 4, 2014: 4}
run time: {1987: 1, 1986: 1, 1989: 1, 2001: 1, 2002: 2, 2004: 1, 2006: 1, 2010: 1, 2014: 1, 2016: 1}
real-time systems: {2000: 2, 1986: 1, 1990: 1, 1993: 1, 1994: 1, 1997: 2, 2014: 1, 2015: 1, 2016: 1}
dynamic compilers: {2002: 2, 1995: 2, 2003: 1, 2004: 1, 2005: 1, 2006: 1, 2010: 1, 2013: 1, 2017: 1}
machine learning: {1986: 2, 1992: 1, 1995: 4, 1997: 1, 2006: 1, 2012: 2}
network performance evaluation: {1986: 6, 1997: 1, 1999: 2, 2004: 1, 2015: 1}
symbolic and algebraic manipulation: {1986: 2, 1989: 2, 1991: 1, 2000: 1, 2007: 1, 2011: 1, 2012: 1, 2013: 1, 2014: 1}
parallel architectures: {1986: 2, 1987: 2, 1988: 2, 1991: 1, 1996: 1, 2000: 1, 2014: 1, 2015: 1}
data structures design and analysis: {1986: 1, 1996: 5, 1999: 4, 2002: 1}
graphics systems and interfaces: {1987: 4, 1988: 1, 1989: 2, 1990: 1, 1993: 2, 1992: 1}
hardware validation: {1987: 1, 1993: 1, 2004: 1, 2005: 1, 2009: 1, 2010: 2, 2011: 3, 2016: 1}
static type system: {1989: 1, 1994: 1, 1998: 2, 2003: 1, 2010: 2, 2012: 3, 2016: 1}
new language: {1990: 1, 2003: 1, 2004: 1, 2006: 1, 2008: 1, 2010: 1, 2011: 1, 2015: 1, 2016: 2, 2017: 1}
type inference: {1994: 1, 1995: 1, 1997: 1, 2008: 1, 2009: 1, 2012: 2, 2014: 1, 2015: 1, 2016: 2}
key idea: {1996: 1, 2006: 1, 2007: 1, 2008: 1, 2012: 1, 2013: 2, 2014: 2, 2015: 1, 2016: 1}
c #: {2003: 3, 2005: 2, 2008: 1, 2009: 1, 2010: 1, 2011: 1, 2014: 2}
false positives: {2004: 1, 2010: 2, 2011: 1, 2012: 1, 2013: 2, 2014: 1, 2015: 1, 2016: 2}
file systems management: {1988: 1, 1994: 1, 1996: 1, 1998: 1, 1999: 1, 2001: 1, 2015: 3, 2016: 1}
object-oriented programming languages: {1994: 1, 1986: 1, 1987: 1, 1988: 1, 1989: 2, 1998: 1, 2002: 1, 2004: 1, 2007: 1}
embedded and cyber-physical systems: {2000: 2, 1986: 2, 1990: 1, 1992: 1, 1994: 1, 1997: 1, 2015: 1, 2016: 1}
object oriented constructs: {2005: 2, 2001: 1, 2002: 1, 2006: 1, 2007: 2, 2009: 1, 2014: 2}
control structures: {2008: 1, 1988: 1, 1990: 1, 1995: 1, 1999: 1, 2004: 1, 2005: 1, 2006: 1, 2007: 1, 2010: 1}
managed languages: {2014: 4, 2006: 1, 2008: 2, 2009: 1, 2011: 1, 2016: 1}
software development: {2017: 1, 1986: 1, 1987: 1, 1989: 1, 1999: 1, 2008: 1, 2010: 2, 2012: 2}
wide variety: {1986: 2, 1994: 1, 2001: 1, 2007: 1, 2008: 1, 2011: 2, 2014: 2}
concurrent objects: {1986: 1, 1988: 1, 1990: 3, 1995: 3, 2016: 2}
knowledge representation and reasoning: {1986: 1, 1987: 3, 1991: 1, 1992: 1, 2001: 1, 2009: 1, 2010: 1, 2011: 1}
new algorithm: {1989: 1, 1994: 1, 1999: 1, 2005: 1, 2008: 4, 2010: 1, 2012: 1}
distributed architectures: {1989: 1, 1994: 2, 1996: 1, 1998: 1, 1999: 2, 2002: 1, 2010: 1, 2012: 1}
visual languages: {1993: 2, 1992: 1, 1996: 3, 1998: 1, 2001: 1, 2005: 1, 2007: 1}
partial evaluation: {1995: 2, 2006: 1, 2011: 2, 2014: 1, 2015: 4}
large number: {1995: 1, 2003: 1, 2011: 1, 2012: 3, 2013: 2, 2015: 1, 2016: 1}
java language: {1997: 1, 2001: 2, 2004: 2, 2008: 2, 2010: 1, 2011: 1, 2017: 1}
& # 60: {2004: 10}
/scp & gt: {2007: 10}
concurrent programs: {2008: 1, 2010: 2, 2012: 3, 2013: 1, 2014: 2, 2016: 1}
allocation / deallocation strategies: {1989: 2, 1991: 2, 1992: 1, 1994: 1, 1997: 2, 2002: 1}
< italic >: {1990: 1, 1986: 1, 1987: 3, 1994: 1, 1999: 3}
generic programming: {2006: 4, 2001: 1, 2003: 2, 2009: 1, 2010: 1}
middleware for databases: {2007: 1, 2011: 1, 1986: 1, 1999: 3, 2005: 1, 2010: 1, 2012: 1}
dynamic languages: {2013: 1, 2000: 2, 2007: 1, 2010: 1, 2011: 1, 2015: 1, 2016: 2}
smalltalk-80 & trade: {1986: 5, 1987: 1, 1988: 3}
garbage collector: {1986: 1, 1997: 1, 2001: 1, 2003: 1, 2007: 1, 2008: 1, 2009: 1, 2013: 1, 2016: 1}
object-oriented systems: {1986: 2, 1988: 1, 1989: 2, 1990: 1, 1995: 2, 2000: 1}
communication hardware: {1986: 3, 1987: 1, 1989: 2, 1991: 1, 1997: 1, 2012: 1}
interfaces and storage: {1986: 3, 1987: 1, 1989: 2, 1991: 1, 1997: 1, 2012: 1}
communications management: {1987: 5, 1988: 1, 1995: 1, 2011: 1, 2013: 1}
software system: {1989: 1, 1996: 1, 1998: 1, 1999: 1, 2000: 2, 2001: 1, 2011: 2}
database and storage security: {1989: 1, 1993: 5, 1994: 1, 1998: 2}
theory of database privacy and security: {1989: 1, 1993: 5, 1994: 1, 1998: 2}
class hierarchy: {1989: 2, 1996: 1, 1997: 2, 1999: 1, 2001: 2, 2013: 1}
system description languages: {1990: 1, 1995: 1, 1996: 1, 2000: 1, 2002: 1, 2004: 1, 2007: 1, 2012: 1, 2017: 1}
empirical software validation: {1993: 1, 1992: 1, 2002: 1, 2007: 1, 2011: 2, 2012: 1, 2013: 2}
systems security: {1992: 1, 1994: 1, 1995: 1, 1998: 1, 2000: 1, 2004: 1, 2012: 1, 2014: 1, 2016: 1}
operating systems security: {1992: 1, 1994: 1, 1995: 1, 1998: 1, 2000: 1, 2004: 1, 2012: 1, 2014: 1, 2016: 1}
previous approaches: {1994: 1, 2000: 1, 2006: 2, 2009: 2, 2011: 2, 2015: 1}
formal semantics: {1995: 1, 2004: 1, 2005: 1, 2007: 1, 2008: 1, 2010: 1, 2011: 1, 2015: 1, 2016: 1}
software maintenance: {1996: 1, 1997: 1, 2003: 1, 2004: 1, 2010: 3, 2012: 1, 2016: 1}
application code: {1997: 1, 2000: 1, 2003: 1, 2008: 1, 2010: 1, 2011: 2, 2014: 1, 2016: 1}
escape analysis: {1999: 5, 2001: 2, 2008: 1, 2015: 1}
jalape & ntilde: {1999: 6, 2001: 3}
novel technique: {2000: 1, 2006: 2, 2009: 1, 2011: 1, 2013: 1, 2014: 2, 2015: 1}
false sharing: {2002: 1, 2011: 7, 2015: 1}
java application: {2002: 1, 2003: 2, 2004: 1, 2007: 1, 2010: 3, 2015: 1}
host language: {2004: 2, 2011: 3, 2014: 4}
key insight: {2005: 1, 2009: 1, 2012: 2, 2013: 3, 2014: 1, 2016: 1}
other architectures: {1987: 4, 1986: 1, 1988: 1, 1989: 1, 2010: 1}
storage management: {1988: 1, 1998: 1, 1999: 1, 2001: 1, 2015: 3, 2016: 1}
two techniques: {1988: 1, 1986: 1, 1987: 1, 1995: 1, 2000: 1, 2002: 1, 2008: 1, 2015: 1}
world wide web: {1998: 3, 1986: 2, 1987: 1, 1996: 1, 1999: 1}
parallel computing models: {2000: 3, 1986: 1, 1990: 1, 1997: 1, 2003: 1, 2006: 1}
software systems: {2017: 1, 1996: 1, 2001: 1, 2007: 1, 2009: 1, 2010: 2, 2013: 1}
computing / technology policy: {1986: 2, 1987: 1, 1989: 1, 1993: 1, 1998: 1, 1999: 2}
compile time: {1986: 2, 1988: 1, 1997: 1, 2001: 2, 2006: 1, 2012: 1}
runtime system: {1987: 1, 2007: 1, 2011: 1, 2012: 1, 2013: 3, 2015: 1}
concurrency control: {1987: 4, 2000: 1, 2003: 1, 2008: 1, 2016: 1}
computers in other domains: {1987: 2, 1989: 2, 1993: 1, 1995: 1, 1999: 1, 2014: 1}
database query languages (principles): {1987: 2, 1988: 1, 1989: 1, 1991: 1, 1990: 2, 2008: 1}
language extensions: {1990: 2, 2007: 1, 2008: 2, 2009: 1, 2011: 2}
computing standards: {1993: 1, 1995: 2, 1997: 2, 1998: 1, 1999: 1, 2000: 1}
rfcs and guidelines: {1993: 1, 1995: 2, 1997: 2, 1998: 1, 1999: 1, 2000: 1}
type systems: {1994: 1, 2006: 1, 2008: 1, 2011: 1, 2012: 2, 2013: 1, 2016: 1}
case studies: {1996: 1, 2000: 1, 2007: 1, 2009: 1, 2010: 1, 2012: 1, 2014: 1, 2015: 1}
java programming language: {1997: 1, 1998: 1, 1999: 1, 2001: 1, 2002: 1, 2005: 1, 2008: 1, 2013: 1}
execution time: {1997: 2, 2002: 1, 2004: 1, 2007: 1, 2012: 1, 2014: 2}
50 %: {1998: 1, 2002: 1, 2004: 1, 2008: 1, 2011: 2, 2013: 1, 2014: 1}
reference counting: {2001: 1, 2003: 1, 2004: 2, 2013: 4}
java benchmarks: {2002: 1, 2003: 3, 2004: 1, 2013: 1, 2014: 1, 2015: 1}
peak performance: {2002: 1, 2003: 1, 2012: 4, 2016: 1, 2017: 1}
static type systems: {2004: 1, 2006: 1, 2010: 4, 2012: 2}
predicate dispatch: {2004: 7, 2007: 1}
prior work: {2005: 1, 2007: 2, 2009: 1, 2010: 2, 2011: 1, 2012: 1}
transactional memory: {2007: 3, 2008: 2, 2011: 1, 2015: 1, 2016: 1}
existing techniques: {2008: 1, 2010: 1, 2011: 1, 2013: 1, 2015: 2, 2016: 2}
# 226: {2016: 6, 2017: 2}
computing education: {1992: 2, 1986: 1, 1987: 1, 1989: 1, 1994: 1, 2015: 1}
software prototyping: {1996: 1, 1986: 1, 1987: 1, 1989: 1, 1995: 1, 2001: 1, 2008: 1}
network protocols: {1998: 4, 1995: 3}
java classes: {2005: 6, 2001: 1}
software evolution: {2005: 2, 2001: 1, 2008: 2, 2010: 1, 2017: 1}
& lt: {2006: 1, 2007: 6}
distributed transaction monitors: {2007: 1, 2011: 1, 1986: 1, 1999: 1, 2005: 1, 2010: 1, 2012: 1}
life and medical sciences: {1986: 4, 1991: 1, 1997: 1, 2013: 1}
virtual memory: {1986: 1, 1989: 1, 1993: 1, 1992: 2, 1995: 1, 2001: 1}
design decisions: {1986: 1, 1989: 1, 1995: 1, 1997: 1, 2001: 1, 2005: 1, 2008: 1}
expressive power: {1986: 2, 1998: 1, 2000: 1, 2006: 1, 2009: 1, 2010: 1}
current implementation: {1986: 1, 1987: 2, 1988: 1, 1989: 1, 2007: 1, 2012: 1}
broad range: {1986: 1, 1995: 1, 2003: 1, 2010: 1, 2011: 1, 2015: 1, 2016: 1}
concurrent programming: {1986: 1, 2003: 1, 2007: 2, 2012: 2, 2014: 1}
model development and analysis: {1986: 1, 1995: 2, 2000: 2, 2017: 2}
enterprise computing: {1986: 2, 1987: 1, 1992: 1, 1995: 2, 1996: 1}
formal specification: {1986: 1, 1999: 1, 2000: 4, 2012: 1}
data structures and algorithms for data management: {1986: 1, 1996: 5, 1999: 1}
extensible languages: {1987: 2, 1989: 1, 2007: 1, 2009: 1, 2011: 2}
interaction devices: {1987: 1, 1989: 2, 1990: 1, 1993: 1, 1992: 1, 1996: 1}
many applications: {1987: 1, 2000: 1, 2002: 1, 2014: 2, 2015: 2}
computational reflection: {1987: 3, 1989: 4}
large systems: {1987: 3, 1995: 1, 1997: 2, 2012: 1}
existing tools: {1987: 1, 1995: 1, 2001: 1, 2005: 1, 2008: 1, 2011: 1, 2013: 1}
functional verification: {1987: 1, 1993: 1, 2010: 2, 2011: 3}
collaboration in software development: {1988: 1, 1989: 1, 1991: 1, 1992: 2, 2005: 1, 2017: 1}
run-time system: {1988: 1, 1999: 1, 2001: 2, 2008: 1, 2011: 1, 2016: 1}
large set: {1989: 1, 2008: 1, 2010: 1, 2011: 2, 2015: 2}
high degree: {1989: 1, 1990: 1, 1999: 1, 2001: 1, 2012: 1, 2015: 1, 2016: 1}
proof theory: {1991: 1, 1990: 1, 1993: 1, 2007: 1, 2012: 1, 2013: 1, 2014: 1}
client code: {1994: 1, 2006: 1, 2007: 1, 2011: 4}
separate compilation: {1995: 1, 1997: 1, 1998: 2, 2001: 1, 2008: 1, 2016: 1}
c++ programs: {1995: 1, 1996: 4, 2007: 1, 2009: 1}
recent work: {1996: 1, 2008: 1, 2010: 3, 2011: 1, 2013: 1}
benchmark programs: {1996: 1, 1999: 1, 2003: 1, 2005: 1, 2009: 1, 2011: 2}
control flow: {1996: 1, 2002: 1, 2004: 1, 2012: 1, 2013: 1, 2016: 1, 2017: 1}
25 %: {1996: 1, 1999: 1, 2001: 1, 2004: 1, 2010: 1, 2013: 1, 2015: 1}
type parameters: {1997: 1, 1998: 1, 2003: 1, 2005: 2, 2006: 1, 2008: 1}
's execution: {1998: 1, 1999: 1, 2010: 2, 2012: 1, 2013: 2}
nested classes: {1999: 5, 2006: 1, 2010: 1}
test cases: {2000: 1, 2001: 2, 2002: 2, 2013: 1, 2016: 1}
java bytecode: {2000: 1, 2008: 2, 2009: 2, 2015: 1, 2016: 1}
data structure: {2001: 1, 2002: 1, 2003: 1, 2007: 1, 2008: 1, 2011: 1, 2015: 1}
past work: {2001: 1, 2004: 1, 2010: 1, 2013: 4}
garbage collectors: {2001: 1, 2002: 1, 2003: 2, 2004: 1, 2013: 1, 2014: 1}
novel algorithm: {2002: 2, 2008: 1, 2011: 2, 2014: 1, 2015: 1}
ownership types: {2002: 5, 2006: 1, 2008: 1}
java code: {2002: 1, 2004: 2, 2007: 1, 2008: 1, 2011: 1, 2015: 1}
program behavior: {2003: 1, 2004: 1, 2005: 1, 2007: 1, 2011: 1, 2012: 2}
generic types: {2003: 1, 2005: 1, 2012: 1, 2013: 3, 2016: 1}
core calculus: {2005: 1, 2010: 1, 2011: 1, 2012: 1, 2013: 1, 2015: 1, 2016: 1}
high-level language: {2006: 1, 2008: 1, 2011: 1, 2012: 1, 2014: 2, 2016: 1}
/sub >: {2006: 3, 2010: 1, 2016: 3}
search space: {2006: 1, 2008: 3, 2015: 2, 2016: 1}
memory safety: {2007: 1, 2008: 1, 2011: 2, 2013: 2, 2016: 1}
empirical study: {2008: 2, 2010: 3, 2014: 2}
unsafe code: {2008: 7}
parallel programming: {2009: 1, 2011: 2, 2013: 2, 2016: 2}
scripting languages: {2009: 2, 2010: 1, 2012: 4}
points-to analysis: {2009: 1, 2010: 1, 2013: 2, 2015: 1, 2016: 2}
real-world programs: {2010: 1, 2012: 2, 2013: 1, 2015: 3}
program state: {2011: 3, 2012: 1, 2013: 1, 2014: 1, 2017: 1}
# 8212: {2015: 5, 2016: 2}
computing education programs: {1992: 2, 1987: 1, 1989: 1, 1994: 1, 2015: 1}
computer science education: {1992: 2, 1987: 1, 1989: 1, 1994: 1, 2015: 1}
rapid application development: {1996: 1, 1986: 1, 1987: 1, 1989: 1, 1995: 1, 2002: 1}
20 %: {1999: 2, 2002: 1, 2006: 1, 2009: 1, 2011: 1}
concurrency bugs: {2011: 1, 2010: 1, 2013: 1, 2014: 1, 2017: 2}
domain-specific language: {2015: 2, 1999: 1, 2009: 1, 2012: 1, 2016: 1}
graph algorithms: {1986: 1, 1989: 1, 1999: 2, 2003: 1, 2016: 1}
inheritance hierarchy: {1986: 2, 1987: 1, 1994: 1, 1996: 1, 2002: 1}
distributed applications: {1986: 1, 1997: 1, 1998: 1, 1999: 1, 2000: 1, 2004: 1}
symbolic and algebraic algorithms: {1986: 2, 1989: 2, 1991: 1, 2000: 1}
message passing: {1986: 1, 1987: 5}
operations research: {1986: 1, 1987: 3, 1995: 1, 1996: 1}
decision support systems: {1986: 1, 1987: 1, 1988: 1, 1995: 1, 1996: 1, 2015: 1}
object-oriented system: {1986: 1, 1987: 1, 1988: 1, 1989: 1, 1998: 1, 2000: 1}
graphics input devices: {1987: 1, 1989: 2, 1990: 1, 1993: 1, 1992: 1}
collaborative and social computing: {1987: 1, 1998: 2, 1999: 1, 2007: 1, 2016: 1}
search engine architectures and scalability: {1987: 1, 1991: 1, 1998: 3, 2002: 1}
related objects: {1987: 1, 2005: 1, 2007: 3, 2008: 1}
composite objects: {1987: 1, 1988: 1, 1998: 2, 2000: 1, 2001: 1}
programming logic: {1987: 1, 1989: 1, 1990: 1, 2012: 2, 2013: 1}
30 %: {1987: 1, 1999: 2, 2013: 2, 2016: 1}
persistent objects: {1987: 1, 1988: 1, 1989: 2, 2002: 1, 2003: 1}
user interface: {1988: 3, 1989: 1, 1990: 1, 1995: 1}
programming teams: {1988: 1, 1989: 1, 1991: 1, 1992: 2, 2005: 1}
language constructs: {1988: 1, 1990: 1, 1996: 1, 2004: 1, 2010: 1, 2011: 1}
actor model: {1989: 2, 1990: 3, 2012: 1}
overall performance: {1989: 1, 1999: 1, 2000: 1, 2007: 1, 2013: 1, 2015: 1}
resulting system: {1989: 1, 1994: 1, 2003: 1, 2006: 1, 2010: 1, 2015: 1}
specification languages: {1990: 1, 1995: 1, 2000: 1, 2004: 1, 2007: 1, 2012: 1}
error handling and recovery: {1990: 1, 2005: 1, 2006: 1, 2007: 1, 2008: 1, 2012: 1}
type information: {1990: 2, 2000: 1, 2003: 1, 2012: 1, 2016: 1}
language support: {1990: 1, 1997: 2, 1999: 1, 2005: 1, 2012: 1}
dispatch tables: {1994: 5, 1995: 1}
recent advances: {1994: 1, 2011: 2, 2013: 1, 2015: 1, 2016: 1}
object oriented development: {1995: 1, 2001: 1, 2005: 2, 2009: 1, 2010: 1}
first step: {1995: 1, 2004: 1, 2008: 1, 2012: 1, 2014: 1, 2016: 1}
performance evaluation: {1995: 1, 1999: 1, 2010: 1, 2013: 1, 2015: 1, 2017: 1}
object oriented frameworks: {1995: 1, 2001: 1, 2005: 2, 2009: 1, 2010: 1}
runtime systems: {1997: 1, 2009: 1, 2010: 3, 2017: 1}
large amounts: {1998: 1, 2006: 1, 2009: 1, 2013: 1, 2015: 1, 2017: 1}
new techniques: {1999: 1, 2002: 1, 2005: 1, 2009: 1, 2012: 1, 2015: 1}
client-server architectures: {1999: 2, 2002: 1, 2005: 1, 2009: 1, 2010: 1}
steady-state performance: {2000: 1, 2007: 1, 2011: 4}
incremental computation: {2001: 2, 2011: 1, 2014: 1, 2015: 2}
write barriers: {2002: 4, 2011: 1, 2013: 1}
partial order: {2002: 6}
two versions: {2002: 1, 2004: 1, 2008: 1, 2012: 2, 2015: 1}
behavioral reflection: {2003: 1, 2004: 1, 2006: 2, 2010: 2}
allocation sites: {2003: 1, 2004: 1, 2010: 1, 2012: 1, 2013: 2}
abstract state: {2004: 3, 2005: 3}
's type system: {2004: 1, 2007: 1, 2010: 1, 2011: 2, 2013: 1}
experimental evaluation: {2006: 1, 2011: 1, 2013: 1, 2015: 1, 2016: 2}
ownership transfer: {2007: 4, 2013: 2}
modern ides: {2009: 1, 2010: 2, 2011: 1, 2012: 1, 2013: 1}
many bugs: {2010: 2, 2015: 1, 2016: 3}
non-java memory: {2010: 6}
parallel hardware: {2010: 1, 2011: 1, 2012: 1, 2013: 1, 2014: 1, 2016: 1}
syntax definitions: {2010: 6}
sugar libraries: {2011: 6}
recursive modules: {2011: 6}
android apps: {2012: 1, 2013: 4, 2015: 1}
< em: {2016: 5, 2017: 1}
extensive use: {1986: 1, 2002: 1, 2004: 1, 2005: 1, 2011: 1}
distributed systems: {1987: 1, 1986: 1, 1994: 1, 1999: 1, 2008: 1}
current state: {1995: 2, 2006: 1, 2012: 2}
rapid prototyping: {1996: 3, 1990: 1, 1994: 1}
web services: {1998: 2, 1999: 1, 2011: 2}
embedded software: {2000: 2, 1986: 1, 1997: 1, 2015: 1}
embedded systems: {2000: 2, 1986: 1, 1997: 1, 2003: 1}
abstract classes: {2006: 1, 1989: 1, 1994: 1, 1995: 2}
production runs: {2007: 1, 2011: 3, 2014: 1}
earlier work: {2008: 2, 1998: 1, 2006: 1, 2012: 1}
evaluation results: {2011: 1, 2010: 1, 2012: 2, 2013: 1}
many languages: {2013: 2, 2010: 1, 2016: 1, 2017: 1}
direct access: {2015: 1, 1990: 1, 1995: 1, 1999: 1, 2006: 1}
object-based language: {1986: 2, 1987: 1, 1989: 1, 2012: 1}
programming environment: {1986: 1, 1988: 1, 1989: 1, 2004: 1, 2010: 1}
several examples: {1986: 1, 1998: 2, 2005: 1, 2006: 1}
integrated circuits: {1986: 1, 1987: 1, 1989: 1, 1995: 1, 2010: 1}
virtual copies: {1986: 5}
instance variables: {1986: 1, 1987: 2, 1989: 1, 1995: 1}
simulation types and techniques: {1986: 1, 1987: 1, 1993: 2, 1995: 1}
probability and statistics: {1986: 2, 1987: 1, 2012: 1, 2014: 1}
new method: {1986: 1, 2000: 1, 2011: 1, 2012: 1, 2013: 1}
efficient implementation: {1986: 1, 1989: 2, 2006: 1, 2012: 1}
target language: {1986: 2, 2005: 1, 2010: 1, 2012: 1}
optimizing compiler: {1986: 1, 1994: 1, 2000: 2, 2014: 1}
computing and business: {1986: 1, 1987: 1, 1993: 1, 1996: 1, 2007: 1}
software components: {1986: 1, 1998: 1, 2010: 2, 2016: 1}
two approaches: {1986: 1, 1987: 1, 1997: 1, 2013: 1, 2015: 1}
database systems: {1986: 1, 1987: 3, 1988: 1}
computational complexity and cryptography: {1986: 2, 1995: 3}
expert systems: {1986: 1, 1988: 1, 1995: 1, 1996: 1, 2015: 1}
multiple instruction: {1986: 1, 1987: 1, 1988: 2, 2000: 1}
multiple data: {1986: 1, 1987: 1, 1988: 2, 2000: 1}
computer-aided design: {1987: 4, 1989: 1}
arts and humanities: {1987: 3, 1988: 1, 1989: 1}
peer-to-peer retrieval: {1987: 1, 1998: 3, 2002: 1}
promising approach: {1987: 1, 2001: 1, 2006: 2, 2012: 1}
data flow languages: {1987: 1, 1995: 1, 2007: 1, 2009: 1, 2014: 1}
many advantages: {1987: 1, 1988: 1, 1994: 1, 1997: 1, 2002: 1}
object-oriented programming language: {1987: 1, 1988: 1, 1989: 1, 1997: 1, 1998: 1}
software engineers: {1988: 1, 1998: 1, 2001: 1, 2010: 1, 2011: 1}
complex interactions: {1988: 1, 1994: 1, 2006: 1, 2012: 1, 2015: 1}
thinglab ii: {1989: 5}
recent studies: {1989: 1, 2010: 1, 2011: 2, 2014: 1}
rewrite systems: {1991: 1, 1990: 1, 1992: 1, 2016: 2}
grammars and context-free languages: {1991: 1, 1990: 1, 1992: 1, 2016: 2}
functional programming: {1990: 1, 2007: 2, 2013: 1, 2016: 1}
parameterized classes: {1990: 2, 1997: 1, 1999: 2}
database query processing: {1990: 1, 1995: 1, 1996: 1, 2000: 1, 2001: 1}
database query processing and optimization (theory): {1990: 1, 1995: 1, 1996: 1, 2000: 1, 2001: 1}
object-oriented databases: {1990: 2, 1994: 2, 2001: 1}
programming model: {1990: 1, 1995: 1, 2005: 1, 2007: 1, 2012: 1}
access control: {1992: 1, 2000: 1, 2002: 1, 2004: 2}
distributed system: {1994: 1, 1998: 1, 2012: 2, 2016: 1}
key feature: {1994: 1, 2003: 1, 2010: 1, 2013: 2}
whole program: {1994: 1, 2004: 1, 2012: 1, 2016: 2}
dynamic dispatch: {1994: 1, 1997: 2, 2004: 1, 2015: 1}
different languages: {1995: 1, 1996: 1, 1998: 1, 2002: 1, 2008: 1}
95 %: {1995: 1, 1999: 2, 2009: 1, 2015: 1}
class libraries: {1995: 1, 1996: 1, 1997: 1, 1999: 1, 2004: 1}
f-bounded polymorphism: {1995: 1, 1998: 2, 2005: 1, 2009: 1}
programming models: {1995: 1, 2010: 1, 2011: 1, 2012: 1, 2013: 1}
code generation: {1996: 1, 2000: 1, 2001: 1, 2004: 1, 2010: 1}
modern hardware: {1996: 1, 1997: 1, 2011: 1, 2012: 1, 2014: 1}
method invocations: {1996: 2, 2004: 1, 2015: 1, 2016: 1}
application performance: {1997: 1, 2002: 2, 2003: 1, 2009: 1}
new model: {1998: 1, 2000: 1, 2005: 1, 2011: 1, 2016: 1}
static types: {1998: 1, 2008: 1, 2014: 1, 2016: 2}
specialized application languages: {1999: 1, 2005: 1, 2011: 1, 2012: 1, 2014: 1}
featherweight java: {1999: 3, 2003: 1, 2010: 1}
type rules: {1999: 1, 2007: 1, 2015: 3}
first time: {1999: 1, 2006: 1, 2014: 1, 2015: 1, 2016: 1}
one thread: {1999: 1, 2000: 1, 2006: 1, 2012: 2}
significant performance improvements: {1999: 1, 2006: 1, 2012: 1, 2013: 1, 2015: 1}
java program: {1999: 2, 2003: 1, 2005: 1, 2007: 1}
runtime overhead: {2000: 2, 2001: 1, 2007: 1, 2011: 1}
open classes: {2000: 5}
geometric mean: {2000: 1, 2009: 1, 2012: 2, 2016: 1}
one another: {2000: 1, 2001: 1, 2005: 1, 2010: 1, 2013: 1}
dynamic compiler: {2001: 1, 2006: 2, 2012: 1, 2015: 1}
main contribution: {2002: 1, 2005: 1, 2011: 1, 2016: 2}
dynamic proxies: {2002: 1, 2006: 4}
multiparadigm languages: {2003: 2, 2006: 1, 2008: 1, 2013: 1}
core language: {2003: 1, 2008: 1, 2009: 1, 2011: 1, 2013: 1}
memory accesses: {2003: 1, 2006: 2, 2008: 1, 2009: 1}
new code: {2004: 2, 2009: 1, 2012: 2}
reference immutability: {2004: 1, 2005: 3, 2012: 1}
nested inheritance: {2004: 3, 2006: 2}
performance problems: {2004: 1, 2011: 1, 2014: 3}
domain-specific languages: {2004: 1, 2010: 1, 2011: 2, 2014: 1}
domain specific languages: {2004: 1, 2010: 1, 2011: 1, 2017: 2}
's analysis: {2005: 5}
java 5: {2005: 1, 2008: 4}
explicit memory management: {2005: 5}
parallel execution: {2005: 1, 2010: 1, 2011: 2, 2013: 1}
sequential program: {2005: 2, 2011: 1, 2012: 1, 2016: 1}
call stack: {2006: 1, 2009: 1, 2010: 1, 2011: 1, 2013: 1}
code snippets: {2006: 2, 2012: 3}
path-dependent types: {2007: 1, 2014: 3, 2016: 1}
access permissions: {2007: 4, 2008: 1}
early phase termination: {2007: 5}
abstract machines: {2007: 1, 2011: 1, 2012: 1, 2013: 1, 2014: 1}
prior approaches: {2008: 1, 2012: 1, 2013: 1, 2015: 1, 2016: 1}
constrained types: {2008: 1, 2012: 4}
state space: {2008: 1, 2010: 1, 2013: 2, 2016: 1}
two programs: {2009: 1, 2014: 4}
assertion checking: {2010: 2, 2011: 3}
> h <: {2010: 5}
self-adjusting computation: {2011: 5}
set-based pre-analysis: {2013: 5}
sequential consistency: {2013: 1, 2015: 3, 2016: 1}
# 8217: {2015: 2, 2016: 3}
new ideas: {1986: 1, 2000: 1, 1997: 1, 1999: 1}
< /italic: {1986: 2, 1989: 2}
network types: {1998: 2, 1999: 2}
native code: {1998: 1, 2003: 1, 2011: 2}
single thread: {1999: 2, 2014: 1, 2016: 1}
90 %: {1999: 1, 2003: 1, 2005: 1, 2017: 1}
real-time systems software: {2000: 2, 1986: 1, 1997: 1}
performance improvements: {2002: 1, 1999: 1, 2009: 1, 2011: 1}
memory consumption: {2002: 1, 2007: 1, 2008: 1, 2011: 1}
pause times: {2004: 1, 2001: 1, 2003: 2}
micro patterns: {2005: 4}
rich set: {2005: 2, 2004: 1, 2014: 1}
calling context tree: {2007: 1, 2012: 2, 2013: 1}
15 %: {2011: 1, 2008: 1, 2012: 2}
existing code: {2013: 1, 2009: 1, 2010: 1, 2016: 1}
benchmark applications: {2014: 1, 2003: 1, 2007: 1, 2015: 1}
high efficiency: {1986: 1, 2007: 1, 2011: 1, 2013: 1}
object-oriented interface: {1986: 2, 1989: 1, 1990: 1}
performance measurements: {1986: 1, 1987: 1, 2008: 1, 2010: 1}
building blocks: {1986: 2, 2010: 1, 2016: 1}
differential equations: {1986: 4}
ordinary differential equations: {1986: 4}
every object: {1986: 1, 1989: 1, 1998: 1, 1999: 1}
three steps: {1986: 1, 1989: 1, 2004: 1, 2009: 1}
mathematical foundations of cryptography: {1986: 1, 1995: 1, 1999: 2}
information theory: {1986: 1, 1999: 2, 2008: 1}
computer vision: {1986: 2, 1991: 1, 1995: 1}
multiple representations: {1986: 1, 1996: 1, 2014: 2}
object-oriented computation: {1986: 1, 1987: 1, 1988: 1, 1990: 1}
object-oriented design: {1986: 1, 1989: 2, 2009: 1}
multiple views: {1986: 1, 1987: 1, 1990: 1, 1997: 1}
input data: {1986: 1, 2011: 1, 2012: 1, 2015: 1}
modeling methodologies: {1986: 1, 1995: 1, 2017: 2}
limited form: {1986: 1, 1987: 1, 1998: 1, 2007: 1}
complex objects: {1986: 1, 1990: 1, 1994: 1, 1997: 1}
complexity classes: {1986: 2, 1995: 2}
architecture (buildings): {1987: 3, 1989: 1}
multiple layers: {1987: 1, 1997: 1, 2008: 1, 2015: 1}
composite object: {1987: 2, 1998: 1, 2000: 1}
design space: {1987: 1, 2000: 1, 2007: 1, 2010: 1}
personal computers and pc applications: {1987: 1, 1989: 1, 1999: 1, 2014: 1}
special purpose systems: {1987: 3, 1988: 1}
effective use: {1987: 1, 1996: 2, 1998: 1}
common lisp: {1987: 2, 1990: 1, 2010: 1}
large programs: {1987: 1, 1999: 1, 2007: 1, 2012: 1}
project management techniques: {1987: 1, 1994: 1, 1995: 1, 1997: 1}
two models: {1987: 1, 1996: 3}
simulation languages: {1987: 2, 1989: 1, 1997: 1}
database system: {1987: 1, 1988: 2, 1989: 1}
application programmers: {1988: 1, 2004: 1, 2006: 1, 2012: 1}
shape modeling: {1988: 1, 1989: 2, 1995: 1}
one object: {1988: 1, 2002: 1, 2007: 1, 2008: 1}
several languages: {1988: 1, 2006: 1, 2008: 2}
object persistence: {1989: 3, 1990: 1}
shared memory: {1989: 1, 2010: 1, 2012: 1, 2016: 1}
performance penalty: {1989: 1, 1995: 1, 2003: 1, 2011: 1}
code data: {1989: 1, 2011: 1, 2016: 2}
general concept: {1989: 1, 1997: 1, 1999: 1, 2002: 1}
incremental algorithm: {1989: 1, 2001: 1, 2002: 1, 2016: 1}
modern object-oriented languages: {1989: 1, 2006: 1, 2009: 1, 2012: 1}
computational biology: {1991: 1, 1997: 1, 2013: 1, 2016: 1}
concurrent object-oriented language: {1990: 1, 1994: 3}
new versions: {1990: 1, 2004: 1, 2008: 1, 2011: 1}
analysis techniques: {1990: 1, 1996: 1, 2002: 1, 2014: 1}
parallel programs: {1990: 1, 2009: 1, 2011: 1, 2012: 1}
's performance: {1990: 1, 2010: 1, 2011: 1, 2014: 1}
key features: {1990: 1, 1999: 1, 2006: 1, 2015: 1}
lambda calculus: {1993: 2, 1998: 1, 2011: 1}
machine learning approaches: {1992: 1, 1997: 1, 2006: 1, 2012: 1}
previous algorithms: {1994: 1, 2004: 1, 2008: 1, 2012: 1}
higher-order acl: {1994: 4}
parallel and distributed dbmss: {1994: 1, 1998: 3}
many programs: {1994: 1, 2007: 1, 2009: 1, 2011: 1}
performance results: {1994: 1, 1999: 1, 2005: 1, 2011: 1}
new mechanism: {1994: 1, 1998: 1, 2010: 1, 2014: 1}
implementation techniques: {1995: 2, 1998: 1, 2003: 1}
state machines: {1995: 1, 1998: 1, 2011: 1, 2015: 1}
new object: {1995: 1, 2004: 1, 2010: 1, 2014: 1}
virtual function tables: {1995: 1, 1996: 1, 1997: 1, 2006: 1}
different implementations: {1995: 1, 2002: 3}
objects classes: {1995: 1, 2000: 1, 2007: 1, 2012: 1}
class hierarchy analysis: {1996: 1, 2000: 3}
program p: {1996: 2, 2013: 2}
several algorithms: {1996: 1, 2005: 1, 2012: 1, 2016: 1}
21 %: {1996: 1, 1999: 1, 2002: 1, 2015: 1}
large software systems: {1996: 1, 2005: 1, 2006: 1, 2008: 1}
two schools: {1996: 3, 1997: 1}
abstract model: {1996: 2, 2012: 2}
corba event service: {1997: 2, 2000: 2}
class loaders: {1998: 2, 2000: 1, 2003: 1}
java platform: {1998: 1, 2002: 1, 2007: 1, 2014: 1}
object ownership: {1998: 1, 2006: 1, 2007: 1, 2010: 1}
object references: {1998: 1, 1999: 1, 2001: 1, 2002: 1}
specific properties: {1998: 3, 2001: 1}
one hand: {1998: 1, 2005: 1, 2010: 1, 2015: 1}
language extension: {1998: 1, 2012: 2, 2015: 1}
tool support: {1998: 1, 2008: 1, 2011: 1, 2015: 1}
distributed retrieval: {1998: 3, 2002: 1}
storage architectures: {1998: 3, 2002: 1}
distributed storage: {1998: 3, 2002: 1}
extra code: {1998: 1, 2005: 2, 2007: 1}
program properties: {1998: 1, 1999: 1, 2002: 1, 2010: 1}
visitor pattern: {1998: 1, 1999: 2, 2005: 1}
synchronization operations: {1999: 4}
70 %: {1999: 1, 2002: 1, 2016: 2}
empirical results: {1999: 1, 2000: 1, 2009: 1, 2012: 1}
multiple dispatching: {1999: 3, 2000: 1}
data layout: {1999: 2, 2002: 1, 2015: 1}
generational collectors: {1999: 1, 2003: 2, 2004: 1}
multiple threads: {2000: 2, 2011: 1, 2014: 1}
jalape & amp: {2000: 4}
standard libraries: {2000: 1, 2011: 1, 2015: 2}
dynamic features: {2000: 1, 2009: 2, 2012: 1}
dynamic compilation: {2000: 1, 2001: 2, 2006: 1}
virtual calls: {2000: 3, 2001: 1}
object cache: {2000: 4}
backup code: {2000: 4}
safe language: {2000: 1, 2001: 1, 2002: 1, 2015: 1}
pre- post-conditions: {2001: 4}
static program analysis: {2001: 1, 2004: 1, 2014: 2}
incremental compilers: {2001: 1, 2002: 1, 2012: 1, 2013: 1}
resource control: {2001: 3, 2012: 1}
optimization opportunities: {2001: 1, 2003: 2, 2013: 1}
dynamic class loading: {2001: 2, 2003: 1, 2011: 1}
software defects: {2001: 1, 2002: 1, 2008: 1, 2010: 1}
large amount: {2001: 1, 2003: 1, 2008: 1, 2015: 1}
software developers: {2002: 1, 2006: 1, 2010: 2}
development time: {2002: 1, 2010: 3}
entity beans: {2002: 4}
dependent classes: {2002: 2, 2007: 2}
generic class: {2003: 1, 2009: 3}
compiler optimizations: {2003: 1, 2012: 1, 2014: 1, 2017: 1}
java workloads: {2003: 2, 2004: 2}
hot spots: {2003: 2, 2010: 1, 2012: 1}
empirical evaluation: {2003: 1, 2010: 1, 2011: 2}
novel way: {2003: 1, 2007: 1, 2013: 1, 2017: 1}
program performance: {2004: 1, 2005: 1, 2011: 2}
modified version: {2004: 2, 2009: 1, 2013: 1}
1 %: {2004: 1, 2006: 1, 2007: 1, 2015: 1}
's source code: {2004: 1, 2008: 2, 2013: 1}
proposed approach: {2004: 1, 2011: 2, 2013: 1}
method calls: {2005: 2, 2006: 1, 2015: 1}
jit compiler: {2005: 1, 2008: 1, 2012: 1, 2014: 1}
jikes rvm: {2005: 1, 2012: 2, 2013: 1}
recent years: {2005: 1, 2007: 1, 2011: 1, 2012: 1}
sequential execution: {2005: 1, 2009: 1, 2011: 2}
very high level languages: {2005: 1, 2009: 1, 2010: 1, 2012: 1}
's law: {2005: 1, 2009: 2, 2011: 1}
type soundness: {2006: 1, 2010: 2, 2016: 1}
design fragments: {2006: 4}
transactional programs: {2006: 1, 2012: 1, 2016: 2}
c code: {2007: 4}
recent research: {2007: 1, 2010: 1, 2011: 1, 2015: 1}
tream & lt: {2007: 4}
f & lt: {2007: 4}
mandatory calls: {2007: 4}
multiple ownership: {2007: 4}
mutable objects: {2008: 1, 2015: 2, 2016: 1}
real-world applications: {2008: 2, 2011: 1, 2012: 1}
3 %: {2008: 1, 2011: 1, 2014: 2}
separation logic: {2008: 1, 2010: 1, 2014: 1, 2015: 1}
race conditions: {2008: 2, 2009: 1, 2010: 1}
runtime environment: {2008: 1, 2009: 1, 2015: 1, 2017: 1}
replay time: {2008: 2, 2012: 2}
string data: {2008: 4}
live heap: {2008: 4}
intersection types: {2008: 1, 2016: 3}
high-level languages: {2008: 1, 2009: 1, 2011: 1, 2012: 1}
concurrency errors: {2009: 2, 2013: 2}
calling context: {2009: 2, 2012: 1, 2013: 1}
c programs: {2009: 2, 2010: 1, 2014: 1}
context-free grammars: {2009: 1, 2014: 1, 2015: 2}
program optimizations: {2010: 2, 2012: 1, 2014: 1}
program inputs: {2010: 2, 2011: 1, 2015: 1}
separate checking: {2010: 4}
j & <: {2010: 4}
hot paths: {2010: 1, 2012: 3}
performance bugs: {2011: 1, 2014: 1, 2015: 2}
internal dsls: {2011: 4}
external dsls: {2011: 4}
virtual value: {2011: 4}
key challenge: {2012: 1, 2014: 2, 2015: 1}
gpu kernels: {2012: 2, 2013: 2}
data race: {2012: 1, 2013: 2, 2015: 1}
similar bugs: {2012: 4}
rc immix: {2013: 4}
weak memory model: {2013: 2, 2015: 2}
river trail: {2013: 4}
free lunch: {2014: 4}
statistical debugging: {2014: 3, 2016: 1}
build system: {2014: 1, 2015: 3}
mobile apps: {2014: 2, 2015: 2}
html5 applications: {2015: 4}
machine-code synthesis: {2015: 1, 2016: 3}
disjointness domains: {2015: 4}
effect systems: {2015: 3, 2017: 1}
intel &: {2016: 4}
/italic > <: {1986: 2, 1987: 1}
macro data flow model: {1987: 3}
available memory: {1989: 1, 2016: 2}
network properties: {1993: 1, 1986: 1, 1989: 1}
web-based interaction: {1998: 2, 1999: 1}
untrusted code: {1998: 1, 1999: 1, 2013: 1}
standard java: {1998: 1, 1997: 1, 2000: 1}
process synchronization: {1999: 2, 2008: 1}
different types: {2001: 1, 1990: 1, 2010: 1}
custom allocators: {2002: 3}
full range: {2002: 1, 2007: 1, 2013: 1}
good throughput: {2004: 3}
sup > 2 & # 60: {2004: 3}
large portion: {2005: 1, 2011: 1, 2014: 1}
75 %: {2005: 1, 2006: 1, 2015: 1}
application domains: {2005: 1, 1990: 1, 1997: 1}
/b & gt: {2006: 3}
special attention: {2006: 1, 1989: 2}
context sensitivity: {2007: 1, 2013: 2}
end result: {2011: 1, 2006: 1, 2014: 1}
average overhead: {2014: 1, 2011: 1, 2013: 1}
7 %: {2014: 1, 1999: 1, 2009: 1}
large space: {2015: 1, 2010: 1, 2011: 1}
fine-grained control: {2015: 2, 2009: 1}
mathematical optimization: {1986: 2, 2015: 1}
trellis/owl language: {1986: 2, 1987: 1}
first class objects: {1986: 1, 1995: 1, 1998: 1}
internet communications tools: {1986: 2, 1996: 1}
network architectures: {1986: 2, 1997: 1}
computer crime: {1986: 1, 1998: 1, 1999: 1}
dynamic memory: {1986: 1, 1989: 1, 1995: 1}
semiconductor memory: {1986: 1, 1989: 1, 1995: 1}
smalltalk-80 system: {1986: 1, 1987: 1, 1988: 1}
virtual copy: {1986: 3}
alternative implementations: {1986: 1, 1987: 1, 2006: 1}
probabilistic reasoning algorithms: {1986: 1, 2012: 1, 2014: 1}
simulation evaluation: {1986: 2, 2000: 1}
strengths weaknesses: {1986: 1, 1987: 1, 1996: 1}
object-oriented architecture: {1986: 2, 1987: 1}
two mechanisms: {1986: 1, 1996: 1, 1999: 1}
new objects: {1986: 1, 2004: 1, 2013: 1}
full power: {1986: 1, 1989: 1, 2010: 1}
implementation issues: {1986: 1, 1988: 1, 1990: 1}
preliminary results: {1986: 1, 2006: 1, 2013: 1}
computations on matrices: {1986: 2, 2000: 1}
resulting language: {1986: 1, 2012: 1, 2015: 1}
data flow: {1986: 1, 1987: 1, 2014: 1}
coding theory: {1986: 1, 1999: 2}
virtual instruments: {1986: 3}
& amp: {1986: 1, 1996: 2}
computation of transforms: {1986: 1, 1996: 1, 1999: 1}
natural language processing: {1986: 1, 1987: 1, 1995: 1}
smalltalk-80 < supscrpt: {1986: 1, 1987: 2}
graphical user interfaces: {1986: 1, 2000: 1, 2017: 1}
's evolution: {1986: 1, 2009: 2}
promising solution: {1986: 1, 2008: 1, 2012: 1}
enterprise applications: {1986: 1, 1987: 1, 2004: 1}
smalltalk-80 environment: {1986: 1, 1987: 1, 1994: 1}
wide area networks: {1986: 1, 1989: 1, 2002: 1}
probabilistic reasoning: {1986: 1, 1987: 1, 2001: 1}
semantic data: {1986: 1, 1988: 1, 1989: 1}
complex problems: {1987: 1, 2001: 1, 2011: 1}
object-oriented model: {1987: 2, 1988: 1}
smalltalk-80 language: {1987: 2, 1989: 1}
specification language: {1987: 1, 2007: 1, 2011: 1}
object-oriented framework: {1987: 1, 1988: 1, 1995: 1}
several issues: {1987: 1, 1989: 1, 1995: 1}
new framework: {1987: 1, 1996: 1, 2006: 1}
class variables: {1987: 3}
language design issues: {1987: 1, 2006: 1, 2008: 1}
industry and manufacturing: {1987: 2, 1995: 1}
signal processing systems: {1987: 1, 1989: 1, 1991: 1}
two languages: {1987: 1, 2007: 1, 2009: 1}
exploratory programming: {1987: 1, 1990: 1, 1996: 1}
two ways: {1987: 1, 1994: 1, 2014: 1}
end user: {1987: 1, 1988: 1, 1999: 1}
statistical analysis: {1987: 1, 2008: 1, 2014: 1}
organizing principles for web applications: {1987: 1, 1996: 1, 2001: 1}
existing system: {1987: 1, 1988: 1, 2015: 1}
data representation: {1987: 1, 2015: 2}
simulation support systems: {1987: 1, 1989: 1, 1997: 1}
< list: {1987: 1, 1988: 1, 1990: 1}
new features: {1987: 1, 2001: 1, 2008: 1}
many years: {1987: 1, 1989: 1, 2007: 1}
object sharing: {1987: 1, 2010: 1, 2015: 1}
various forms: {1987: 1, 1998: 1, 2012: 1}
access protection: {1988: 1, 2004: 1, 2009: 1}
software and application security: {1988: 1, 2004: 1, 2009: 1}
software security engineering: {1988: 1, 2004: 1, 2009: 1}
< /item > < item: {1988: 3}
modular smalltalk: {1988: 3}
sound objects: {1988: 3}
large system: {1988: 1, 1989: 1, 1997: 1}
entire system: {1988: 1, 1989: 1, 2015: 1}
design process: {1989: 1, 1990: 1, 1995: 1}
class definitions: {1989: 1, 2008: 1, 2010: 1}
different aspects: {1989: 1, 1990: 1, 2010: 1}
novel concept: {1989: 1, 2009: 1, 2016: 1}
inheritance mechanisms: {1989: 1, 1990: 1, 1996: 1}
complex data structures: {1989: 1, 2006: 1, 2010: 1}
document management and text processing: {1989: 1, 1992: 1, 2013: 1}
host window system: {1989: 3}
existing ones: {1989: 1, 2008: 1, 2010: 1}
two paradigms: {1989: 1, 2005: 1, 2011: 1}
powerful technique: {1989: 1, 2015: 1, 2016: 1}
code reuse: {1989: 1, 1990: 1, 1996: 1}
polymorphic type: {1989: 1, 1994: 1, 2011: 1}
type correctness: {1989: 1, 1998: 1, 2008: 1}
systems biology: {1991: 1, 1997: 1, 2013: 1}
component framework: {1990: 1, 2007: 2}
language design: {1990: 1, 2005: 1, 2007: 1}
imperative code: {1990: 1, 2014: 1, 2015: 1}
main ideas: {1990: 1, 1999: 1, 2015: 1}
concurrent object-oriented programming: {1990: 1, 1994: 1, 2016: 1}
100,000 lines: {1990: 2, 2011: 1}
system classes: {1990: 1, 2000: 1, 2004: 1}
performance advantage: {1990: 2, 2014: 1}
's perspective: {1990: 1, 1996: 1, 2013: 1}
mode framework: {1990: 3}
performance impact: {1990: 1, 2011: 2}
practical application: {1990: 1, 2007: 1, 2015: 1}
continuous mathematics: {1993: 2, 1998: 1}
system management: {1993: 1, 1996: 1, 1999: 1}
security services: {1992: 1, 2000: 1, 2004: 1}
large numbers: {1994: 1, 1997: 1, 2010: 1}
specific hypermedia system: {1994: 3}
proposed garbage collector: {1994: 3}
pure object-oriented languages: {1994: 1, 1995: 1, 1996: 1}
large applications: {1994: 1, 1997: 1, 2000: 1}
cip languages: {1994: 3}
object-oriented analysis: {1994: 1, 1996: 1, 1997: 1}
detailed design: {1994: 2, 2003: 1}
application extractor: {1994: 1, 1999: 1, 2000: 1}
current work: {1994: 1, 2011: 2}
library implementation: {1994: 1, 2009: 1, 2014: 1}
physical world: {1995: 2, 2010: 1}
prototype inheritance: {1995: 1, 2012: 1, 2016: 1}
single inheritance: {1995: 1, 2013: 2}
input / output: {1995: 1, 2011: 1, 2013: 1}
dynamically-typed languages: {1995: 1, 2004: 1, 2016: 1}
recursive types: {1995: 1, 2016: 2}
systematic way: {1995: 1, 2013: 1, 2016: 1}
abstract design: {1995: 3}
network protocol design: {1995: 3}
information flow control: {1995: 1, 2012: 1, 2014: 1}
runtime performance: {1995: 1, 2007: 1, 2015: 1}
prototype compiler: {1995: 1, 2012: 2}
ten years: {1995: 1, 2006: 1, 2011: 1}
object-oriented designs: {1995: 1, 1999: 1, 2002: 1}
data files: {1995: 3}
certain kinds: {1996: 1, 2002: 1, 2010: 1}
two problems: {1996: 1, 2000: 1, 2008: 1}
persistence service: {1996: 3}
object services: {1996: 2, 2000: 1}
object management group: {1996: 1, 1997: 1, 2000: 1}
description logics: {1996: 3}
prototype tool: {1996: 1, 2010: 2}
multiple versions: {1996: 1, 2000: 1, 2010: 1}
reuse contracts: {1996: 3}
oo paradigm: {1996: 3}
standard implementation: {1996: 2, 2015: 1}
change cases: {1996: 3}
design constraint language: {1996: 3}
application server: {1996: 1, 2004: 1, 2008: 1}
object-oriented frameworks: {1996: 1, 1997: 1, 2011: 1}
domain experts: {1996: 1, 2006: 1, 2016: 1}
interactive environment: {1996: 1, 2009: 1, 2012: 1}
individual classes: {1996: 1, 2006: 1, 2010: 1}
computing industry: {1997: 3}
relational model: {1997: 3}
object community: {1997: 3}
oo practitioners: {1997: 3}
generated code: {1997: 1, 2008: 1, 2015: 1}
multiple subtyping: {1997: 1, 2001: 1, 2013: 1}
asynchronous communication: {1997: 1, 2000: 1, 2003: 1}
software design: {1997: 1, 1999: 1, 2009: 1}
type checking: {1997: 1, 2008: 1, 2015: 1}
extended language: {1997: 1, 1998: 2}
learning curve: {1997: 2, 2017: 1}
40 %: {1998: 1, 2008: 1, 2011: 1}
heap structures: {1998: 3}
multiple times: {1998: 1, 2009: 1, 2015: 1}
single class: {1998: 1, 2008: 1, 2010: 1}
local variables: {1998: 1, 2008: 1, 2013: 1}
bytecode language: {1998: 1, 1999: 1, 2008: 1}
ten programs: {1999: 1, 2013: 1, 2016: 1}
2 %: {1999: 1, 2004: 1, 2010: 1}
object structures: {1999: 1, 2009: 1, 2012: 1}
full java: {1999: 1, 2001: 1, 2004: 1}
incomplete programs: {1999: 1, 2001: 1, 2009: 1}
base class: {1999: 1, 2004: 2}
space overhead: {1999: 1, 2003: 1, 2004: 1}
data compression: {1999: 2, 2002: 1}
mobile agents: {1999: 3}
user code: {1999: 2, 2003: 1}
boot image: {1999: 3}
role models: {1999: 3}
many cases: {1999: 1, 2010: 1, 2012: 1}
multiparty interaction: {1999: 3}
bytecode level: {2000: 1, 2009: 1, 2015: 1}
quasi-static compiler: {2000: 3}
runtime information: {2000: 1, 2006: 1, 2009: 1}
60 %: {2000: 1, 2003: 1, 2011: 1}
target software system: {2000: 3}
legacy applications: {2000: 1, 2008: 1, 2012: 1}
backward-compatible extension: {2000: 1, 2003: 1, 2004: 1}
homogeneous translation: {2000: 1, 2013: 2}
performance overhead: {2000: 1, 2012: 1, 2013: 1}
reverse engineering: {2000: 2, 2012: 1}
integral part: {2000: 1, 2005: 1, 2013: 1}
object-oriented software: {2000: 1, 2010: 1, 2011: 1}
inlined code: {2000: 3}
class loading: {2000: 2, 2001: 1}
different objects: {2001: 2, 2002: 1}
entire program: {2001: 1, 2016: 2}
runtime behavior: {2001: 1, 2005: 1, 2009: 1}
optimistic analysis: {2001: 3}
major source: {2001: 1, 2011: 1, 2015: 1}
visitor design pattern: {2001: 1, 2012: 2}
generic parts: {2001: 3}
test suite: {2001: 3}
common case: {2001: 1, 2008: 1, 2015: 1}
java software: {2001: 1, 2006: 1, 2011: 1}
memory behavior: {2002: 1, 2017: 2}
6 %: {2002: 2, 2014: 1}
increasing number: {2002: 1, 2011: 1, 2014: 1}
several applications: {2002: 1, 2011: 1, 2014: 1}
atomic operations: {2002: 1, 2006: 1, 2011: 1}
equivalence classes: {2002: 2, 2003: 1}
program size: {2002: 1, 2015: 2}
access rights: {2002: 3}
crosscutting concerns: {2003: 2, 2008: 1}
method invocation: {2003: 1, 2004: 1, 2009: 1}
nominal subtyping: {2003: 3}
first-class genericity: {2003: 3}
optimization technique: {2003: 1, 2008: 1, 2011: 1}
dataflow analysis: {2003: 1, 2004: 1, 2013: 1}
compilation time: {2003: 1, 2006: 1, 2011: 1}
apache tomcat: {2003: 1, 2005: 1, 2011: 1}
memory footprint: {2003: 2, 2015: 1}
ibm production jvm: {2003: 2, 2004: 1}
new collector: {2003: 2, 2013: 1}
small portion: {2003: 1, 2010: 1, 2015: 1}
out-of-memory exception: {2003: 1, 2010: 2}
c # java: {2003: 1, 2005: 1, 2007: 1}
live objects: {2003: 1, 2004: 1, 2008: 1}
total execution time: {2003: 2, 2013: 1}
safety properties: {2003: 1, 2008: 1, 2013: 1}
implementation evaluation: {2003: 1, 2006: 1, 2009: 1}
existing programs: {2004: 1, 2011: 1, 2012: 1}
type arguments: {2004: 1, 2009: 1, 2016: 1}
real-world java programs: {2004: 1, 2014: 1, 2015: 1}
dead objects: {2004: 1, 2008: 1, 2013: 1}
garbage collection time: {2004: 1, 2009: 1, 2010: 1}
centralized control: {2004: 3}
binary class relationships: {2004: 3}
meta-level facilities: {2004: 3}
prior languages: {2004: 3}
poor support: {2004: 1, 2005: 1, 2013: 1}
mainstream languages: {2005: 1, 2007: 1, 2010: 1}
abstract type members: {2005: 1, 2008: 1, 2009: 1}
abstract interpretation: {2005: 1, 2008: 1, 2014: 1}
base language: {2005: 2, 2008: 1}
vertical profiling: {2005: 3}
substantial performance improvements: {2005: 1, 2012: 1, 2017: 1}
much memory: {2005: 3}
source program: {2005: 1, 2012: 1, 2016: 1}
safe futures: {2005: 3}
shared data: {2005: 2, 2010: 1}
modular approach: {2005: 1, 2007: 1, 2010: 1}
dynamic aspect deployment: {2006: 3}
several orders: {2006: 1, 2008: 1, 2015: 1}
current practice: {2006: 1, 2008: 1, 2013: 1}
dacapo benchmarks: {2006: 1, 2009: 1, 2010: 1}
code size: {2006: 2, 2011: 1}
80 %: {2006: 1, 2009: 1, 2012: 1}
java &: {2006: 2, 2015: 1}
# 8482: {2006: 3}
' < sub >: {2006: 3}
java performance: {2007: 1, 2008: 2}
thread scheduling: {2007: 1, 2008: 1, 2016: 1}
nested types: {2007: 2, 2009: 1}
various kinds: {2007: 1, 2008: 1, 2013: 1}
syntactic sugar: {2007: 1, 2011: 2}
tic model: {2007: 3}
modeling tools: {2007: 1, 2010: 2}
large data structures: {2007: 1, 2012: 1, 2013: 1}
unusable value: {2007: 3}
two implementations: {2007: 1, 2012: 1, 2016: 1}
.net framework: {2007: 1, 2008: 2}
execution traces: {2007: 1, 2012: 1, 2014: 1}
dynamic language: {2007: 1, 2012: 2}
live language: {2007: 3}
program logic: {2007: 1, 2012: 1, 2015: 1}
conscientious software: {2007: 3}
performance benefits: {2008: 1, 2010: 1, 2014: 1}
several benchmarks: {2008: 1, 2013: 1, 2015: 1}
error detection: {2008: 1, 2013: 2}
strong atomicity: {2008: 3}
runtime library: {2008: 1, 2013: 1, 2016: 1}
concurrent software: {2008: 1, 2013: 1, 2014: 1}
application logic: {2008: 1, 2011: 1, 2014: 1}
api clients: {2008: 3}
protocol invariant: {2008: 3}
static-dynamic coupling: {2008: 3}
97 %: {2008: 1, 2012: 1, 2015: 1}
buffer overruns: {2008: 1, 2010: 1, 2012: 1}
strong updates: {2008: 1, 2011: 1, 2012: 1}
real applications: {2008: 1, 2011: 1, 2013: 1}
significant speedups: {2008: 1, 2011: 1, 2015: 1}
verification by model checking: {2008: 1, 2013: 1, 2014: 1}
model checking: {2008: 1, 2013: 1, 2014: 1}
partial programming: {2008: 3}
runtime efficiency: {2009: 2, 2015: 1}
specific languages: {2009: 1, 2010: 1, 2016: 1}
shared heap: {2009: 1, 2011: 1, 2013: 1}
's effectiveness: {2009: 1, 2010: 1, 2011: 1}
effect system: {2009: 2, 2017: 1}
valuable information: {2009: 1, 2012: 1, 2013: 1}
state-of-the-art techniques: {2009: 1, 2011: 1, 2016: 1}
running program: {2009: 1, 2010: 1, 2012: 1}
large-scale systems: {2009: 1, 2017: 2}
weak memory models: {2009: 1, 2014: 1, 2015: 1}
logic programming and answer set programming: {2009: 1, 2010: 1, 2011: 1}
constraint and logic languages: {2009: 1, 2010: 1, 2011: 1}
dominant thread: {2009: 3}
compile-time polymorphism: {2009: 3}
syntax errors: {2009: 2, 2011: 1}
glass box software model: {2010: 3}
high-level specification: {2010: 1, 2016: 2}
low-level languages: {2010: 1, 2011: 2}
program behaviors: {2010: 2, 2012: 1}
previous techniques: {2010: 1, 2014: 2}
race detection: {2010: 1, 2013: 2}
java heap: {2010: 3}
cell processor: {2010: 3}
general framework: {2010: 1, 2014: 1, 2015: 1}
high-level specifications: {2010: 2, 2012: 1}
exploiting parallelism: {2010: 1, 2011: 2}
small set: {2010: 1, 2011: 1, 2016: 1}
compile-time execution: {2010: 3}
atomic regions: {2010: 3}
dangling references: {2010: 3}
root cause: {2010: 1, 2017: 2}
new way: {2010: 1, 2014: 1, 2017: 1}
natural language: {2010: 2, 2015: 1}
programming language research: {2010: 2, 2013: 1}
sequential prison: {2011: 3}
sequential programs: {2011: 2, 2016: 1}
different threads: {2011: 2, 2016: 1}
linear-time dynamic programming algorithms: {2011: 3}
constraint solving: {2011: 1, 2015: 2}
dynamic nature: {2011: 3}
multiple failures: {2011: 3}
domination locking: {2011: 3}
zero initialization: {2011: 3}
exception-checking rules: {2011: 3}
pragmatic approach: {2011: 1, 2013: 1, 2014: 1}
dynamic program optimizations: {2011: 2, 2014: 1}
irregular programs: {2011: 1, 2012: 2}
significant speedup: {2011: 2, 2012: 1}
product line: {2011: 2, 2012: 1}
significant progress: {2011: 1, 2013: 1, 2015: 1}
trace selection: {2011: 3}
linux kernel: {2011: 1, 2014: 2}
abstract specification: {2011: 3}
atomic statements: {2011: 3}
high level: {2011: 1, 2015: 1, 2016: 1}
extra burden: {2011: 1, 2012: 1, 2014: 1}
thorough evaluation: {2011: 1, 2012: 1, 2016: 1}
taint tracking: {2011: 1, 2014: 2}
boilerplate code: {2011: 2, 2015: 1}
double vision problem: {2011: 3}
novel type system: {2011: 1, 2012: 1, 2014: 1}
security logic: {2011: 3}
magnitude reduction: {2012: 1, 2016: 2}
security level: {2012: 3}
's mechanical turk: {2012: 2, 2014: 1}
thread interleavings: {2012: 1, 2013: 1, 2016: 1}
extracted method: {2012: 3}
hoare logic: {2012: 2, 2016: 1}
android applications: {2012: 1, 2015: 2}
maintainability and maintenance: {2012: 1, 2013: 1, 2014: 1}
dsu systems: {2012: 3}
application threads: {2012: 2, 2013: 1}
executable code: {2012: 3}
untested interleavings: {2012: 3}
systematic exploration: {2012: 1, 2013: 1, 2014: 1}
web pages: {2012: 1, 2015: 1, 2016: 1}
dtt model: {2012: 3}
unified model: {2012: 3}
untyped code: {2012: 2, 2014: 1}
constrained kinds: {2012: 3}
energy efficiency: {2012: 1, 2013: 1, 2015: 1}
communication latency: {2012: 1, 2014: 2}
record storage alternatives: {2013: 1, 2015: 2}
concurrent code: {2013: 1, 2014: 1, 2015: 1}
several concurrent data structure: {2013: 1, 2015: 2}
client-side web applications: {2013: 1, 2015: 1, 2016: 1}
storage strategies: {2013: 3}
encrypted data: {2013: 3}
developer productivity: {2013: 2, 2014: 1}
option contracts: {2013: 3}
concurrent tasks: {2013: 3}
shared state: {2013: 3}
testing algorithm: {2013: 3}
api documents: {2013: 3}
partial-order reduction: {2013: 2, 2014: 1}
smt solvers: {2014: 2, 2016: 1}
rate types: {2014: 3}
energy consumption: {2014: 3}
reactive programming: {2014: 3}
multithreaded tests: {2014: 3}
minimum error sources: {2014: 3}
new build systems: {2014: 3}
polynomial time: {2014: 1, 2015: 2}
latent types: {2014: 3}
i/o reduction: {2014: 3}
css rules: {2015: 3}
# 8211: {2015: 3}
proposed method: {2015: 2, 2017: 1}
efficient reduction: {2015: 2, 2016: 1}
device id: {2015: 3}
execution orders: {2015: 3}
galois transformers: {2015: 3}
context-sensitive analysis: {2015: 1, 2016: 2}
numerical analysts: {2015: 3}
outlier detection: {2015: 3}
constraint solver: {2015: 2, 2016: 1}
gradual effect checking: {2015: 3}
development cycle: {2016: 3}
< em >: {2016: 2, 2017: 1}
aliasing control: {2016: 3}
< /em >: {2016: 2, 2017: 1}
stack overflow: {2017: 3}
peer parity: {2017: 3}
